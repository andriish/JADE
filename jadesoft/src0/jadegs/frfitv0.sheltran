C   08/09/82 306161127  MEMBER NAME  FRFITV   (JADEGS)      SHELTRAN
C   16/08/82 209081051  MEMBER NAME  ORFRFITV (FITSR)       SHELTRAN
C   18/02/81 208111542  MEMBER NAME  REFITV   (JETCALSR)    SHELTRAN
      SUBROUTINE FRFITV(IPTR,IPJHTL,ERRFAC)
C
C        REFIT TRACK ITRK IN 'PATR'-BANK USING ORIGIN
C                   ONLY INTERMEDIATE VALUES STORED
C                   FOR POSITION + DIRECTION AT 1. AND LAST HIT
C                   THIS ROUTINE IS ONLY USED WITH SUBSEQUENT ZRFIT
C                   USE REFITV IF ONLY R-PHI-FIT WANTED
C        P. STEFFEN                    22/08/80
C
      IMPLICIT INTEGER*2 (H)
      LOGICAL DEADCL
C
#include "cdata.for"
C
#include "cgeo1.for"
C
#include "calibr.for"
C
#include "cworkpr.for"
#include "cworkeq.for"
C
      EQUIVALENCE
     ,          (HPCO0 ,HPWRK(17)),(HPCO9 ,HPWRK(18)),(HLDCO ,HPWRK(19))
     ,         ,(ICELL ,IDWRK( 1)),(MHIT  ,IDWRK( 2)),(IRING ,IDWRK( 3))
     ,         ,(IERRCD,IDWRK( 4)),(NTRKEL,IDWRK( 5))
C
#include "cpatlm.for"
C
#include "cjdrch.for"
#include "cdsmax.for"
C
      INTEGER DATE(5), IDAY /0/
      DIMENSION ITRCLL(6), NCNCK(24), NHTRNG(3)
C
N     JET-CHAMBER AND VERTEX RESOLUTION
      DATA RESJ0 /.200/, RESV0 /.300/
C
N     MASK FOR L/R BIT IN HIT LABEL
      INTEGER MKLRT1 /Z1000000/, MKLRT2 /Z100/
C
N     MASK FOR TRACKS AT CELL WALL
      INTEGER MKBDCL(3) /Z10,Z20,Z40/
      INTEGER MKDDCL(3) /Z01,Z02,Z04/
C
C     IF(IDATA(IPTR+1).LT. 4) RETURN
C     I0 = IPTR + 1
C     I9 = IPTR + 48
C     PRINT 2001, (IDATA(I1),I1=I0,I9)
C     I0 = IPJHTL*2 + 1
C     I9 = I0 + IDATA(IPJHTL)*2 - 1
C     PRINT 2000, IPJHTL,I0,I9,(HDATA(I1),I1=I0,I9)
C     IPJETC = IDATA(IBLN('JETC'))
C     I0 = IPJETC*2 + 1
C     I9 = I0 + 109
C     PRINT 2000, IPJETC,I0,I9,(HDATA(I1),I1=I0,I9)
C2000 FORMAT('0REFIT:',3I8,/,(20(1X,Z4)))
C2001 FORMAT(1H0,2I3,I8,2(I4,3F6.1,3F6.3),
C    ,     /,14X,I3,4E13.5,F6.2,I3,4E13.5,
C    ,     /,14X,I3,2F8.3,F6.1,I3,10X,6I3,8I6,2X,Z4)
C2002 FORMAT('0FETCH:',2I3,2I5,12F9.5)
C2003 FORMAT('0ROTATION:',12F10.5)
C2004 FORMAT('0CIRC.CENTRE:',2I3, F10.5,2F10.0,F8.1,2F8.1)
C2005 FORMAT('0TRACK:',I6,/,(1X,3I6,4F8.1,I4,F6.2,2I4,F8.3,I6,F8.1))
C2006 FORMAT(1X,I6,5F8.2,F12.1,5F8.2)
C2007 FORMAT(' FETCH:',I3,9F8.4,F10.5,F6.0)
C2008 FORMAT(' FIT:',2I3,F8.2,F5.0,F10.6,F7.3,F5.1,F6.3,F5.1)
C2009 FORMAT(' JHTL:',I8,1X,Z8,3I5)
C2010 FORMAT(' HIT:',I6,12F8.2)
C2011 FORMAT('0ABERR:',10F10.6)
C2012 FORMAT('0ERROR:',10E13.6)
C2014 FORMAT('0FIT-BANK:',5F8.3,5X,5F8.3,5X,F8.5,2F8.1)
C2016 FORMAT('0ITRCLL =',6I8,/,(9X,6F8.3))
C2107 FORMAT(' SIGLM:',10F8.3)
C
N     INITIALIZATION
      DATA LBINIT /0/
      IF LBINIT .EQ. 0
      THEN
        LBINIT = 1
        PERFORM INIT
      CIF
C
N     RESERVE SPACE IN CWORK
      HPFREE = 1
      HPFRE1 = HPFREE
      HPCO0  = HPFREE
      HLDCO  = 14
      HPFREE = HLDCO*100 + HPCO0
      HPCO9 = HPFREE - 1
C
N     GET RUN #
      IPHEAD = IDATA(IQHEAD)*2
      NRUN = HDATA(IPHEAD+10)
C
N     COPY TRACK BANK
      HPTR0 = HPFREE
      CALL MVC(IWRK(HPTR0),0,IDATA(IPTR+1),0,192)
      IWRK(HPTR0+1) = 0
C
N     TRACK #
      ITRK = IDATA(IPTR+1)
C
N     CENTRE OF CIRCLE (USED FOR ANGULAR CORRECTION)
      IF IDATA(IPTR+18).EQ.1
      THEN
N       CIRCLE PARAMETERS
        ALFA  = ADATA(IPTR+21)
        CRV   = ADATA(IPTR+19)
        IF(ABS(CRV).LT.1.E-8) CRV = SIGN(1.E-8,CRV)
        RAD   =  1./CRV + ADATA(IPTR+20)
        XCIRC = COS(ALFA) * RAD
        YCIRC = SIN(ALFA) * RAD
        CHARGE = SIGN(1.,ADATA(IPTR+25))
      ELSE
N       PARABOLA PARAMETERS
        CRV   = ADATA(IPTR+22)*2.
        IF(ABS(CRV).LT.1.E-8) CRV = SIGN(1.E-8,CRV)
        ALFA  = ADATA(IPTR+19)
        XCIRC =-SIN(ALFA)/CRV + ADATA(IPTR+20)
        YCIRC = COS(ALFA)/CRV + ADATA(IPTR+21)
        CHARGE =-SIGN(1.,ADATA(IPTR+22))
      CIF
C
N     ZVERT, THETA + DIR. COSINES
      ZVERT = ADATA(IPTR+31)
      TGTH = ADATA(IPTR+30)
      CSTHI = SQRT(TGTH**2 + 1.)
      CSTH  = 1. / CSTHI
      SNTH  = CSTH * TGTH
C     PRINT 2004,ITRK,IDATA(IPTR+18),ALFA,XCIRC,YCIRC,ZVERT,TGTH,CSTHI
C
N     GET X-Y-VERTEX AND DETERMINE ERROR
      IPV    = ICALIB(10)
      XO     = ACALIB(IPV+ 1)
      YO     = ACALIB(IPV+ 3)
C     I0 = IPV + 1
C     I9 = IPV + 6
C     PRINT 2029, XO,YO,(ACALIB(I1),I1=I0,I9)
      PTRANS = ABS(0.0299792458*BKGAUS/ADATA(IPTR+25)) * .001
      RESV   = RESV0**2 + RESMS / PTRANS**2
      WGHT0  = RESJ0**2 / RESV
      F1     = ERRFAC
      IF(F1 .LT. .10) F1 = .10
      WGHT0  = WGHT0 / F1**2
C     PRINT 2029, XO,YO,WGHT0,F1,RESV,RESMS,PTRANS
C2029 FORMAT(' VERTEX',9E13.5)
C     PRINT 2011,ABERR
C
N     ROTATION ANGLE (USING LAST POINT OF TRACK)
      XT    = (ADATA(IPTR+12) + XO) * .5
      YT    = (ADATA(IPTR+13) + YO) * .5
      XX    =  ADATA(IPTR+12) - XO
      YY    =  ADATA(IPTR+13) - YO
      RR    = SQRT(XX**2+YY**2)
      CSROT = XX / RR
      SNROT = YY / RR
      XOT = XO - XT
      YOT = YO - YT
      X0   = XOT*CSROT + YOT*SNROT
      Y0   =-XOT*SNROT + YOT*CSROT
      XOR  =- XT*CSROT -  YT*SNROT
      YOR  =  XT*SNROT -  YT*CSROT
C     PRINT 2003, CSROT,SNROT,XX,YY,XT,YT,X0,Y0,XO,YO,WGHT0
C
N     FILL CELL ARRAY
      PERFORM SELCLL
C
N     LOOP OVER ALL CELLS + FETCH HITS
      KCLL = 0
      NHIT = 0
      IPCO = HPCO0
C
N     LOOP OVER RINGS
      JRING = 0
N     TRACKS AT CELL WALLS
      LBCELL = 0
      REPEAT
      JRING = JRING + 1
        NHTRNG(JRING) = 0
        NHRNG = 0
        NCLL = 0
        REPEAT
        NCLL = NCLL + 1
        KCLL = KCLL + 1
          JCELL = ITRCLL(KCLL)
          IF JCELL.NE.0
          THEN
            PERFORM FETCH
            NHRNG = NHRNG + JHIT
          CIF
        UNTIL NCLL.EQ.2
N       SET LABEL FOR TRACK AT CELL BOUND.
        IF(JCELL.NE.0) LBCELL = LOR(MKBDCL(JRING),LBCELL)
      UNTIL KCLL.EQ.6
      HPCO9 = IPCO - 1
C     PRINT 2005, LBCELL,(WRK(I),I=HPCO0,HPCO9)
C
N     1. PARABOLA FIT
N     LAST RING INCLUDED IN FIT
      JRINGL = 3
      PERFORM FPARA0
C
N     RELABEL HITS
      ALBLM1 = 0.6
      ALBLM2 = 3.0
      PERFORM LABEL
C     PRINT 2005, LBCELL,(WRK(I),I=HPCO0,HPCO9)
C
N     REFIT PARABOLA
      PERFORM FPARA0
C
N     RELABEL HITS
      PERFORM LABEL
C     PRINT 2005, LBCELL,(WRK(I),I=HPCO0,HPCO9)
C
N     SET UP FIT-BANK
      IF SIG.LT.1.
      THEN
        PERFORM FITBNK
      CIF
C
N     CHECK IF BAD FIT AND LOW MOMENTUM
      IF ABS(PAR1).GT..00030 .AND. NHTRNG(1)+NHTRNG(2).GT.16
      THEN
        ALBLM1 = 1.5
        ALBLM2 = 3.0
        PERFORM LABEL
        JRINGL = 2
        PERFORM FPARA0
        ALBLM1 = 0.6
        PERFORM LABEL
        PERFORM FPARA0
        PERFORM LABEL
        IF SIG.LT..10
        THEN
          PERFORM FITBK1
          IWRK(IP+ 4) = 32
        CIF
      CIF
      IF ABS(PAR1).GT..00150 .AND. NHTRNG(1)+NHTRNG(2).GT.9
      THEN
        ALBLM1 = 1.5
        ALBLM2 = 3.0
        PERFORM LABEL
        JRINGL = 1
        NHTFIT = NHTRNG(1)
        IF NHTFIT.LE.5
        THEN
          NHTFIT = NHTFIT + NHTRNG(2)
          JRINGL = 2
        CIF
        IF NHTFIT.GT.9
        THEN
          PERFORM FPARA0
          ALBLM1 = 0.6
          PERFORM LABEL
          PERFORM FPARA0
          PERFORM LABEL
          IF SIG.LT..10
          THEN
            PERFORM FITBK1
            IWRK(IP+ 4) = 48
          CIF
        CIF
      CIF
C
      HPFREE = HPFRE1
      RETURN
C
N     *************************
N     *      F P A R A 0      *
N     *************************
C
C
N     PARABOLA FIT THROUG ORIGIN
      PROC FPARA0
C
N     GET EQUATIONS
N     WEIGHT ORIGIN AS POINT OF PARABOLA
      S0 = WGHT0
      S1 = X0*WGHT0
      S2 = S1*X0
      S3 = S2*X0
      S4 = S3*X0
      S7 = Y0 * WGHT0
      S6 = S7*X0
      S5 = S6*X0
      IPCO = HPCO0
      REPEAT
       IF IWRK(IPCO+ 10).EQ.0 .AND. IWRK(IPCO+12).LE.JRINGL
       THEN
          X = WRK(IPCO+3)
          Y = WRK(IPCO+4)
          X2 = X**2
          S1 = S1 + X
          S2 = S2 + X2
          S3 = S3 + X*X2
          S4 = S4 + X2**2
          S5 = S5 + Y*X2
          S6 = S6 + Y*X
          S7 = S7 + Y
          S0 = S0 + 1.
        CIF
      IPCO = IPCO + HLDCO
      UNTIL IPCO.GT.HPCO9
      IF S0.LT.2.5
      THEN
        SIG = 1000.
      ELSE
C
N       SOLVE EQUATIONS FOR PARABOLA FIT
        F1 = 1. / S4
        XX12 = S3*F1
        XX13 = S2*F1
        YY1  = S5*F1
        XX22 = S2 - S3*XX12
        XX23 = S1 - S3*XX13
        YY2  = S6 - S3*YY1
        XX32 = S1 - S2*XX12
        XX33 = S0 - S2*XX13
        YY3  = S7 - S2*YY1
        IF XX22.GT.XX32
        THEN
          XX23 = XX23 / XX22
          YY2  = YY2  / XX22
          PAR3 = (YY3 - XX32*YY2) / (XX33 - XX32*XX23)
          PAR2 = YY2 - XX23*PAR3
        ELSE
          XX33 = XX33 / XX32
          YY3  = YY3  / XX32
          PAR3 = (YY2 - XX22*YY3) / (XX23 - XX22*XX33)
          PAR2 = YY3 - XX33*PAR3
        CIF
        PAR1 = YY1 - XX12*PAR2 - XX13*PAR3
        DEG = S0 - WGHT0 - 2.
C
C
N       CALC. CHISQ + SOLVE L/R AMBIGUITY
        CHISQ = 0.
        DCHIM1 = 0.
        IHITM1 = 0
        XST    = 999999.
        XEN    =-999999.
        IPCO = HPCO0
        REPEAT
         IF IWRK(IPCO+ 10).EQ.0 .AND. IWRK(IPCO+12).LE.JRINGL
         THEN
            X = WRK(IPCO+3)
            IF(X.LT.XST) XST = X
            IF(X.GT.XEN) XEN = X
            Y = WRK(IPCO+4)
            F = (PAR1 *X + PAR2 )*X + PAR3
            DCHI = Y - F
            WRK(IPCO+13) = DCHI
N           SUM FOR RMS
            CHISQ = CHISQ + DCHI**2
N           KEEP BIGGEST RMS
C           IF ABS(DCHI).GE.DCHIM1
C           THEN
C             DCHIM1 = ABS(DCHI)
C             IHITM1 = IPCO
C           CIF
C     PRINT 2006, IPCO,X,Y,F,DCHI,CHISQ
          CIF
        IPCO = IPCO + HLDCO
        UNTIL IPCO.GT.HPCO9
        SIG    =      CHISQ  / DEG
C     PRINT 2008, ITRK,XST,SIG,DEG,PAR1,PAR2,PAR3,WGHT0,Y0
C
N       SET LIMIT FOR SIGMA
        SIGLM = TRELLM(16)**2
      CIF
C
      CPROC
C
N     *************************
N     *      S E L C L L      *
N     *************************
C
C
N     SELECT CELLS CONTAINING TRACK
      PROC SELCLL
C
        FOR I=1,6
          ITRCLL(I) = 0
        CFOR
        IPC0 = IPTR + 34
        IPC9 = IPC0 +  5
        ICELL = 0
        FOR IPC = IPC0,IPC9
          JCELL = IDATA(IPC)
          IF JCELL.GT. 0 .AND. JCELL.LE.96
          THEN
            JRING = 1
            IF(JCELL.GT.24) JRING = 2
            IF(JCELL.GT.48) JRING = 3
            JPC = JRING*2 - 1
            IF ITRCLL(JPC).EQ.0
            THEN
              ITRCLL(JPC) = JCELL
            ELSE
              IF(ITRCLL(JPC).NE.JCELL) ITRCLL(JPC+1) = JCELL
            CIF
            ICELL = JCELL
            IRING = JRING
          CIF
        CFOR
C
C     PRINT 2016, ITRCLL
      CPROC
C
N     *************************
N     *      F E T C H        *
N     *************************
C
C
N     FETCH HITS IN CELL
      PROC FETCH
C
N       DIR. OF SENSEW. + DRIFTSP.
        IF JRING.NE.3
        THEN
          IC1 = JCELL
          IF(IC1.GT.24) IC1 = IC1 - 24
          CSROT0 = DIRWR1(IC1,1)
          SNROT0 = DIRWR1(IC1,2)
        ELSE
          IC1 = JCELL - 48
          CSROT0 = DIRWR3(IC1,1)
          SNROT0 = DIRWR3(IC1,2)
        CIF
        DRICS  = TRMATC(JCELL,2)
        DRISN  = TRMATS(JCELL,2)
        DRITG  = DRISN/DRICS
        DRISNF = DRISN * .05
C
N       LOAD RADIUS AND WIRE SPACING
        R0 = FSENSW(JRING)
        DR = RINCR (JRING)
C
N       ANGLE OF TRACK IN RING
        R1   = DR*7.5 + R0
        DX   = R1 * CSROT0 - XCIRC
        DY   = R1 * SNROT0 - YCIRC
        RR   = SQRT(DX**2 + DY**2) * CHARGE
        CSB  = DX / RR
        SNB  = DY / RR
        TGB  = CSB/SNB
C
N       SET DRIFT SPACE BIN
        DSBIN1 = DRIVEL(JCELL,1)
        IF(NRUN.GT.100) DS0 = T0FIX(JRING)*DSBIN1*64.
        IF(NRUN.LE.100) DS0 = DSBIN1*.5
N       ANGLE(TRACK,DRIFT DIRECT.)
        TANBET = ABS((TGB-DRITG)/(TGB*DRITG+1.))
C     PRINT 2007, JCELL,CSROT0,SNROT0,DRICS,DRISN,CSB,SNB,CHARGE,TANBET,
C    ,            DSBIN1,DS0
N       CORRECTION CONSTANTS FOR JCELL
C
        IPJCOR = ICALIB(5) + JCELL
        CCST01 = ACALIB(IPJCOR    ) * TANBET
        CCST02 = ACALIB(IPJCOR+ 96) * TANBET
        CCST11 = ACALIB(IPJCOR+192)
        CCST12 = ACALIB(IPJCOR+288)
        CCST21 = ACALIB(IPJCOR+384)
        CCST22 = ACALIB(IPJCOR+480)
        CCST51 = ACALIB(IPJCOR+576) * 10.
        CCST52 = ACALIB(IPJCOR+672) / 121.15
        CCST61 = ACALIB(IPJCOR+768) * 10.
        CCST62 = ACALIB(IPJCOR+864) / 121.15
C     PRINT 2002, JRING,JCELL,IP,IPJCOR,CCST01,CCST02,CCST11,CCST12,
C    ,            CCST21,CCST22,CCST51,CCST52,CCST61,CCST62
N       COUNTER FOR NUMBER OF HITS FOUND
        JHIT = 0
        NHIT   = 0
        NHGOOD = 0
N       PRESET LAST LAYER
        ILAYL =-99
N       LOOP OVER ALL HITS OF CELL
        IPCO = IPCO - HLDCO
        IPJETC = IDATA(IQJETC)*2
        IP0    = IPJETC + 100
        IPCLL  = IPJETC + 2 + JCELL
        IP     = HDATA(IPCLL  ) + IP0
        IP9    = HDATA(IPCLL+1) + IP0
        IPHL   = IPJHTL + 2 + HDATA(IPCLL)/4
C     PRINT 2002, JRING,JCELL,IP,IP9,TGB,SNB,CSB,DRISN,DRICS
        WHILE IP.LT.IP9
C
N         CHECK TRACK # OF HIT LABEL
          LB   = IDATA(IPHL)
          ITR1 = LAND(SHFTR(LB,17),127)
          ITR2 = LAND(SHFTR(LB, 1),127)
C     PRINT 2009, IPHL,LB,ITR1,ITR2,ITRK
          IF ITR1.EQ.ITRK .OR. ITR2.EQ.ITRK
          THEN
C
N           L/R FROM HIT LABEL
            LBLR = 0
            IF(ITR1.EQ.ITRK) LBLR = LAND(LB,MKLRT1)
            IF(ITR2.EQ.ITRK) LBLR = LAND(LB,MKLRT2)
            LBSIDE =-1
            IF(LBLR.NE.0) LBSIDE = 1
            LBLR = LBSIDE
C
            IWIR = HDATA(IP)
            IWIR = SHFTR(IWIR,3)
N           LAYER NUMBER WITHIN RING 3
            ILAY = LAND(IWIR,15)
N           AMPLITUDES
            IAMPL = HDATA(IP+1)
            IAMPR = HDATA(IP+2)
N           DRIFT SPACE
            DS =(HDATA(IP+3)) * DSBIN1
C     DATA NPRHT /0/
C     NPRHT = NPRHT + 1
C     IF(NPRHT.LE.25) PRINT 2019, IWIR,ILAY,JCELL,HDATA(IP+3),DS,DSBIN1
C2019 FORMAT(' HIT ',4I6,F6.1)
            X1   = ILAY * DR + R0
            Z1   = X1*TGTH + ZVERT
N           CORRECTION FOR TOF + PROPAG. ALONG WIRE
            DDS = (1222.9-ABS(Z1))*ABERR(1) + ABERR(6)*R1*CSTHI
            DSC = DS - DDS + DS0
            Y1   = SWDEPL
            IF(LAND(ILAY,1).NE.0) Y1 =-Y1
            Y1   = (7-ILAY)*(CCST52*Z1+CCST51) - CCST62*Z1-CCST61 + Y1
            X    = X1*CSROT0 - Y1*SNROT0
            Y    = X1*SNROT0 + Y1*CSROT0
            IF DS.LE.DRC
            THEN
              IF DS.LT.4.0
              THEN
                IF DS.GT.DSD1
                THEN
                  DSC = (DSD1-DSD0)*DRV0 + (DS-DSD1)*DRV1
                ELSE
                  DSC = (DS-DSD0)*DRV0
                CIF
                IF(DSC.LT.0.1) DSC = 0.1
              CIF
              DXR  = DSC * CSB
              DYR  = DSC * SNB
              DXL =-DXR
              DYL =-DYR
            ELSE
C
N             EDGE WIRE FIELD DISTORTION
              IF ILAY.LT. 3
              THEN
                DILAY =-(ILAY- 3)**2
                DSCL  = (DILAY*CCST11 + 1.) * DSC
                DSCR  = (DILAY*CCST12 + 1.) * DSC
              ELSE
              IF ILAY.GT.12
              THEN
                DILAY =-(ILAY-12)**2
                DSCL  = (DILAY*CCST21 + 1.) * DSC
                DSCR  = (DILAY*CCST22 + 1.) * DSC
              ELSE
                DSCL = DSC
                DSCR = DSC
              CIF
              CIF
C
N             FIELD DISTORTIONS AT LARGE DRIFT TIMES
              IF DSC.GT.ABERR(7)
              THEN
                DWIR  = ILAY - 7.5
                DWIRC = DSC*DRISNF
                DWIRL = DWIR + DWIRC
                DWIRR = DWIR - DWIRC
                DSCL  = (DSCL-ABERR(7))*DWIRL*CCST01 + DSCL
                DSCR  =-(DSCR-ABERR(7))*DWIRR*CCST02 + DSCR
              CIF
              DXR  = (DSCR-DRC)*DRISN + DRC*CSB
              DYR  = (DSCR-DRC)*DRICS + DRC*SNB
              DXL  =-(DSCL-DRC)*DRISN - DRC*CSB
              DYL  =-(DSCL-DRC)*DRICS - DRC*SNB
            CIF
C     PRINT 2010, ILAY,DS,DSC,DSCL,DSCR,XL,XR,X,Y,DXL,DXR,DYL,DYR
            XL   = DXL + X - XT
            YL   = DYL + Y - YT
            XXL  = XL*CSROT + YL*SNROT
            YYL  =-XL*SNROT + YL*CSROT
            XR   = DXR + X - XT
            YR   = DYR + Y - YT
            XXR  = XR*CSROT + YR*SNROT
            YYR  =-XR*SNROT + YR*CSROT
C
N           CALCULATE Z COORDINATE
            IF IAMPR.LE.0.OR.IAMPL.LE.0
            THEN
              ZZ     = 0.
              LZGOOD = 16
            ELSE
              ZZ = IAMPR + IAMPL
              ZZ = FLOAT(IAMPR-IAMPL) * ZAL*.5 / ZZ
              LZGOOD = 0
              IF(ABS(ZZ).GT.1250.) LZGOOD = 16
            CIF
N           SET ARRAY
C     PRINT 2010, ILAY,DS,XXL,YYL,X1,Z1,XXR,YYR,Y1
C
N           CHECK IF LEFT + RIGHT SOLUTION POSSIBLE
            NLRSOL = 1
            IF(DS.LT.2.0) NLRSOL = 2
C
N           LOOP OVER LEFT +/OR RIGHT SOLUTION
            ILRSOL = 0
            REPEAT
            ILRSOL = ILRSOL + 1
C
N             SELECT SIDE
              IF NLRSOL.EQ.1 .AND. LBSIDE.LT.0  .OR.
     ?           NLRSOL.EQ.2 .AND. ILRSOL.EQ.1
              THEN
N               LEFT SIDE
                LBSIDE =-1
                XX  = XXL
                YY  = YYL
              ELSE
N               RIGHT SIDE
                LBSIDE = 1
                XX  = XXR
                YY  = YYR
              CIF
C
N             HIT QUALITY:
              LBGOOD = 0
              IF(LBSIDE.NE.LBLR) LBGOOD = 1
N             NEW LAYER?
              IF ILAY.NE.ILAYL .OR. LBGDL.LE.1.AND.LBGOOD.LE.1
              THEN
                LBREG = 1
N               INCREASE HIT COUNTER
                JHIT = JHIT + 1
                IPCO = IPCO + HLDCO
              ELSE
N               2 HITS IN SAME LAYER, SELECT CLOSEST
                LBREG = 0
                IF(LBGOOD.LT.IWRK(IPCO+10)) LBREG = 1
              CIF
N             REGISTER NEW HIT?
              IF LBREG.NE.0
              THEN
                NHIT   = NHIT   + 1
                IF(LBGOOD.LE.1) NHGOOD = NHGOOD + 1
                IWRK(IPCO   ) = ILAY
                IWRK(IPCO+ 1) = IP
                IWRK(IPCO+ 2) = LBSIDE
                WRK (IPCO+ 3) = XX
                WRK (IPCO+ 4) = YY
                WRK (IPCO+ 5) = ZZ
                WRK (IPCO+ 6) = XX - X0
                IWRK(IPCO+ 7) = LZGOOD
                WRK (IPCO+ 8) = DS
                IWRK(IPCO+ 9) = JCELL
                IWRK(IPCO+10) = LBGOOD
                WRK (IPCO+11) = TGB
                IWRK(IPCO+12) = JRING
                WRK (IPCO+13) = 0.
                ILAYL = ILAY
                LBGDL = LBGOOD
                NHTRNG(JRING) = NHTRNG(JRING) + 1
              CIF
C
            UNTIL ILRSOL.GE.NLRSOL
C
          CIF
C
        IPHL = IPHL + 1
        IP   = IP   + 4
        CWHILE
N       SET IPCO TO 1. FREE LOCATION
        IPCO = IPCO + HLDCO
C
N     MASK FOR TRACKS AT CELL WALL + IN DEAD CELLS
C
N       SET LABEL FOR DEAD CELL
        IF NHIT.LE.2
        THEN
          IF DEADCL(JCELL,NRUN)
          THEN
            LBCELL = LOR(LBCELL,MKDDCL(JRING))
            JHIT = 16
            NHIT = 16
C     PRINT 2019, JCELL,JRING,NRUN,LBCELL
          CIF
        CIF
C
      CPROC
C
N     *************************
N     *      F I T B N K      *
N     *************************
C
C
N     SET UP FIT-BANK
      PROC FITBNK
C
N     START + END POINTS
      YST  = (PAR1 *XST + PAR2 )*XST + PAR3
      YEN  = (PAR1 *XEN + PAR2 )*XEN + PAR3
N     DIRECTION AT START + END POINT
      TGST = PAR1*XST*2 + PAR2
      DXST = 1./SQRT(TGST**2+1.)
      DYST = DXST * TGST
      TGEN = PAR1*XEN*2 + PAR2
      DXEN = 1./SQRT(TGEN**2+1.)
      DYEN = DXEN * TGEN
N     MIN. OF PARABOLA
      XMIN = -PAR2*.5 / PAR1
      YMIN = (PAR1*XMIN + PAR2)*XMIN + PAR3
C
N     CURVATURE + ERROR
      CURV =-PAR1 * 2.
      DET = (S2*S0-S1*S1)*S4 + (S2*S1-S3*S0)*S3 + (S3*S1-S2*S2)*S2
      SIG11 = (S2*S0 - S1*S1)/DET
      SIG22 = (S4*S0 - S2*S2)/DET
      SIG33 = (S4*S2 - S3*S3)/DET
      SIG12 = (S3*S0 - S2*S1)/DET
      SIG13 = (S3*S1 - S2*S2)/DET
      SIG23 = (S4*S1 - S3*S2)/DET
C     PRINT 2012, DET,SIG11,SIG22,SIG33,SIG12,SIG13,SIG23,SIG
C
C
C     PRINT 2014, XST,YST,DXST,DYST,TGST,XEN,YEN,DXEN,DYEN,TGEN,CURV
C
N     FILL FIT-BANK
      IP    = HPTR0 - 1
      IWRK(IP+ 1) = ITRK
      IWRK(IP+ 2) = 32
      IWRK(IP+ 3) = IDAY
      IWRK(IP+ 4) = 16
      WRK (IP+ 5) = XST *CSROT - YST *SNROT + XT
      WRK (IP+ 6) = XST *SNROT + YST *CSROT + YT
      WRK (IP+ 7) = XST - X0
      WRK (IP+ 8) = (DXST*CSROT - DYST*SNROT)
      WRK (IP+ 9) = (DXST*SNROT + DYST*CSROT)
      WRK (IP+10) = SNTH
      IWRK(IP+11) = 0
      WRK (IP+12) = XEN *CSROT - YEN *SNROT + XT
      WRK (IP+13) = XEN *SNROT + YEN *CSROT + YT
      WRK (IP+14) = XEN - X0
      WRK (IP+15) = (DXEN*CSROT - DYEN*SNROT)
      WRK (IP+16) = (DXEN*SNROT + DYEN*CSROT)
      WRK (IP+17) = SNTH
      IWRK(IP+18) = 2
      WRK (IP+19) = ATAN2(SNROT,CSROT)
      WRK (IP+20) = XMIN*CSROT - YMIN*SNROT + XT
      WRK (IP+21) = XMIN*SNROT + YMIN*CSROT + YT
      WRK (IP+22) = PAR1
C     IF(SIG  .LT.0) PRINT 2021,WRK(IP+1),S0,SIG
C2021 FORMAT(' -VE SQRT:',I4,5E13.5)
      WRK (IP+23) = SQRT(SIG)
      IWRK(IP+24) = S0 + .001
      WRK (IP+25) = CURV
C     IF(SIG11.LT.0) PRINT 2021,WRK(IP+1),S0,SIG,SIG11
      WRK (IP+26) = SQRT(SIG*SIG11) * 2.
      WRK (IP+27) = CURV
      WRK (IP+28) = CURV
      WRK (IP+31) = XOR - X0
C     I0 = IP+ 1
C     I9 = IP+48
C     PRINT 2001,(WRK(I1),I1=I0,I9)
      CPROC
C
N     *************************
N     *      F I T B K 1      *
N     *************************
C
C
N     CHANGE FIT BANK (1.POINT)
      PROC FITBK1
C
N     START POINT
      YST  = (PAR1 *XST + PAR2 )*XST + PAR3
N     DIRECTION AT START POINT
      TGST = PAR1*XST*2 + PAR2
      DXST = 1./SQRT(TGST**2+1.)
      DYST = DXST * TGST
N     MIN. OF PARABOLA
      XMIN = -PAR2*.5 / PAR1
      YMIN = (PAR1*XMIN + PAR2)*XMIN + PAR3
C
N     CURVATURE + ERROR
      CURV =-PAR1 * 2.
      DET = (S2*S0-S1*S1)*S4 + (S2*S1-S3*S0)*S3 + (S3*S1-S2*S2)*S2
      SIG11 = (S2*S0 - S1*S1)/DET
      SIG22 = (S4*S0 - S2*S2)/DET
      SIG33 = (S4*S2 - S3*S3)/DET
      SIG12 = (S3*S0 - S2*S1)/DET
      SIG13 = (S3*S1 - S2*S2)/DET
      SIG23 = (S4*S1 - S3*S2)/DET
C     PRINT 2012, DET,SIG11,SIG22,SIG33,SIG12,SIG13,SIG23,SIG
C
C     PRINT 2014, XST,YST,DXST,DYST,TGST,XEN,YEN,DXEN,DYEN,TGEN,CURV,
C    ,            XMIN,YMIN
C
N     FILL FIT-BANK
      IP    = HPTR0 - 1
      WRK (IP+ 5) = XST *CSROT - YST *SNROT + XT
      WRK (IP+ 6) = XST *SNROT + YST *CSROT + YT
      WRK (IP+ 7) = XST - X0
      WRK (IP+ 8) = (DXST*CSROT - DYST*SNROT)
      WRK (IP+ 9) = (DXST*SNROT + DYST*CSROT)
      WRK (IP+10) = SNTH
      IWRK(IP+18) = 2
      WRK (IP+19) = ATAN2(SNROT,CSROT)
      WRK (IP+20) = XMIN*CSROT - YMIN*SNROT + XT
      WRK (IP+21) = XMIN*SNROT + YMIN*CSROT + YT
      WRK (IP+22) = PAR1
C     IF(SIG  .LT.0) PRINT 2022,WRK(IP+1),S0,SIG
C2022 FORMAT(' -VE SQRT(1):',I4,5E13.5)
      WRK (IP+23) = SQRT(SIG)
      IWRK(IP+24) = S0 + .001
      WRK (IP+25) = CURV
C     IF(SIG11.LT.0) PRINT 2022,WRK(IP+1),S0,SIG,SIG11
      WRK (IP+26) = SQRT(SIG*SIG11) * 2.
      WRK (IP+27) = CURV
C     I0 = IP+ 1
C     I9 = IP+48
C     PRINT 2001,(WRK(I1),I1=I0,I9)
      CPROC
C
C
N     *************************
N     *      L A B E L        *
N     *************************
C
C
N     LABEL USED HITS
      PROC LABEL
C
N       PRESET LAST HIT POINTER
        IWL = -999
C
N       PRESET LAST HIT POINTER
        IWL = -999
        FOR IP = HPCO0,HPCO9,HLDCO
          IW0 = IWRK(IP)
          X   = WRK(IP+3)
          Y   = WRK(IP+4)
          F   = (PAR1*X + PAR2)*X + PAR3
          DF  = F - Y
N         SELECT CLOSEST HIT
          LBGOOD = 4
          IF(ABS(DF).LT.ALBLM2) LBGOOD = 1
          IF(ABS(DF).LT.ALBLM1) LBGOOD = 0
          IWRK(IP+ 10) = LBGOOD
          WRK (IP+13) = DF
C
N         CHECK IF 2 HITS FROM SAME WIRE
          IF IWL.EQ.IW0
          THEN
N           SELECT CLOSEST HIT
            IF ABS(DFL).LT.ABS(DF)
            THEN
              IWRK(IP +10) = 16
            ELSE
              IWRK(IPL+10) = 16
            CIF
          CIF
N         STORE LAST POINTERS + DF
          IWL = IW0
          IPL = IP
          DFL = DF
        CFOR
C
      CPROC
C
C
N     *************************
N     *      I N I T          *
N     *************************
C
C
N     INITIALIZE CONSTANTS
      PROC INIT
C
        IQJETC = IBLN('JETC')
        IQHEAD = IBLN('HEAD')
C
        CALL DAY2(DATE)
        IDAY = DATE(1)*1000 + DATE(2)
C
N       MULT. SCATTERING CONSTANTS
        RESMS = .020**2/2. * .16 * (1. + ALOG10(.16) / 9) * 155.45**2
C
N       RADIUS AROUND WIRE FOR CORR. OF DRIFTSPACE
        DRC = RINCR(1)*.5 * DRICOS
C       CONST. FOR VAR. OF DRIFT VEL.
        IPHEAD = IDATA(IQHEAD)*2
        NRUN = HDATA(IPHEAD+10)
        IF NRUN.LE.100
        THEN
          DSD0   = .0
          DSD1   = 5.0
          DSD2   = 5.0
          DRV0   = 1.0
          DRV1   = 1.0
        ELSE
          DSD0   =-.63
          DSD1   = 1.8
          DSD2   = 4.0
          DRV0   = 0.8
          DRV1   = (DSD2 - (DSD1-DSD0)*DRV0) / (DSD2-DSD1)
        CIF
      CPROC
C
      END
