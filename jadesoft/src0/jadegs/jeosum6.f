C   22/03/97 703221932  MEMBER NAME  JEOSUM6  (JADEGS)      FORTRAN
C   22/03/97 703221923  MEMBER NAME  JBKALSAV (JADEGS)      FORTRAN
//F11LHO   JOB 10622622,OLSSON,MSGLEVEL=(0,0),TIME=(0,05),CLASS=E
//*MAIN RELPRI=HIG,ORG=EXT
//*EXEC NEWFAST
// EXEC FCLG,PARM.FORT=XL,
//  REGION.GO=500K
      DIMENSION IWORD(30000)
C
      NREC = 0
      NUNIT = 2
      LUNIT = 3
10    CONTINUE
      READ(NUNIT,ERR=1,END=2) NWORD,(IWORD(I),I=1,NWORD)
      NREC = NREC + 1
      IF(NREC.LT.10) WRITE(6,630) NWORD,(IWORD(J),J=1,10)
630   FORMAT(' ',I12,10I10)
      WRITE(LUNIT) NWORD,(IWORD(I),I=1,NWORD)
      GO TO 10
C
    1 WRITE(6,1020) NREC
 1020 FORMAT(' READ ERROR AT RECORD ',I10)
      STOP
    2 WRITE(6,1030) NREC
1030  FORMAT(' END OF RECORD AT RECORD NR ',I10)
      STOP
      END
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=FAST,DSN=R01UTL.HBOOK321.L
//            DD DSN=R01UTL.CERNLIB,DISP=SHR,UNIT=FAST
//            DD DSN=DESYLIB,DISP=SHR,UNIT=FAST
//GO.SYSIN    DD *
//*                        INPUT:
//GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.KB81121A
//*                        OUTPUT:
//*GO.FT03F001 DD DUMMY,DCB=R01DCB.VBS
//GO.FT03F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.ASTART0
C   22/03/97 703221923  MEMBER NAME  JBKALTST (JADEGS)      FORTRAN
//F11LHOTT JOB 10622622,CLASS=E,TIME=(0,30),MSGLEVEL=(0,0)
// EXEC NEWLIB,PS='F11LHO.JADEGS',
// OPT=2,FORT=XL
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ C KLREAD
./ I 8300
         WRITE(6,8787) NDUUM,ITM1,KUNIT
 8787    FORMAT(1X,' NDUUM,ITM,UNIT = ',2I12)
./ I 8400
         WRITE(6,8787) NDUUM,ITM2,LUNIT
./ I 10300
         JCALL=ICALL/12
         KCALL=ICALL-12*JCALL+1
         ITIME(1)=0
         ITIME(2)=0
         ITIME(3)=0
         ITIME(4)=1
         ITIME(5)=KCALL
         ITIME(6)=1979+JCALL
./ I 10400
         WRITE(6,9787) ICALL,ITIME,IEVTIM
 9787    FORMAT(1X,' ICALL, ITIME, IEVTIM = ',I3,6I5,I10)
         ICALL=ICALL+1
./ C USERCP
./ I 4100
C--      MAXIMUM NUMBER OF EVENTS TO BE WRITTEN OUT.
      NWRTMX=100000
C--      MINIMUM AND MAXIMUM RUN NUMBERS TO BE ACCEPTED.
      NRUNMN=0
      NRUNMX=100000
C--      MINIMUM AND MAXIMUM EVENT NUMBERS TO BE ACCEPTED.
C--      IF A MINIMUM RUN NUMBER GREATER THAN 0 HAS BEEN
C--      SPECIFIED, THE MINIMUM EVENT NUMBER CUT APPLIES ONLY TO
C--      THE FIRST ACCEPTED RUN. SIMILARLY, IF A MAXIMUM RUN
C--      NUMBER LESS THAN 50000 IS GIVEN, THE MAXIMUM EVENT NUMBER
C--      CUT APPLIES ONLY TO THE LAST RUN ACCEPTED.
      NEVTMN=0
      NEVTMX=1000000
C--      MINIMUM AND MAXIMUM RECORD NUMBERS FROM THE BEGINNING
C--      OF THE INPUT DATA SET FOR WHICH THE CORRESPONDING RECORDS
C--      MAY BE WRITTEN OUT.
      NRECMN=0
      NRECMX=1000000
C--      IFPRNT=M AND ILPRNT=N SPECIFY THAT FOR THE MTH THROUGH
C--      THE NTH EVENTS TO BE WRITTEN OUT A PRINTOUT OF THE EVENT
C--      RECORD WILL BE MADE. NOT MORE THAN 10 PRINTOUTS CAN BE MADE.
      IFPRNT=1
      ILPRNT=0
// EXEC FLG,PARM.LKED='MAP,LIST',REGION=750K
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=FAST,DSN=&&LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F11LHO.JADEGL
//            DD DISP=SHR,UNIT=FAST,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,UNIT=FAST,DSN=JADELG.LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F22ALL.JADEMUL
//            DD DISP=SHR,UNIT=FAST,DSN=F1EBLO.BOSLIB.L
//            DD DISP=SHR,UNIT=FAST,DSN=R01UTL.CERNLIB
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0,USERCP)
//GO.FT10F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.ASTART0
//GO.FT11F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.NEWSTRT0
//GO.FT21F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.KW81043
//GO.FT22F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.NEWUPDT0
//GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F22ELS.TPMH630
//GO.FT03F001 DD DUMMY
C   22/03/97 703221923  MEMBER NAME  JBLINK   (JADEGS)      FORTRAN
//F11LHOLK JOB '10622622',PRODUC,CLASS=E,TIME=(0,15)
//*MAIN RELPRI=HIG,LINES=(2),ORG=EXT
//*
//LINK EXEC FCL,PARM.LKED='LIST,MAP,XREF'
//FORT.SYSIN DD *
#include "jdmain0.for"
//*
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=FAST,DSN=F11PST.JADELD
//            DD DISP=SHR,UNIT=FAST,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,UNIT=FAST,DSN=F11LHO.JADEGL
//            DD DISP=SHR,UNIT=FAST,DSN=JADELG.LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F22ALL.JADEMUL
//            DD DISP=SHR,UNIT=FAST,DSN=F1EBLO.BOSLIB.L
//            DD DISP=SHR,UNIT=FAST,DSN=R01UTL.HBOOK321.L
//            DD DISP=SHR,UNIT=FAST,DSN=R01UTL.CERN.KERNLIB4
//LKED.SYSLMOD DD DISP=SHR,UNIT=FAST,DSN=F11PST.JADELD(LINKM1)
//LKED.SYSIN DD *
 INCLUDE SYSLIB(USZTRIG,ZTRIG2,DUMDU1)
//*
C   22/03/97 703221923  MEMBER NAME  JBLKMP   (JADEGS)      FORTRAN
//F11LHOLX JOB 10622622,LKED,TIME=(0,10),CLASS=E
//*MAIN RELPRI=HIG
// EXEC LKED,PARM.LKED='MAP,LIST,XREF'
//SYSPRINT DD UNIT=FAST,DSN=F11LHO.IPSLINK,
// DCB=(BLKSIZE=968,LRECL=121,RECFM=FBA),
// DISP=(NEW,CATLG,DELETE),
// SPACE=(TRK,(50,10),RLSE)
//SYSLIB DD DSN=F11LHO.GRAPHL,UNIT=FAST,DISP=SHR
//       DD DSN=F11LHO.JADEGL,UNIT=FAST,DISP=SHR
//       DD DSN=F11GOD.PATRECLD,UNIT=FAST,DISP=SHR
//       DD DSN=JADELG.LOAD,UNIT=FAST,DISP=SHR
//       DD DSN=F22ALL.JADEMUL,UNIT=FAST,DISP=SHR
//       DD DSN=F22NAR.TOFLIB.L,UNIT=FAST,DISP=SHR
//       DD DSN=JADEPR.JADELD,UNIT=FAST,DISP=SHR
//*      DD DSN=F1EBLO.BOSLIB.L,UNIT=FAST,DISP=SHR
//*      DD DSN=R02SCH.TSOIPS.LOAD,DISP=SHR
//*      DD DSN=R02SCH.TCSUSER.LOAD,DISP=SHR
//*      DD DSN=DESYLIB,DISP=SHR
//*      DD DSN=SYS1.FORTLIB,DISP=SHR
//*      DD DSN=R01UTL.CERNLIB,UNIT=FAST,DISP=SHR
//*IPSLOADS DD DSN=R02IPS.USE.LOAD,UNIT=FAST,DISP=SHR
 INCLUDE SYSLIB(GPHMAIN)
 ENTRY MAIN
//
C   22/03/97 703221923  MEMBER NAME  JBMENU   (JADEGS)      FORTRAN
***********************************************************************
*        SEE    JADEPR.TEXT(JBJCN34)                             ******
***********************************************************************
C   22/03/97 703221923  MEMBER NAME  JBMENU0  (JADEGS)      FORTRAN
//F11OLSMN JOB 10622622,OLSSON,CLASS=E,MSGLEVEL=(0,0),TIME=(0,05)
//*MAIN RELPRI=MED
// EXEC FCLG
//FORT.SYSIN DD *
      DIMENSION A(80)
C********************** NCOPY IS NUMBER OF COPIES WANTED  *****
      NCOPY = 1
      DO 2 N=1,NCOPY
      WRITE(6,102)
      DO 1 I=1,100000
      READ(5,100,END=99) A
  100 FORMAT(80A1)
C     IF(MOD(I,33).EQ.0) WRITE(6,102)
  102 FORMAT(1H1,/)
      WRITE(6,101) A
  101 FORMAT(3X,72A1,30X,8A1)
C     WRITE(6,103)
  103 FORMAT(/)
    1 CONTINUE
   99 REWIND 5
    2 CONTINUE
      STOP
      END
//GO.FT06F001 DD SYSOUT=K
//GO.SYSIN DD *

                       ****************************
                     I                              I
                    I   JADE COMPUTER NOTE NR. 34    I
                     I                              I
                       ****************************

   *********************************************************************
   *                                                                   *
   *      JADE GRAPHICS PROGRAM           VERSION FROM  14.08.1981     *
   *                                                                   *
   *********************************************************************
                                                     J.OLSSON  L.O'NEILL

                 (THE CHANGED PARTS FROM LAST VERSION ARE MARKED BY A *)
                                   (LAST VERSION WAS DATED 15.05.80)



    TO START A SESSION AT THE IBM TSO-GRAPHICS TERMINALS:
      (IF YOU ARE NOT ABLE TO LOGON, READ THE YELLOW TSOIPS FILE BEFORE
       CALLING FOR HELP...)
    FIRST LOGON UNDER TSO BY ENTERING:

                    LOGON IDENTIFIER SIZE(834)
                    KEYWORD

*   OBS... THE SIZE PARAMETER IS NECESSARY, SINCE THE JADE GRAPHICS
*          MODULE IS TOO BIG FOR THE DEFAULT TSO REGION (ABOUT 600K).
*          IF YOU LEAVE THE SIZE PARAMETER OUT, YOUR SESSION WILL
*          SOON ABEND WITH AN ERROR CODE 80A

    TO  ENTER THE GRAPHICS PROGRAM, NOW PROCEED WITH

                    IPS LIBRARYNAME(MODULENAME)

               EXAMPLE:   IPS 'F11LHO.GRAPHL(JADEZ)'
               OR         IPS GRAPHL(JADEZ)        IF YOU ARE F11LHO
    OBS.... THE LIBRARY F11LHO.GRAPHL IS KEPT AS STANDARD LIBRARY FOR
            GRAPHICS MODULES. IT IS FREQUENTLY UPDATED TO ACCOUNT FOR
            RECENT IMPROVEMENTS.
*           THE "STANDARD MODULE" HAS THE NAME  JADEZ

    AFTER PRINTING SOME GREETINGS AND OTHER GENERAL INFORMATION,
    THE GRAPHICS PROGRAM NOW REQUESTS THE NAME OF A CATALOGUED DATA SET.
    THIS HAS TO BE ENTERED WITH FULL IDENTIFIER, E.G. F22ELS.TPMH735C ;
    THE DATA SET MOREOVER HAS TO BE "ON DISK", OR IN MASS STORAGE, MSS.

    IF THE INPUT FILE HAS BEEN ALLOCATED SUCCESSFULLY, THE PROGRAM NOW
    ASKS WHETHER THE SCANNER WANTS TO WRITE EVENTS OR NOT.
        ANSWERING  'YES'  STARTS A DIALOGUE, IN WHICH THE SCANNER HAS
        TO SPECIFY OUTPUT DATA SET AND WHETHER HE WANTS TO ADD EVENTS TO
        ALREADY EXISTING ONES OR TO OVERWRITE THEM.
        THE SCANNER IS ALSO ASKED TO SPECIFY THE WRITE MODE, IN CASE OF
        OVERWRITING THE FILE. THE CHOICE IS BETWEEN BOS M AND BOS S
        FORMATS.
        OBS.....   IF YOU WRITE IN BOS M FORMAT AND THE SYSTEM CRASHES
                   YOUR OUTPUT FILE IS LEFT IN AN UNDEFINED STATE. THIS
                   DOES NOT HAPPEN WITH BOS S FORMAT, WHICH IS STRONGLY
                   RECOMMENDED.
        FINALLY THE SCANNER IS GIVEN THE OPPORTUNITY TO ALLOCATE A FILE
        FOR SAVING INTERMEDIATE  'EDITING' RESULTS.

*   OBS... THESE OUTPUT FILES MUST EXIST BEFORE YOUR SESSION, THEY WILL
*          NOT BE CREATED BY THE GRAPHICS PROGRAM.

    THE PROGRAM NOW REQUESTS A STANDARD VIEW.THIS VIEW APPEARS AUTO-
    MATICALLY WHEN A NEW EVENT IS READ (SEE ALSO COMMAND CSTV BELOW).
    AND IS TO BE CHOSEN FROM THE AVAILABLE VIEWS LISTED BELOW:
       RA=1, RB=2, RC=3, ZXA=4, ZXB=5, ZXC=6, ZXD=7, ZYA=8, ZYB=9,
*      ZYC=10, ZYD=11, FW=12, RU=13, CYL=14, FWMU=15.
     THE NUMBER CODE IS TO BE ENTERED.

*   THE PROGRAM NOW USES SOME TIME TO ALLOCATE VARIOUS CALIBRATION
*   FILES. AT TIMES OF HEAVY COMPUTER OCCUPANCY, THIS MAY BE A FEW
*   MINUTES. BE PATIENT AND DO SOMETHING USEFUL MEANWHILE...

    THE SCANNER IS NOW REQUESTED TO SET USER INDICES, CORRESPONDING TO
    VARIOUS LEVELS IN THE ANALYSIS PROGRAM CHAIN. AT THESE POINTS
    THE SCANNER CAN GIVE COMMANDS TO LOOK AT THE EVENT IN VARIOUS VIEWS,
    DISPLAY RESULTS OF ANALYSIS ROUTINES PERFORMED SO FAR, ETC.
         WARNING: NOT SETTING ANY INDICES LEADS TO A READING THROUGH OF
                  THE COMPLETE DATA SET WITHOUT ANY STOPPING.
    THE LEVELS OF THE SUPERVISOR ANALYSIS PROGRAM ARE LISTED BELOW:

         INDEX=1   CALLED AT THE BEGINNING OF EACH NEW RUN.
               2   CALLED IMMEDIATELY AFTER EVENT IS READ INTO /BCS/.
               3   LEAD GLASS ENERGIES HAVE BEEN COMPUTED.
               4   FAST Z VERTEX RECONSTRUCTION HAS BEEN DONE.
               5   INNER DETECTOR PATTERN RECOGNITION HAS BEEN RUN.
               6   ENERGY CLUSTERS IN THE LEAD GLASS HAVE BEEN FOUND.
               7   UNUSED
               8   MUON CHAMBER TRACKING HAS BEEN DONE.
               9   UNUSED
              10   UNUSED

    WHEN SCANNING ALREADY PROCESSED EVENTS, IT IS SUFFICIENT TO STOP AT
*   LEVEL 2. EVENTS THAT HAVE PASSED THE REDUC1 PROGRAM HAS ANALYSIS
*   PERFORMED UP TO LEVEL 5, I.E. NO CLUSTER ANALYSIS HAS BEEN DONE.

*   EXAMPLE:  LEVELS 2 AND 6 ARE SET.  WHEN THE PROGRAM HAS READ AN
*             EVENT, IT WILL HALT AT THE LEVEL WITH THE LOWEST NUMBER,
*             I.E. 2, AND DISPLAY IT IN THE STANDARD VIEW. TO PROCEED
*             TO NEXT LEVEL, I.E. 6, THE COMMAND "C" MAY BE USED.
*             TO SKIP THIS LEVEL AND IMMEDIATELY GO TO NEXT EVENT, THE
*             COMMAND "N" IS USED
*   THE LEVELS CAN BE CHANGED AT ANY POINT IN THE SESSION BY THE
*   COMMAND CSTL, SEE BELOW.

    IF THE LONGER DIALOGUE MENTIONED ABOVE IS GONE THROUGH, ANOTHER SET
    OF STOP FLAGS CAN BE PUT INTO ACTION, WHICH CAN HALT THE PROGRAM
    IF ANY SPECIAL CONDITION IS FULFILLED IN ANY ANALYSIS ROUTINE. THIS
    HAS TO BE CODED FOR BY THE USER, AND LOADED INTO A PRIVATE GRAPHICS
    MODULE. NORMALLY JUST ENTER HERE.

    THE FIRST EVENT ON THE FILE WILL NOW APPEAR ON THE SCREEN AND ALL
    COMMANDS LISTED BELOW ARE AVAILABLE TO THE SCANNER.

    EXPLANATION OF THE VARIOUS COMMANDS
    -----------------------------------

    MENU:   DISPLAYS LIST OF AVAILABLE COMMANDS WITH SHORT EXPLANATIONS.

    HELP:   DISPLAYS MORE DETAILED INFORMATION ON ANY COMMAND WHICH IS
            GIVEN IN UPON PROMPTING.
            THIS COMMAND IS STILL INACTIVE, SORRY.

    NEWS:   DISPLAYS NEWS OF RECENT CHANGES TO THE GRAPHICS.

------------- THE STANDARD VIEWS:

      RA:   DISPLAY EVENT IN R-PHI VIEW. ONLY INNER DETECTOR.

      RB:   DISPLAY EVENT IN R-PHI VIEW. INNER DETECTOR AND LEAD GLASS.

      RC:   DISPLAY EVENT IN R-PHI VIEW. INNER DETECTOR, LEAD GLASS AND
                                         MUON FILTER.

     ZXA:   DISPLAY EVENT IN Z-X VIEW. ONLY INNER DETECTOR.

     ZXB:   DISPLAY EVENT IN Z-X VIEW. INNER DETECTOR AND LEAD GLASS.

     ZXC:   DISPLAY EVENT IN Z-X VIEW. INNER DETECTOR, LEAD GLASS AND
                                       MUON FILTER.

     ZXD:   DISPLAY EVENT IN Z-X VIEW. INNER DETECTOR, LEAD GLASS, MUON
                                       FILTER AND FORWARD DETECTOR.

       OBS... THE ZX OR ZY VIEWS ARE SHOWN IN THE R - Z MODE, I.E. THE
            RADII OF HITS ARE ROTATED INTO THE PLANE OF THE VIEW. THE
            TRUE PROJECTIONS ARE OBTAINED BY SWITCHING CDTL 9.

     ZYA:   DISPLAY EVENT IN Z-Y VIEW. ONLY INNER DETECTOR.

     ZYB:   DISPLAY EVENT IN Z-Y VIEW. INNER DETECTOR AND LEAD GLASS.

     ZYC:   DISPLAY EVENT IN Z-Y VIEW. INNER DETECTOR, LEAD GLASS AND
                                       MUON FILTER.

     ZYD:   DISPLAY EVENT IN Z-Y VIEW. INNER DETECTOR, LEAD GLASS, MUON
                                       FILTER AND FORWARD DETECTOR.

* OBS... THE ZX AND ZY VIEWS SHOW AS DEFAULT A ROTATED PROJECTION OF
*        CHAMBER HITS. THIS IS TO SHOW CORRELATION WITH THE LEAD GLASS
*        ENERGIES, WHICH ARE ALWAYS SHOWN IN THIS FASHION. THE TRUE
*        PROJECTIONS OF CHAMBER HITS CAN BE OBTAINED IF DISPLAY DETAIL 9
*        IS FLIPPED,  COMMAND "CDTL 9".
*        THE CURRENT VERSION, PROJECT MODE OR ROTATE MODE, IS WRITTEN AT
*        THE TOP OF THE PICTURE.

      FW:   DISPLAY OVERALL VIEW OF THE FORWARD DETECTOR.
*           LEAD GLASS BLOCK ENERGIES ARE DISPLAYED WITH THE SAME CODE
*           AS IN THE FOLLOWING VIEW, RU.

      RU:   DISPLAY EVENT IN A ROLLED OUT VIEW OF ALL LEAD GLASS BLOCKS,
            INCLUDING ENDCAPS AND FORWARD DETECTOR. THE PULSE HEIGHTS
            ARE DISPLAYED WITH A NUMBER AND LETTER CODE AS FOLLOWS:
                 0:  LESS THAN 10 MEV
                 1:  BETWEEN 10 AND 20 MEV
                  .........
                 A:  BETWEEN 100 AND 200 MEV
                  .........
                 J:  BETWEEN 1000 AND 2000 MEV
                  .........
                 S:  BETWEEN 10000 AND 20000 MEV

*           THE CODE IS AVAILABLE AT THE SCREEN VIA COMMAND "BL 6"
            IN MAGNIFIED VIEWS, THE PULSE HEIGHTS ARE WRITTEN OUT IN MEV

     CYL:   DISPLAYS EVENT IN A PERSPECTIVE VIEW, INCLUDING INNER DETEC-
            TOR HITS AND LEAD GLASS HITS IN THE MAIN CYLINDER.

    FWMU:   DISPLAYS FORWARD MUON COUNTERS ONLY

---------- END OF STANDARD VIEWS

    STVW:   DISPLAYS EVENT IN THE STANDARD VIEW.
            THIS COMMAND IS USEFUL, IF A MAGNIFIED VIEW HAS BEEN CHOSEN
            AS STANDARD VIEW. THIS IS POSSIBLE BY THE COMMAND CSTV 1.

     DET:   DRAWS THE DETECTOR ONTO THE CURRENT EVENT DISPLAY.

     PRO:   DRAWS PROJECTIONS OF Z-X AND Z-Y VIEWS IN SMALLER SCALE ONTO
            R-FI VIEWS. AVAILABLE IN VIEWS RA,RB,RC AND CYL.
            IF DISPLAY DETAIL FLAG 17 IS .TRUE. PROJECTIONS APPEAR AUTO-
            MATICALLY. THIS IS OBTAINED WITH COMMAND 'CDTL 17'
            IF THE COMMAND IS GIVEN IN A MAGNIFIED R-FI VIEW, ONLY THOSE
            HITS WHICH HAVE THEIR R-FI COORDINATES INSIDE THE MAGNIFIED
            VIEW, APPEAR IN THE PROJECTIONS.
*           THESE VIEWS ARE TRUE PROJECTIONS, NOT R - Z VIEWS.
*           SWITCHING CDTL 9 WILL CAUSE THE R-Z MODE TO APPEAR IN THE
*           PROJECTIONS.

      BW:   WRITES THE CONTENTS OF A SPECIFIED BANK ONTO THE SCREEN.
            THE BANK NAME IS PROMPTED FOR.
            EACH PAGE CAN BE SUBMITTED FOR HARDCOPY.
            THE STANDARD PRINT FORMAT IS INT*2 ; HOWEVER, MANY BANKS
            ARE NOW PRINTED WITH TAILOR MADE FORMATS
            IF SEVERAL BANKS WITH THE SAME NAME EXIST, THE SCANNER IS
            PROMPTED TO GIVE THE BOS BANK NUMBER.
            IF A BANK DISPLAY EXTENDS OVER SEVERAL PAGES, THE SCANNER
            IS GIVEN THE POSSIBILITY TO STOP AFTER EACH PAGE.
*           IF A NEGATIVE TRAILING NUMBER, E.G. "BW -1" IS ENTERED, A
*           LIST OF ALL BANKS IN THE EVENT IS DISPLAYED.

    STOP:   THIS IS THE NORMAL WAY TO END A SESSION.
            THE "PANIC BUTTON" TO ABORT A SESSION:   CONTROL+G

       C:   CONTINUE. THE ANALYSIS PROGRAM CONTINUES TO THE NEXT LEVEL
            FLAG SET BY THE SCANNER. IF ONLY ONE FLAG WAS SET, THE NEXT
            EVENT IS READ.
            IF AN OUTPUT FILE HAS BEEN ALLOCATED, THIS COMMAND LEADS TO
            A WRITING OUT OF THE EVENT, WHEN GOING TO THE NEXT ONE.

    JUMP:   A USER LEVEL INDEX IS REQUESTED. THE ANALYSIS PROGRAM THEN
            PROCEEDS TO THE SPECIFIED LEVEL.
*           THE LEVEL CAN BE ENTERED AS A TRAILING NUMBER, E.G. JUMP 6

       N:   READ NEXT EVENT. A TRAILING NUMBER CAN BE ENTERED TO SKIP
            SEVERAL EVENTS. EXAMPLE: IF THE PRESENT EVENT IS 16, THE
            COMMAND N 3 CAUSES THE READING OF EVENT 19, N -3 EVENT 13.

    JOYS:   THE JOYSTICK IS ACTIVATED, VISIBLE AS A HAIR CROSS ON SCREEN
            THE JOYSTICK INPUT IS GIVEN BY:       CONTROL + E
            THE COMMAND IS USED TO ENLARGE A PARTICULAR AREA OF THE PIC-
            TURE. TWO MODES ARE AVAILABLE:
            JOYS WITH A TRAILING NUMBER: ONE JOYSTICK INPUT; POSITION
                WILL BE CENTER OF MAGNIFIED VIEW, TRAILING NUMBER GIVES
                THE DEGREE OF MAGNIFICATION.
            JOYS WITHOUT TRAILING NUMBER: TWO JOYSTICK INPUTS SPECIFY
                OPPOSITE CORNERS OF NEW VIEW; THIS AUTOMATICALLY GIVES
                THE MAGNIFICATION.

      RS:   RESETTING THE SCALE, IF CHANGED BY COMMAND JOYS.

       H:   HARDCOPY OF THE PRESENT VIEW IS GENERATED ON GOULD PLOTTER
            AFTER SOME WAITING TIME A MESSAGE APPEAR: DATA SUBMITTED TO
            PLOTTER QUEUE.
            A TRAILING NUMBER (E.G. H 3) GENERATES SEVERAL IDENTICAL
            HARDCOPIES. MAXIMUM IS 4, HOWEVER.

*           IF SEVERAL COMMANDS HAVE BEEN GIVEN, LIKE COM,RES,PRO,ETC..
*           AND THE END OF PAGE IS REACHED, ONE CAN CONTINUE ON NEXT
*           PAGE; THE HARDCOPY WILL STILL HAVE ALL THE DRAWN INFORMA-
*           TION. THE PICTURE IS CLOSED BY HARDCOPY REQUEST, OR BY THE
*           SOFTWARE "CALL ERASE", E.G. WHEN GIVING ONE OF THE STANDARD
*           VIEW COMMANDS.

    WRIT:   WRITE THE CURRENT EVENT AND READ NEXT EVENT. THIS COMMAND IS
            AVAILABLE ONLY IF THE SCANNER HAS SPECIFIED A DATA SET FOR
            WRITING ONTO, IN THE INITIALIZATION STAGE OF THE SESSION.

     COM:   GIVES THE SCANNER POSSIBILITY TO ADD HIS OWN COMMENTS TO THE
            PICTURE, IN ANY PLACE. THE COMMENTS APPEAR ON THE HARDCOPY.
            POSITION (BY JOYSTICK) AND COMMENT IS PROMPTED FOR.

    BDLS:   DELETE A BANK. THE NAME IS PROMPTED FOR AS WELL AS THE BOS
            BANK NUMBER IF MORE THAN ONE BANK WITH THE SAME NAME EXIST.
            IF THE BANK 'JETC' IS DELETED, A RENUMBERING OF THE RAW
            DATA BANK 'JETC' IS DONE, SO THAT PASSING LEVEL 4 WILL LEAD
*           TO A PROPER RECALIBRATION. FOR THIS TO BE USEFUL, ONE SHOULD
*           OF COURSE GIVE THE COMMAND AT LEVEL 2 OR 3

    CSTL:   COMMAND TO CHANGE THE USER-LEVEL FLAGS IN ANALYSIS PROGRAM.

    CSTV:   COMMAND TO CHANGE OPTIONS IN THE STANDARD VIEW.THE FOLLOWING
            CHANGES ARE AVAILABLE:
                       1 FREEZE STANDARD VIEW.
*                        THE CURRENT VIEW WILL APPEAR AS STANDARD VIEW
*                        IN THE NEXT EVENT, OR AT NEXT LEVEL ENTERED.
                       2 TURN ON/OFF AUTOMATIC DISPLAY OF NEW EVENT.
                       3 TURN ON/OFF DETECTOR WITH STANDARD VIEW.

            CSTV CAN BE ENTERED WITH A TRAILING NUMBER.

    CDTL:   COMMAND TO CHANGE DETAILS IN THE VARIOUS DISPLAY VIEWS. THE
            FOLLOWING CHANGES ARE AVAILABLE:
                  1 TURN ON/OFF DISPLAY OF INNER DETECTOR.
                  2 TURN ON/OFF DISPLAY OF LEAD GLASS.
                  3 TURN ON/OFF DISPLAY OF MUON FILTER.
                  4 TURN ON/OFF DISPLAY OF CHAMBER WALLS.
                  5 TURN ON/OFF DISPLAY OF CHAMBER WIRES.
                  6 TURN ON/OFF CROSSES FOR INNER DET. HITS.
                  7 TURN ON/OFF HISTOGRAMS OF LEAD GLASS ENERGY.
                  8 TURN ON/OFF SHRINKING OF MUON HIT RADIUS.
                  9 TURN ON/OFF Z-RADIUS DISPLAY OF TRACKS.
                 10 TURN ON/OFF MIRROR HITS IN Z-RADIUS MODE.
                 11 TURN ON/OFF T2 TRIGGER DISPLAY
                 12 TURN ON/OFF TRACK NUMBERS IN RES. DISPLAY OF ID
                 13 TURN ON/OFF TRACK BANK WRITING IN RES. DISPLAYS
                 14 TURN ON/OFF SINGLE TRACK DISPLAY IN COMMAND RES
                 15 TURN ON/OFF DASH LINE DRAWING OF LEAD GLASS
                                AVAILABLE IN VIEWS CYL AND RU
                 16 TURN ON/OFF RESULT (TRACK FIT) DISPLAY.
                 17 TURN ON/OFF Z-X AND Z-Y PROJECTIONS.
                 18 TURN ON/OFF T3 TRIGGER DISPLAY
                 19 TURN ON/OFF FITTED TRACK DISPLAY FROM CLOSEST
                                APPROACH TO ORIGIN.
                 20 TURN ON/OFF HIT DISPLAY IN PROJECTIONS.
                 21 TURN ON/OFF HIT DISPLAY IN INNER DETECTOR
                 22 TURN ON/OFF MU-HIT NUMBER DISPLAY
                 23 TURN ON/OFF PROJECTION OF FITTED TRACKS TO LEAD
                                GLASS LIMIT.
                 24 TURN ON/OFF MU DISPLAY OF "OUT OF PLANE" HITS
                 25 TURN ON/OFF OVERLAP OF SCINTILLATORS IN FORWARD
                                DETECTOR DISPLAY  (COMMAND FW)
                 26 TURN ON/OFF SUPPRESSION OF ODD LAYER HITS IN JETC.
    (THIS IS USEFUL TO SPEED UP THE DISPLAY, AT SLOW RESPONSE TIME)
                 27 TURN ON/OFF DISPLAY OF MAIN VERTEX
                 28 TURN ON/OFF DISPLAY OF PHOTONS TOGETHER WITH
                                CHARGED TRACKS (COMM. RES,TR,VRES)
                 29 TURN ON/OFF DISPLAY OF PHOTONS WITHOUT CHARGED
                                TRACKS (COMMAND RES,TR,VRES)
*                30 TURN ON/OFF DISPLAY OF FORWARD MUON CNTR TOF VALUES
*                31 TURN ON/OFF DISPLAY OF TRACK NR IN TR DISPLAY
*                32 TURN ON/OFF DISPLAY OF TRACK NR IN VRES DISPLAY
*                33 TURN ON/OFF DISPLAY OF TOF NUMBERS, COUNTER NUMBERS
*                34 TURN ON/OFF DISPLAY OF SPINNING 1-BLOCK PHOTONS
*                35 TURN ON/OFF DISPLAY OF PHOTONS BELOW 200 MEV

            CDTL CAN BE ENTERED WITH A TRAILING NUMBER.

    CPAR:   COMMAND TO CHANGE PARAMETERS IN MONTE CARLO EVENTS.

    TRUE:   DISPLAYS THE "TRUE" TRACKS IN A MONTE CARLO EVENT. THE
            FOLLOWING TRAILING NUMBER OPTIONS ARE AVAILABLE:
                       0 ONLY CHARGED TRACKS ARE DISPLAYED.
                       1 ONLY PHOTONS ARE DISPLAYED.
                       2 BOTH CHARGED TRACKS AND PHOTONS ARE DISPLAYED.
                       3 THE PARTICLE CHARGES, ORIGIN COORDINATES AND
                          MOMENTUM VECTORS ARE WRITTEN TO THE SCREEN.
                          A HARD COPY CAN THEN BE MADE.
            THIS COMMAND IS UNFORTUNATELY ONLY WORKING IN MC EVENTS.

    CLUS:   DISPLAY THE RESULTS OF THE LEAD GLASS CLUSTER ROUTINES.
             THE COMMAND CAN BE GIVEN WITH THE FOLLOWING TRAILING
             NUMBERS:
                    NONE OR 0: DISPLAY CLUSTER STRUCTURE IN BARREL AND
                                END CAPS.
                            1: DISPLAY CLUSTER STRUCTURE AND GAMMA
                                DIRECTIONS DERIVED BY CLUSTER ANALYSIS
                                ROUTINES.
                            2: WRITE TO SCREEN THE NUMERICAL RESULTS
                                OF CLUSTER ANALYSIS.
                            3: EXECUTE CLUSTER ANALYSIS, E.G. IF THE
                                SUPERVISOR HAS NOT YET CALLED IT. IF
                                THE CLUSTER ANALYSIS BANK DOES EXIST
                                IT IS DELETED AND REPLACED. NOTHING IS
                                DISPLAYED FOLLOWING THIS COMMAND.

      ZV:   DISPLAY THE RESULTS OF THE Z-VERTEX ROUTINE.
                     A SMALL COMMAND (BY NUMBERS) MENU IS AVAILABLE

    MUPT:   DISPLAY THE RESULT OF PATTERN RECOGNITION IN THE MUON FILTER
             THE COMMAND CAN BE GIVEN WITH THE FOLLOWING TRAILING
             NUMBERS:
*                   NONE OR 0: DISPLAY THE FITTED TRACKS FOUND BY MUON
*                               PATTERN RECOGNITION.
*                          -N: REANALYSIS OF MUON PATTERN RECOGNITION
*                              AND DISPLAY OF ALL TRACKS.
*                           N: DISPLAY OF TRACK NR N ONLY.

     RES:   DISPLAY ANALYSIS RESULTS. PRESENTLY AVAILABLE FOR PATREC
            AND LEAD GLASS CLUSTER ANALYSIS RESULTS. THE BANK BOS NUMBER
            (FOR BANK PATR) CAN BE ENTERED AS A TRAILING NUMBER.
            IF NOT GIVEN, THE LOWEST BANK NUMBER IS LOOKED FOR.
              IF DISPLAY DETAIL 14 IS SET, SINGLE TRACK DISPLAY IS
                 AVAILABLE. THE WANTED TRACK IS SPECIFIED BY A TRAILING
                 NUMBER.
              IF DISPLAY DETAIL 17 IS SET, THE FITTED TRACKS ALSO APPEAR
                 IN THE PROJECTIONS.
              IF DISPLAY DETAIL 28 OR 29 IS SET, PHOTONS ARE DISPLAYED
                 AS HATCHED LINES. THE NUMBERS CORRESPOND TO THE TRUE
                 PHOTON NUMBER, I.E. PHOTON NR 3 IS THE THIRD LEAD GLASS
                 CLUSTER THAT IS NOT ASSOCIATED WITH A CHARGED TRACK.
                 A LIST OF CLUSTER INFORMATION IS ALSO PRINTED, WITH
                 INFORMATION ON THE PHOTON NUMBER OR ASSOCIATED CHARGED
*                TRACK NUMBER. SEE ALSO CDTL 34,35.

            IN THE VIEW RU (ROLLED OUT LEAD GLASS VIEW), THE IMPACT
            POINTS OF THE CHARGED TRACKS ARE DISPLAYED TOGETHER WITH THE
            NEUTRAL CLUSTERS. A LIST OF CLUSTER INFORMATION IS PROVIDED.

      TR:   COMMAND TO DISPLAY PATTERN RECOGNITION RESULTS AS STORED IN
            THE HIT LABEL ARRAY 'JHTL'.
            THE BOS BANK NUMBER CAN BE ENTERED AS A TRAILING NUMBER. IF
            NO NUMBER IS ENTERED, THE LOWEST IS TAKEN.
            THE SCANNER IS ASKED TO ENTER ONE OF THE FOLLOWING OPTIONS:
                 CODE 0 :  CODE LIST
                 CODE 1 : DISPLAY ALL HITS ASSOCIATED WITH TRACKS
                 CODE 2 : DISPLAY ALL HITS NOT ASSOCIATED WITH TRACKS
                 CODE 3 : DISPLAY ALL HITS ASSOCIATED WITH TRACKS,
                          MARKING SELECTED ONES
                 CODE 4 : DISPLAY ALL HITS,MARKING TRACK-ASSOCIATED ONES
                 CODE 5 : DISPLAY RAW EVENT, MARKING SELECTED TRACKS.

*           IF A TRAILING NR 1 TO 5 IS ENTERED, IT IS INTERPRETED AS THE
*           CORRESPONDING VIEW OPTION, WITH THE LOWEST NUMBER JHTL AND
*           PATR BANKS.
*           THIS COMMAND ENABLES THE SCANNER TO DISPLAY ID HITS WITH
*           SUPRESSION OF MIRROR HITS.

    MASS:   COMMAND TO COMPUTE INVARIANT MASS OF A GIVEN SYSTEM OF PAR-
            TICLES. PARTICLE NUMBERS AND TYPES ARE PROMPTED FOR. THE
            COMMAND CAN BE USED FOR CHARGED TRACKS AS WELL AS FOR GAMMAS
            AND TRACK ASSOCIATED CLUSTERS. IF MORE THAN ONE CHARGED
            TRACK IS ENTERED, A VERTEX FIT IS PERFORMED, AND 4-VECTORS
            ARE TAKEN WITH RESPECT TO THE FOUND VERTEX. A LIST OF THE
            VARIOUS RESULTS IS WRITTEN ON THE SCREEN.

    TRG2:   COMMAND TO DISPLAY TRIGGER 2 INFORMATION ONTO THE INNER
            DETECTOR.

      VX:   DISPLAY THE RESULT OF THE VERTEX PROGRAM. SEVERAL OPTIONS
            ARE AVAILABLE, TO BE ENTERED AS TRAILING NUMBERS:
                       0 : MAIN VERTEX IS DISPLAYED AS A CROSS
                       1 : ALL VERTICES ARE DISPLAYED AS CROSSES, WITH
                           THE NUMBERS WRITTEN CLOSE BY. A LIST OF
                           VERTEX INFORMATION IS ALSO WRITTEN OUT AND
                           APPEARS ON THE HARDCOPY.
                       2 : ALL E+E- (PHOTON CONVERSION) VERTICES ARE
                           DISPLAYED.
                       3 : CREATE THE BANK 'GVTX' WITH THE RESULTS FROM
                           THE VERTEX PROGRAM.
            SEE ALSO UNDER COMMAND CDTL FOR AUTOMATIC VERTEX DISPLAY.
            FOR MORE INFORMATION, SEE JADE COMPUTER NOTE 32.

    DEDX:   DISPLAY THE RESULT OF THE DEDX PROGRAM. SEVERAL OPTIONS
            ARE AVAILABLE, TO BE ENTERED AS TRAILING NUMBERS:
                       0 : DEDX RESULTS FOR ALL CHARGED TRACKS ARE
                           WRITTEN ON THE SCREEN (NOT ON HARDCOPY).
                     ITR : DEDX RESULT FOR TRACK ITR IS WRITTEN ON THE
                           SCREEN ( NOT ON THE HARDCOPY)
                      -1 : THE BANK 'DEDX' IS CREATED WITH DEDX RESULTS
                           AND CAN BE INSPECTED WITH THE COMMAND BW.
                           AT PRESENT, THE CONTENT OF BANK 'DEDX' CORRE-
                           SPONDS EXACTLY TO THE CONTENT OF BANK 'TPTR'
                      -2 : A GRAPH DEDX VS MOMENTUM IS DRAWN, WITH
                           ENTRIES FOR EACH TRACK. THE THEORETICAL
                           CURVES USED IN ASSIGNING CHISQUARES FOR PAR-
                           TICLE IDENTIFICATION ARE ALSO DRAWN.

     TOF:   DISPLAY THE RESULT OF THE TOF PROGRAM. SEVERAL OPTIONS
            ARE AVAILABLE, TO BE ENTERED AS TRAILING NUMBERS:
                       0 : TOF RESULTS FOR ALL CHARGED TRACKS ARE
                           WRITTEN ON THE SCREEN (NOT ON HARDCOPY).
                     ITR : TOF RESULTS FOR TRACK ITR IS WRITTEN ON THE
                           SCREEN ( NOT ON THE HARDCOPY)
                      -1 : THE BANK 'TOFR' IS CREATED AND CAN BE
                           INSPECTED WITH THE COMMAND BW. THE FORMAT IS
                           DESCRIBED IN JADE COMPUTER NOTE 20.
                      -2 : A GRAPH BETA VS MOMENTUM IS DRAWN, WITH
                           ENTRIES FOR EACH TRACK. THE THEORETICAL
                           CURVES USED IN ASSIGNING CHISQUARES FOR PAR-
                           TICLE IDENTIFICATION ARE ALSO DRAWN.

      QP:   THE Q-PLOT ANALYSIS PROGRAM OF KOBAYASHI IS CALLED UP.
            SEVERAL DISPLAY OPTIONS EXIST, AS TRAILING NUMBERS:
                       1 : 3-VECTORS OF CHARGED TRACKS AND PHOTONS
                           ARE DISPLAYED IN TWO DIFFERENT PLANES OF THE
                           MOMENTUM ELLIPSOID. LEAD GLASS ENERGIES ARE
                           SHOWN IN HISTOGRAM FASHION.
                       2 : 3-VECTORS OF CHARGED TRACKS AND PHOTONS
                           ARE DISPLAYED IN THREE DIFFERENT PLANES OF
                           THE MOMENTUM ELLIPSOID.
                       3 : THE TRIANGULAR Q-PLOT IS DRAWN, WITH THE
                           POSITION OF THE EVENT MARKED. THIS Q-PLOT IS
                           ALSO DRAWN IN OPTIONS 1 AND 2 ABOVE.

      BL:   THIS COMMAND CONTAINS SOME OPTIONS USEFUL IN LEAD GLASS
*           ANALYSIS. THE CURRENT VIEW MUST BE 'RU OR FW'.
            THE OPTIONS (CAN BE ENTERED AS TRAILING NUMBERS) ARE:
                       1 : DISPLAY LIST OF OPTIONS
                       2 : WRITE BLOCK NUMBERS FOR ALL BLOCKS THAT
                           CONTAIN ENERGY. MAGNIFICATION IS NEEDED.
                       3 : SHOW ALL BLOCKS THAT WERE KILLED IN THE 'BAD
                           LEADGLASS ANALYSIS', I.E. BLOCKS PRESENT IN
                           BANK 'ALGL' BUT NOT IN BANK 'ALGN'.THE CORRE-
                           SPONDING BLOCKS ARE MARKED WITH A CROSS.
                       4 : SHOW WHICH OF CURRENTLY HIT BLOCKS ARE KNOWN
                           AS 'SPINNERS'.MARKING IS DONE BY A HEAVY BOX.
                       5 : SHOW CURRENT DEAD BLOCKS, I.E. BLOCKS WHICH
                           WERE SWITCHED OFF IN THIS PERIOD.THE MARKING
                           IS HERE DONE WITH A HEAVY CIRCLE.
*                      6 : WRITE OUT THE CODE INFORMATION FOR DISPLAY OF
*                          PULSEHEIGHTS IN NON-MAGNIFIED VIEWS.
*                      7 : PRINT CLUSTER NUMBERS FOR KNOWN SPINNING
*                          BLOCKS.   AVAILABLE IN ALL VIEWS.

*   VRES:   THIS COMMAND IS A VARIANT OF THE RES COMMAND. IT USES INFOR-
*           MATION FROM THE VERTEX PROGRAM (COMMAND VX) AND DISPLAYS
*           CHARGED TRACKS FROM THE CORRESPONDING VERTEX. PHOTONS ARE
*           TAKEN TO COME FROM THE MAIN VERTEX. THE OPTIONS, ENTERED
*           AS TRAILING NUMBERS, ARE:
*                      0 : DISPLAY ALL TRACKS FROM THEIR VERTICES.
*                     -N : DISPLAY ALL TRACKS FROM VERTEX NR N ONLY.
*                      N : DISPLAY TRACK NR N ONLY. THIS IS ACTIVE ONLY
*                          IF CDTL 14 HAS BEEN ACTIVATED.

*   FIND:  THIS COMMAND ENABLES THE SCANNER TO FIND A PARTICULAR EVENT.
*          IF NOT ENTERED AS TRAILING NUMBERS (FIND NRUN NEVENT), THE
*          RUN AND EVENT NUMBERS ARE PROMPTED FOR. THE PROGRAM PROCEEDS
*          TO SEARCH FOR THE DESIRED EVENT AND DISPLAYS IT EVENTUALLY.

    SPVA:   USER DEVOTED COMMAND. THIS COMMAND CAUSES A CALL TO SUB-
            ROUTINE SPARE, WHICH CAN BE SUPPLIED BY THE USER IN A
*           PRIVATE GRAPHICS MODULE. IN THE STANDARD MODULE THIS IS A
*           DUMMY COMMAND. MORE ABOUT PRIVATE MODULES IN THE GENERAL
*           COMMENTS BELOW.

------------- EDITING COMMANDS -----

    EDIT:   COMMAND TO EDIT RESULTS OF PATTERN RECOGNITION IN INNER
            DETECTOR.
            THIS COMMAND ENTERS THE SCANNER INTO A DISPLAY ROUTINE WITH
            A NUMBER OF SUBCOMMANDS. THESE AND EDITING IN GENERAL ARE
            DESCRIBED IN A SEPARATE NOTE (JADE COMPUTER NOTE 28)

     RET:   THIS COMMAND (RETURN) IS TO BE USED IF THE SCANNER CALLS THE
            GRAPHICS DISPLAY PROGRAM FROM THE EDITING PROGRAM (SEE THE
            DESCRIPTION OF EDITING IN JADE COMPUTER NOTE NR 28). THE
            COMMAND HAS NO EFFECT "OUTSIDE EDITING".

    SAVE:   COMMAND TO WRITE THE CONTENT OF COMMON /CWORK/ OUT TO A
            SCRATCH FILE, TOGETHER WITH HEAD BANK INFORMATION. THIS
            COMMAND IS HEAVILY USED IN EDITING. A CATALOGUED SCRATCH
            FILE MUST HAVE BEEN ALLOCATED AT SESSION BEGIN, OF COURSE.

-------- END EDITING COMMANDS ---

     LIM:   COMMAND TO CHANGE COMMON /CPATLM/, WHICH HOLDS ALL LIMITS
            THAT ARE USED IN PATREC ROUTINES.
            THE COMMON /CJDRCH/ CAN ALSO BE CHANGED BY THIS COMMAND
            THE TWO OPTIONS ARE PROMPTED FOR OR CAN BE OBTAINED AUTOMA-
            TICALLY BY A TRAILING NUMBER:
                          1 :    /CPATLM/
                          2 :    /CJDRCH/
            THIS COMMAND CAN OF COURSE ALSO BE USED FOR RESETTING TO
            DEFAULT VALUES OR SIMPLY TO INSPECT CURRENT VALUES.

    SETF:   GIVES THE SCANNER POSSIBILITY TO SET HIS OWN FLAG FOR PERSO-
            NAL USE IN THE USER ROUTINE CODING, IN A PRIVATE MODULE.

  ---------------------------------------------------------------

                        GENERAL COMMENTS:
                      --------------------

  TRAILING NUMBERS:    ANY VIEW COMMAND FOLLOWED BY A TRAILING NUMBER
                       (EXCEPT 0) WILL CAUSE THE CORRESPONDING DETECTOR
                       TO APPEAR WITH THE EVENT DISPLAY.

*                      COMMANDS WITH VARIOUS OPTIONS CAN NORMALLY BE
*                      GIVEN WITH THE OPTION AS TRAILING NUMBER.

  FAST DISPLAY:        THE DISPLAY OF A COMPLICATED EVENT CAN BE RATHER
                       SLOW AT HIGH OCCUPANCY TIME. FOR PURE SCANNING
                       PURPOSES, THE DISPLAY CAN BE SPEEDED UP BY:
                                   CDTL 6
                                   CDTL 26

* ANSWER YES OR NO:    IN ANSWERING QUESTIONS, WITH YES OR NO, THE
*                      FOLLOWING ANSWERS ARE ACCEPTED AS POSITIVE:
*
*                        YES,YE,Y   JA,JAWOHL,J    HAI,HA,H
*
*                      ANYTHING ELSE, INCLUDING A SIMPLE RETURN, IS A
*                      NEGATIVE ANSWER.

* REPEAT LAST COMMAND: IF A SIMPLE RETURN IS GIVEN AS COMMAND, IT WILL
*                      BE INTERPRETED IN THE SAME WAY AS THE LAST
*                      COMMAND, I.E. IF THE LAST COMMAND GIVEN WAS N,
*                      THEN A RETURN WILL AGAIN LEAD TO READING THE NEXT
*                      EVENT. THIS SAVES SOME EFFORT IN SCANNING.

DATA FILES:            IN ORDER TO SELECT DATA FROM A TAPE AND MAKE
                       A DISK DATA FILE, ONE CAN CONVENIENTLY USE THE
                       MEMBER JBSIMCNF ON F11LHO.JADEGS. COPY THIS
                       MEMBER TO YOUR OWN LIBRARY, CHANGE THE JOB CARD
                       TO YOUR OWN IDENTIFIER, CHANGE THE FT02F001 CARD
                       SO THAT DSN=THE NAME OF THE TAPE DATA SET FROM
                       WHICH YOU WISH TO SELECT DATA AND THE FT03F001
                       SO THAT DSN=THE NAME YOU WISH TO GIVE TO THE
                       NEW DISK DATA FILE YOU WILL BE CREATING.

                       THE SPACE PARAMETERS, NOW SET TO (150,50), SHOULD
                       BE SAFELY SUFFICIENT FOR ABOUT 300 EVENTS. SCALE
                       BOTH THESE NUMBERS UP OR DOWN ROUGHLY IN PRO-
                       PORTION AS YOU WISH TO WRITE MORE OR FEWER THAN
                       300 EVENTS. THE SECOND NUMBER SHOULD REMAIN
                       ROUGHLY A THIRD OF THE FIRST. YOUR JOB MAY FAIL
                       IF YOU REQUEST MORE DISK SPACE THAN IS AVAILABLE.
                       THE SPACE AVAILABLE DEPENDS UPON MACHINE CONDI-
                       TIONS AND CANNOT BE PRECISELY PREDICTED. IN
                       GENERAL IT IS NOT PRACTICAL TO WRITE MORE THAN
                       A FEW HUNDRED EVENTS.

                             NOW READ THE COMMENT CARDS IN JBSIMCNF AND
                       CHANGE THE VARIABLES TO SPECIFY THE NUMBER OF
                       EVENTS YOU WANT, RUN NUMBER RANGE, EVENT NUMBER
                       RANGE, ETC. IF YOU SIMPLY WANT THE FIRST N EVENTS
                       ON SUCH AND SUCH A TAPE REGARDLESS OF RUN NUMBER
                       ETC. YOU NEED ONLY SET NWRTMX TO N. THE OTHER
                       VARIABLES ARE APPROPRIATELY DEFAULTED. SUBMIT
                       THE JOB.

                       SHOULD YOU WANT TO SELECT SCANNED EVENTS AND
                       WRITE THEM TO AN OUTPUT FILE, YOU MUST FIRST
                       CREATE THE OUTPUT FILE ON DISK AND HAVE IT
                       CONTAIN ONE ARBITRARY EVENT, WHICH YOU LATER
                       OVERWRITE. YOU CAN CONVENIENTLY DO THIS BY
                       COPYING THE MEMBER JBMAKEOP FROM F11LHO.JADEGS
                       AND CHANGING THE JOB CARD TO YOUR OWN IDENTIFIER.
                       NOW CHANGE THE FT02F001 CARD SO THAT DSN=THE
                       NAME OF ANY JADE DATA DISK FILE WHICH IS ON DISK,
                       MOST CONVENIENTLY THE ONE YOU WISH TO SCAN. SET
                       DSN IN THE FT03F001 CARD TO THE NAME OF THE
                       OUTPUT FILE YOU WISH TO CREATE AND SET THE
                       SPACE PARAMETERS ( NOW (150,50) ) ACCORDING
                       TO THE MAXIMUM NUMBER OF EVENTS YOU THINK YOU
                       MAY WRITE OUT. THE SAME REMARKS APPLY HERE AS
                       WERE MADE ABOVE IN CONNECTION WITH THE SELECTOR
                       JOB JBSIMCNF. NOTICE THAT THE "RLSE" PARAMETER
                       IS MISSING HERE. THOUGH ONLY ONE EVENT WILL BE
                       WRITTEN BY JBMAKEOP, THE UNUSED SPACE ON THE
                       FILE CREATED WILL NOT BE RELEASED AND WILL
                       CONTINUE TO BE AVAILABLE TO THE SCAN PROGRAM
                       RUNNING UNDER GRAPHICS. FOR THIS REASON IT IS
                       GOOD CITIZENSHIP, WHEN YOU FINALLY ARE THROUGH
                       WITH ADDING TO THE OUTPUT FILE, TO COPY IT
                       INTO ANOTHER FILE WRITTEN WITH THE "RLSE"
                       PARAMETER SET AND TO DELETE THE ORIGINAL OUT-
                       PUT FILE. THIS WAY YOU OCCUPY ONLY AS MUCH
                       DISK SPACE AS YOU REALLY NEED. YOU CAN CONVEN-
                       IENTLY MAKE SUCH A COPY BY USING THE JBSIMCNF
                       DESCRIBED ABOVE.
                       SET NWRTMX TO SOME VERY LARGE NUMBER LIKE 100000
                       SO YOU JUST COPY ALL THE DATA ON THE FILE WRITTEN
                       FROM GRAPHICS.

* PRIVATE MODULES:     THE GRAPHIC DISPLAY IS OFTEN A CONVENIENT WAY
*                      TO INVESTIGATE THE DETAILED WORKING OF A PROGRAM.
*                      FOR THIS PURPOSE, THE USER WILL OFTEN WISH TO
*                      USE SPECIAL DISPLAY OPTIONS OR COMMUNICATE IN
*                      SPECIAL WAYS WITH HIS PROGRAM. THIS CAN BE DONE
*                      IN CREATING A PRIVATE MODULE WITH THE SPECIAL
*                      CODE LINKED IN. THE PROTOTYPE JOB FOR DOING THIS
*                      IS THE MEMBER JBOVER ON  F11LHO.JADEGS ; THIS
*                      MEMBER CONTAINS THE RELEVANT OVERLAY STRUCTURE.
*                      WHEN YOU USE IT, BE SURE TO CHANGE FILE NAMES
*                      CORRESPONDINGLY. FOR MORE INFORMATION ON PRIVATE
*                      MODULES, CONTACT J.OLSSON, G.PEARCE OR M.GODDARD.

                       THE GRAPHICS PROGRAM IS STILL BEING IMPROVED
                       AND CHANGES ARE SOMETIMES DONE.
                       UNFORESEEN RESULTS MAY OCCUR AND SHOULD BE
                       BROUGHT TO THE ATTENTION OF J.OLSSON.
                       ALSO SUGGESTIONS OF IMPROVEMENT ARE WELCOME...

                       A COPY OF THIS INFORMATION CAN BE OBTAINED BY
                       SUBMITTING THE JOB   JBMENU    ON THE LIBRARY
                       F11LHO.JADEGS
C   22/03/97 703221923  MEMBER NAME  JBOVER   (JADEGS)      FORTRAN
//         JOB 10622622,CLASS=E,TIME=(0,12),MSGLEVEL=(1,0)
//*MAIN RELPRI=MED
//*********************************************************************
//*  THE MACRO JADEOVLY CONTAINS THE VALID OVERLAY STRUCTURE
//*    YOU CAN ADD YOUR OWN OVERLAY DETAILS OR INCLUDES AS FOLLOWS:
//*   //SYSLIN DD *
//*    INCLUDE SYSLIB(PRIVAT1,PRIVAT2,..)
//*   %MACRO 'F11LHO.JADEGS(JADEOVLY)'
//*    OVERLAY ONE
//*     INSERT MYOWN1
//*     INSERT MYOWN2
//*     INSERT MYOWN3
//*    ENTRY MAIN
//*    NAME JADE(R)
//*********************************************************************
// EXEC NEWLIB,PS='F11LHO.GRAPHS',
// PL='F11LHO.GRAPHL',TO=DISK
./ SCRATCH JADE0
//COMPRESS EXEC COMPRESS,LIB='F11LHO.GRAPHL'
//LINK EXEC PGM=IEWL,PARM='OVLY,MAP,LIST,SIZE=(512K,72K)',
//  REGION=900K
//SYSUT1 DD DSN=&&UT1,SPACE=(TRK,(20,20)),UNIT=DISK
//SYSPRINT DD SYSOUT=*
//SYSLIB DD DSN=F11LHO.GRAPHL,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=F11LHO.JADEGL,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=F11GOD.PATRECLD,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=JADELG.LOAD,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=JADEPR.JADELD,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=F22ALL.JADEMUL,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=F22NAR.TOFLIB.L,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=F11LHO.TAGG.L,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//       DD DSN=F1EBLO.BOSLIB.L,DISP=SHR
//       DD DSN=R02SCH.TSOIPS.LOAD,DISP=SHR
//       DD DSN=R02SCH.TCSUSER.LOAD,DISP=SHR
//       DD DSN=DESYLIB,DISP=SHR
//       DD DSN=SYS1.FORTLIB,DISP=SHR
//       DD DSN=R01UTL.CERNLIB,DISP=SHR
//SYSLMOD DD DSN=F11LHO.GRAPHL,DISP=SHR,VOL=SER=STOR05,UNIT=FAST
//*SYSLMOD DD DSN=F11LHO.GRAPHLX,DISP=(NEW,CATLG,DELETE),
//*  SPACE=(TRK,(95,0,10),),UNIT=FAST
//SYSLIN DD *
#include "jadeovly.for"
 ENTRY MAIN
 NAME JADE(R)
C   22/03/97 703221923  MEMBER NAME  JBOVER0  (JADEGS)      FORTRAN
//F11LHO   JOB 10622622,CLASS=E,TIME=(0,20),MSGLEVEL=(0,0)
//*MAIN RELPRI=HIG
//LINK EXEC PGM=IEWL,PARM='OVLY,LIST,SIZE=(320K,100K)',REGION=600K
//SYSUT1 DD DSN=&&UT1,SPACE=(TRK,(20,20)),UNIT=DISK
//SYSPRINT DD SYSOUT=*
//SYSLIB DD DSN=F11LHO.GRAPHL,UNIT=FAST,DISP=SHR
//       DD DSN=F11LHO.JADEGL,UNIT=FAST,DISP=SHR
//       DD DSN=F11GOD.PATRECLD,UNIT=FAST,DISP=SHR
//       DD DSN=JADELG.LOAD,UNIT=FAST,DISP=SHR
//       DD DSN=JADEPR.JADELD,UNIT=FAST,DISP=SHR
//       DD DSN=F22ALL.JADEMUL,UNIT=FAST,DISP=SHR
//       DD DSN=F22NAR.TOFLIB.L,UNIT=FAST,DISP=SHR
//       DD DSN=F1EBLO.BOSLIB.L,UNIT=FAST,DISP=SHR
//       DD DSN=R02SCH.TSOIPS.LOAD,DISP=SHR
//       DD DSN=R02SCH.TCSUSER.LOAD,DISP=SHR
//       DD DSN=DESYLIB,DISP=SHR
//       DD DSN=SYS1.FORTLIB,DISP=SHR
//       DD DSN=R01UTL.CERNLIB,UNIT=FAST,DISP=SHR
//SYSLMOD DD DSN=F11LHO.GRAPHL,DISP=SHR
//*SYSLMOD DD DSN=F11LHO.GRAPHLX,DISP=(NEW,CATLG,DELETE),
//*  SPACE=(TRK,(80,0,10),),UNIT=FAST
//SYSLIN DD *
 INCLUDE SYSLIB(GPHMAIN0,MUINIG,SUPERVY)
 INCLUDE SYSLIB(SCANNR0,USER0,STPLST0,RETTEN0,STWADD0,NEWS0,NOTICE0)
 OVERLAY ONE
  INSERT IDFUN
  INSERT JOBNAM
  INSERT NOTICE
  INSERT OPUNIT
  INSERT STWADD
  INSERT WALLOK
  INSERT STPLST
  INSERT NEWS
  INSERT CDTLCO
  INSERT MENU
  INSERT HELPUS
  INSERT RETTEN
  INSERT GNUREC
  INSERT SAFCHK
  INSERT FREEDD
  INSERT INITT
  INSERT GETSDD
  INSERT GETPDD
  INSERT ALCDYN
  INSERT DALDYN
  INSERT GETDD
  INSERT RESET
  INSERT TERM
  INSERT NEWPAG
  INSERT FINITT
  INSERT ABEND
  INSERT ERRSET
  INSERT ERRPRT
 OVERLAY ONE
  INSERT ZVERTF
  INSERT TRUTH
  INSERT TRKNM
  INSERT BANKPR
  INSERT AGRPR
  INSERT TRIG2
  INSERT TBGDIS
  INSERT TBGSTR
  INSERT CIRSEG
  INSERT ECAPQ
  INSERT EXJHTL
 OVERLAY ONE
  INSERT MUANA
  INSERT MUANAF
  INSERT MUFFLE
  INSERT MUFFLM
  INSERT MUFFLS
  INSERT MUFFLT
  INSERT MUFFLX
  INSERT MUFFLY
  INSERT MUFFLZ
  INSERT MUREGM
  INSERT MUREGY
  INSERT MUREGS
  INSERT MUDCHK
  INSERT MATIN1
 OVERLAY ONE
  INSERT CHANGE
  INSERT ALPHAN
  INSERT INITZV
  INSERT MUINI
  INSERT MUFINI
  INSERT LGINIT
  INSERT KALIBR
  INSERT MUREG
  INSERT LGCALB
  INSERT LGERSE
  INSERT LGBADC
  INSERT JETCAL
  INSERT EVREA1
  INSERT KTMCON
 OVERLAY ONE
  INSERT SRTREL
  INSERT FLINEL
  INSERT FTRKEL
  INSERT PRHTAR
 OVERLAY ONE
  INSERT KNTREL
  INSERT TRHTCK
  INSERT LRFIT
  INSERT TRLCHI
  INSERT PARFIT
  INSERT CIRFIT
  INSERT RESIDS
  INSERT NEWINC
  INSERT FXYZ
  INSERT XYFIT
  INSERT ZRFIT
  INSERT PCWORK
  INSERT ERRORM
  INSERT PATROL
  INSERT BAKPAK
  INSERT TRLORD
  INSERT PATROL
  INSERT BACKTR
  INSERT RSTBTR
  INSERT LFRT
  INSERT SIDE1
  INSERT BAKFIT
  INSERT BSIDE
  INSERT COREC
  INSERT SLCOR
  INSERT BSTORE
  INSERT RINCON
  INSERT INTJN1
  INSERT CHOOSE
 OVERLAY ONE
  INSERT EVREAD
  INSERT MUCON
  INSERT PARCHN
  INSERT EVWRIT
  INSERT MUCONW
  INSERT RDSTAT
  INSERT RDMODN
  INSERT RDDOUB
  INSERT RDINEF
  INSERT RDMERG
  INSERT RDPOIN
  INSERT RDRDMH
  INSERT RDPATR
  INSERT RDRESO
  INSERT RDDDCL
  INSERT RDTRG1
  INSERT TAGSIM
  INSERT RDTRG2
 OVERLAY ONE
  INSERT EVDISP
  INSERT CRICRO
  INSERT FICOOR
  INSERT HITMRK
  INSERT HODRFI
  INSERT MUHDSP
  INSERT MUHIT
  INSERT PBGRFI
  INSERT PBGCYL
  INSERT PBGSUM
  INSERT TR3DSP
  INSERT PBGRZ
  INSERT PHNUMB
  INSERT RROTAT
  INSERT FWCHEV
  INSERT RODRAW
  INSERT HITDSP
  INSERT CRTREL
  INSERT BLSHOW
  INSERT BLNUMB
  INSERT LGDEAD
  INSERT FWMUHT
  INSERT FTDLHO
 OVERLAY ONE
  INSERT RSDISP
  INSERT GMTEXT
  INSERT LGCDIR
  INSERT ILCTRC
  INSERT INTOLG
  INSERT LGEERR
  INSERT LGCRN2
  INSERT LGAVDE
  INSERT SHMAX
  INSERT LGAVDP
  INSERT LGCHC2
  INSERT LGBHIT
  INSERT LGEHIT
  INSERT LGBFIL
  INSERT LGEFIL
  INSERT LGECOR
  INSERT LGECR0
  INSERT LGNMEC
  INSERT LGREIN
  INSERT TPCNST
  INSERT TRTEXT
  INSERT XXXYYY
  INSERT GAMDIS
  INSERT LGCLST
  INSERT TRKROL
  INSERT RUTRCK
  INSERT YAMADA
  INSERT PARDIS
  INSERT CIRDIS
  INSERT BANKLS
  INSERT LINDIS
  INSERT LGANAL
  INSERT LGDCPY
  INSERT IDATTM
  INSERT LGCRNR
  INSERT LGEIGN
  INSERT LGCCTL
  INSERT LGTHCR
  INSERT LGESMR
  INSERT LGCLPB
  INSERT LGCLPC
  INSERT LGCLUS
  INSERT LGNBLS
  INSERT LGSRTH
  INSERT VTXAFT
  INSERT VTXPRE
  INSERT VTXPNT
  INSERT VTXBNK
  INSERT VTXSRC
  INSERT VTXEE
  INSERT VTXS
  INSERT VERTEX
  INSERT GVTXFT
  INSERT SMINVD
  INSERT EFMASS
  INSERT GETGAM
  INSERT VTXINI
  INSERT JEGAIN
  INSERT MCGJET
  INSERT JETREC
  INSERT RJXX
  INSERT MINUS
  INSERT RESTAR
  INSERT SPHERC
  INSERT ARROW
  INSERT AXSHOW
 OVERLAY ONE
  INSERT JADISP
  INSERT ECAP
  INSERT DRACAP
  INSERT FWCAP
  INSERT FWNEW
  INSERT NEWCAP
  INSERT RUTEXT
  INSERT FWCAP1
  INSERT FWSCIN
  INSERT FWSCN1
  INSERT FWCHAM
  INSERT FWCHM1
  INSERT FWCHM2
  INSERT BARREL
  INSERT FORWRD
  INSERT MUPIC
  INSERT MUWIRE
  INSERT FWMUCN
 OVERLAY ONE
  INSERT DEDXDS
  INSERT DEDXBN
  INSERT GAMM
  INSERT DRUCK
  INSERT POLINT
  INSERT WAHR
  INSERT DSORT
  INSERT DEDXBK
  INSERT DEDXVW
  INSERT TIMCOR
  INSERT NDATE
  INSERT CRSTLK
 OVERLAY ONE
  INSERT TOFDS
  INSERT LGBTDC
  INSERT TOFVW
  INSERT TOFBK
  INSERT TOFINT
  INSERT TOFIN2
  INSERT TOFMAS
  INSERT TOFARD
  INSERT TFARNW
  INSERT TOFBRA
  INSERT TOFCLC
  INSERT TOFMA2
  INSERT TOFAR2
  INSERT TOFCL2
  INSERT TOFCOR
  INSERT TFSTOR
  INSERT TFCTD1
  INSERT CMASS
  INSERT MOCARD
 OVERLAY ONE
  INSERT EVIPR4
  INSERT EVIPR2
  INSERT BOX3
  INSERT TRIANQ
  INSERT QPLOTS
  INSERT PLIMIT
  INSERT SUMPAT
  INSERT CHCLSP
  INSERT SPHRIX
  INSERT BOX
  INSERT EHIST
  INSERT OUTPRD
  INSERT MOTAPR
  INSERT MTOPRM
  INSERT KIPRCR
 OVERLAY ONE
  INSERT DSFADC
 ENTRY MAIN
 NAME JADE(R)
C   22/03/97 703221923  MEMBER NAME  JBOVER8  (JADEGS)      FORTRAN
//F11LHOLN JOB 10622622,CLASS=A,TIME=(0,15),MSGLEVEL=(0,0)
//*MAIN RELPRI=HIG
//LINK EXEC PGM=IEWL,PARM='OVLY,XREF,LIST,SIZE=(320K,100K)',REGION=600K
//SYSUT1 DD DSN=&&UT1,SPACE=(TRK,(20,20)),UNIT=DISK
//SYSPRINT DD SYSOUT=A
//SYSLIB DD DSN=F11LHO.GRAPHL,UNIT=FAST,DISP=SHR
//       DD DSN=F11LHO.JADEGL,UNIT=FAST,DISP=SHR
//       DD DSN=F11GOD.PATRECLD,UNIT=FAST,DISP=SHR
//       DD DSN=JADELG.LOAD,UNIT=FAST,DISP=SHR
//       DD DSN=F22ALL.JADEMUL,UNIT=FAST,DISP=SHR
//       DD DSN=F22NAR.TOFLIB.L,UNIT=FAST,DISP=SHR
//       DD DSN=F1EBLO.BOSLIB.L,UNIT=FAST,DISP=SHR
//       DD DSN=R02SCH.TSOIPS.LOAD,DISP=SHR
//       DD DSN=R02SCH.TCSUSER.LOAD,DISP=SHR
//       DD DSN=DESYLIB,DISP=SHR
//       DD DSN=SYS1.FORTLIB,DISP=SHR
//       DD DSN=R01UTL.CERNLIB,UNIT=FAST,DISP=SHR
//SYSLMOD DD DSN=F11LHO.GRAPHL,DISP=SHR
//SYSLIN DD *
 INCLUDE SYSLIB(GPHMAIN)
 OVERLAY ONE
  INSERT INITZV
  INSERT LGINIT
  INSERT INPATC
  INSERT INBACK
  INSERT INPATR
  INSERT MUINI
  INSERT MUFINI
 OVERLAY ONE
  INSERT EXJHTL
 OVERLAY ONE
  INSERT RDMODN
  INSERT RDDOUB
  INSERT RDINEF
  INSERT RDMERG
  INSERT RDPOIN
  INSERT RDRDMH
  INSERT RDPATR
  INSERT RDRESO
  INSERT NVERT
  INSERT RDTRG1
  INSERT TAGSIM
  INSERT RDTRG2
  INSERT RDDDCL
  INSERT RDSTAT
 OVERLAY ONE
  INSERT EVWRIT
  INSERT MUCONW
 OVERLAY ONE
  INSERT LGCALB
  INSERT LGERSE
  INSERT LGBADC
 OVERLAY ONE
  INSERT JETCAL
  INSERT ZVERTF
 OVERLAY ONE
  INSERT PATREC
  INSERT FXYZ
  INSERT XYFIT
  INSERT PCWORK
  INSERT ZRFIT
  INSERT PATROL
  INSERT TRLORD
  INSERT CHOOSE
  INSERT BSTORE
  INSERT INTJN1
  INSERT RINCON
  INSERT SRTREL
  INSERT ATRKEL
  INSERT FLINEL
  INSERT FTRKEL
  INSERT PRHTAR
 OVERLAY TWO
  INSERT KNTREL
 OVERLAY TWO
  INSERT PATRC1
  INSERT BACKTR
  INSERT LFRT
  INSERT BSIDE
  INSERT COREC
  INSERT SIDE1
  INSERT SLCOR
  INSERT BAKFIT
 OVERLAY ONE
  INSERT LGANAL
  INSERT IDATTM
  INSERT LGCCTL
  INSERT LGCLUS
  INSERT LGMESG
  INSERT LGNBLS
  INSERT LGSRTH
  INSERT LGCLPB
  INSERT LGCLPC
  INSERT LGSHP
  INSERT LGCRNR
  INSERT LGEERR
  INSERT LGEIGN
  INSERT LGMESG
  INSERT LGDCPY
 OVERLAY ONE
  INSERT MUFFLE
  INSERT MUFFLM
  INSERT MUFFLS
  INSERT MUFFLY
  INSERT MUREGM
  INSERT MUREGY
  INSERT MUREGS
  INSERT MUCON
  INSERT MUANAJ
  INSERT MUJOIN
  INSERT MUFFLX
  INSERT MUFFLZ
  INSERT MUANAF
  INSERT MUDCHK
  INSERT MUREG
 OVERLAY ONE
  INSERT MUANAL
  INSERT MULINE
  INSERT MULINA
  INSERT MULINF
  INSERT MULING
  INSERT MULINW
  INSERT MULINP
  INSERT MULINU
  INSERT MULIND
  INSERT MULINO
  INSERT MULINR
  INSERT MULINM
  INSERT MULINS
  INSERT MUR2DS
 OVERLAY ONE
  INSERT EVDISP
  INSERT PBGRZ
  INSERT FWMUHT
  INSERT FTDLHO
  INSERT PBGSUM
  INSERT XYBLK
  INSERT XYTAG
  INSERT CAPMRK
  INSERT CROAX
  INSERT FICOOR
  INSERT WRAP
  INSERT FWCHEV
  INSERT XYTAG
  INSERT RODRAW
  INSERT HITMRK
  INSERT HODRFI
  INSERT CRICRO
  INSERT PBGCYL
  INSERT PBGRFI
  INSERT PHNUMB
 OVERLAY ONE
  INSERT JADISP
  INSERT ECAP
  INSERT DRACAP
  INSERT DRAMOV
  INSERT FWCAP
  INSERT MUPIC
  INSERT MUVIER
  INSERT MUWIRE
  INSERT BARREL
  INSERT FORWRD
  INSERT FWCAP1
  INSERT FWCHM1
  INSERT FWCHM2
  INSERT FWSCN1
  INSERT FWCHAM
  INSERT FWSCIN
  INSERT FWMUCN
 OVERLAY ONE
  INSERT MENU
  INSERT NOTICE
  INSERT TRUTH
  INSERT BANKPR
  INSERT OPUNIT
  INSERT DRCHCH
 OVERLAY ONE
  INSERT DEDXVW
  INSERT DEDXDS
  INSERT DEDXBN
  INSERT GAMM
  INSERT POLINT
  INSERT WAHR
  INSERT DSORT
  INSERT DEDXBK
  INSERT TIMCOR
  INSERT CRSTLK
 OVERLAY ONE
  INSERT TOFDS
  INSERT TOFVW
  INSERT TOFINT
  INSERT TOFMAS
  INSERT TOFARD
  INSERT TOFCLC
  INSERT TOFCOR
  INSERT TFSTOR
  INSERT TFCTD1
  INSERT CORCST
  INSERT CMASS
  INSERT MOCARD
 OVERLAY ONE
  INSERT INITT
  INSERT GETPDD
  INSERT FINITT
  INSERT ERRSET
  INSERT ERRPRT
  INSERT ABEND
 ENTRY MAIN
 NAME JADEZ(R)
C   22/03/97 703221923  MEMBER NAME  JBPATT1  (JADEGS)      FORTRAN
//F11LHO   JOB CLASS=E,MSGLEVEL=(0,0),TIME=(,20)
//*MAIN LINES=(2),RELPRI=HIG,ORG=EXT,SYSTEM=/CC
//* EXEC NEWFAST
// EXEC NEWLIB,PS='F11LHO.JADEGS',
// LEVEL=0,OPT=2,FORT=XL
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ COMPILE USPATT
./ COMPILE KALIBR9
// EXEC FLG,PARM.LKED='LIST',REGION.GO=800K
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=,DSN=&&LOAD
//            DD DSN=F11LHO.JADEGL,UNIT=FAST,DISP=SHR
//            DD DSN=F11GOD.PATRECLD,UNIT=FAST,DISP=SHR
//            DD DSN=JADELG.LOAD,UNIT=FAST,DISP=SHR
//            DD DSN=F22ALL.JADEMUL,UNIT=FAST,DISP=SHR
//            DD DSN=F1EBLO.BOSLIB.L,UNIT=FAST,DISP=SHR
//            DD DSN=R01UTL.HBOOK321.L,UNIT=FAST,DISP=SHR
//            DD DSN=R02BUT.CERNLIB,UNIT=FAST,DISP=SHR
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0,USPATT,KALIBR9)
//*
//GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F11OLS.JADEPR.MS115
//*
//GO.FT03F001 DD DUMMY
//*
//GO.FT10F001 DD UNIT=FAST,DSN=F11LHO.ASTART0,DISP=SHR
//GO.FT11F001 DD UNIT=FAST,DSN=F11LHO.ASTART1,DISP=SHR
//GO.FT21F001 DD UNIT=FAST,DSN=F11LHO.AUPDAT0,DISP=SHR
//GO.FT22F001 DD UNIT=FAST,DSN=F11LHO.AUPDAT1,DISP=SHR
//*
//*GO.FT03F001 DD UNIT=FAST,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   SPACE=(TRK,(100,20),RLSE),DSN=F11PST.DSK466C
//*GO.FT03F001 DD UNIT=FAST,DISP=OLD,DSN=F11PST.DSK466C
//*GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   DSN=F11PST.TPRF133
C   22/03/97 703221923  MEMBER NAME  JBPATT2  (JADEGS)      FORTRAN
//F11LHO   JOB CLASS=E,MSGLEVEL=(0,0),TIME=(,30)
//*MAIN LINES=(2),RELPRI=MED,ORG=EXT,SYSTEM=/CC
//* EXEC NEWFAST
// EXEC NEWLIB,PS='F11LHO.JADEGS',
// LEVEL=0,OPT=2,FORT=XL
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ COMPILE USPATT
// EXEC FLG,PARM.LKED='LIST',REGION.GO=800K
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=,DSN=&&LOAD
//            DD DSN=F11LHO.JADEGL,UNIT=FAST,DISP=SHR
//            DD DSN=F11GOD.PATRECLD,UNIT=FAST,DISP=SHR
//            DD DSN=JADELG.LOAD,UNIT=FAST,DISP=SHR
//            DD DSN=F22ALL.JADEMUL,UNIT=FAST,DISP=SHR
//            DD DSN=F1EBLO.BOSLIB.L,UNIT=FAST,DISP=SHR
//            DD DSN=R01UTL.HBOOK321.L,UNIT=FAST,DISP=SHR
//            DD DSN=R02BUT.CERNLIB,UNIT=FAST,DISP=SHR
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0,USPATT,KALIBR9)
//*
//GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F11OLS.JADEPR.MS115
//*
//*O.FT03F001 DD DUMMY
//FT03F001 DD MSVGP=VTMP,UNIT=3330V,DISP=(NEW,CATLG,DELETE),
//         DCB=R01DCB.VBS,DSN=F11PST.JADEPR.MS115
//*
//GO.FT10F001 DD UNIT=FAST,DSN=F11LHO.ASTART0,DISP=SHR
//GO.FT11F001 DD UNIT=FAST,DSN=F11LHO.ASTART1,DISP=SHR
//GO.FT21F001 DD UNIT=FAST,DSN=F11LHO.AUPDAT0,DISP=SHR
//GO.FT22F001 DD UNIT=FAST,DSN=F11LHO.AUPDAT1,DISP=SHR
//*
//*GO.FT03F001 DD UNIT=FAST,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   SPACE=(TRK,(100,20),RLSE),DSN=F11PST.DSK466C
//*GO.FT03F001 DD UNIT=FAST,DISP=OLD,DSN=F11PST.DSK466C
//*GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   DSN=F11PST.TPRF133
C   22/03/97 703221923  MEMBER NAME  JBRECALI (JADEGS)      FORTRAN
//F11LHOC3 JOB 10622622,CLASS=L,TIME=(15,00),MSGLEVEL=(0,0)
//*MAIN RELPRI=MED
// EXEC NEWLIB,PS='F11LHO.JADEGS',
// OPT=2,FORT=XL
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ C USERCP
./ I 7700
         GO TO 11
./ I 800
      COMMON / CJDRCH / RDEC(4),PSIIN(3),RINCR(3),FIRSTW(3),FSENSW(3),
     * RDEPTH,SWDEPL,YSUSPN,TIMDEL(2,3),ZMAX,ZOFFS,ZRESOL,ZNORM,ZAL,
     * ZSCAL,DRIDEV,DRICOS,DRISIN,PEDES,TZERO(3)
        COMMON/  CPK/ NTOT,NTOLD,NBLK,NEV,NS
./ I 4600
C---
C---     THE COMMENTED OUT TZEROS BELOW MUST BE TURNED ON AND SET
C---     APPROPRIATELY IF ONE WISHES TO OVERWRITE THE DEFAULT
C---     TZEROS PROVIDED BY KALIBR AT EACH NEW RUN.
C---
C     TZERO(1)=-3.4
C     TZERO(2)=-3.0
C     TZERO(3)=-2.0
C     IF(NRUN.GE. 699) TZERO(3)=-2.3
./ I 9600
      IF((NWRIT.LT.IFPRNT).OR.(NWRIT.GT.ILPRNT)) GO TO 444
      CALL BSLW
      CALL BPRL(1000)
  444 CONTINUE
./ RS 6400 ' ' 'C'
./ I 6400
         IPNJET=IDATA(IBLN('JETC'))
         IF((IPNJET.LT.4).OR.(IPNJET.GT.20000)) WRITE(6,445) IPNJET,NREC
     1   ,NRUN,NEVT
  445    FORMAT('0UNORTHODOX IPNJET = ',I10,' AT: ',3I8,/)
         IF((IPNJET.LT.4).OR.(IPNJET.GT.20000)) GO TO 11
         NUMJET=IDATA(IPNJET-2)
         IPNNEX=IDATA(IPNJET-1)
         IF((IPNNEX.LT.4).OR.(IPNNEX.GT.20000)) WRITE(6,446) IPNNEX,NREC
     1   ,NRUN,NEVT
  446    FORMAT('0UNORTHODOX IPNNEX = ',I10,' AT: ',3I8,/)
         IF((IPNNEX.LT.4).OR.(IPNNEX.GT.20000)) GO TO 11
C---     NUMNEX=IDATA(IPNNEX-2)
C---     CALL BDLS('JETC',NUMJET)
C---     IPNJET=IDATA(IBLN('JETC'))
C---     IF((IPNJET.LT.4).OR.(IPNJET.GT.20000)) WRITE(6,447) IPNJET,NREC
C--- 1   ,NRUN,NEVT
C-447    FORMAT('0UNORTHODOX IPNJET (TWO) = ',I10,' AT: ',3I8,/)
C---     IF((IPNJET.LT.4).OR.(IPNJET.GT.20000)) GO TO 11
C---     CALL BRNM('JETC',NUMNEX,'JETC',NUMJET)
C---
C---     COMMENT CARDS BELOW MUST BE SWITCHED ON IN CASE Z VERTEX,
C---     PATTERN RECOGNITION OR HIT LABEL RESULTS ARE TO BE DELETED
C---     AND REGENERATED.
C---
C        CALL CLOC(JERROR,'ZVTX',0)
C        IF(JERROR.LT.1) WRITE(6,501) NREC,NRUN,NEVT
C 501    FORMAT('0ZVTX(0) DOES NOT EXIST AT: ',3I8,/)
C        IF(JERROR.LT.1) GO TO 11
C        CALL BDLS('ZVTX',0)
         CALL CLOC(JERROR,'PATR',9)
         IF(JERROR.LT.1) WRITE(6,502) NREC,NRUN,NEVT
  502    FORMAT('0PATR(9) DOES NOT EXIST AT: ',3I8,/)
         IF(JERROR.LT.1) GO TO 11
C---     CALL BDLS('PATR',9)
         CALL CLOC(JERROR,'JHTL',9)
         IF(JERROR.LT.1) WRITE(6,503) NREC,NRUN,NEVT
  503    FORMAT('0JHTL(9) DOES NOT EXIST AT: ',3I8,/)
         IF(JERROR.LT.1) GO TO 11
         CALL BDLS('JETC',NUMJET)
         CALL BDLS('PATR',9)
         CALL BDLS('JHTL',9)
         CALL BGAR(IGA)
         IF(IGA.NE.1) WRITE(6,504) NREC,NRUN,NEVT
  504    FORMAT('0GARBAGE COLLECTION NOT DONE AT: ',3I8,/)
./ I 4100
C--      MAXIMUM NUMBER OF EVENTS TO BE WRITTEN OUT.
      NWRTMX=10000
C--      MINIMUM AND MAXIMUM RUN NUMBERS TO BE ACCEPTED.
      NRUNMN=0
      NRUNMX=100000
C--      MINIMUM AND MAXIMUM EVENT NUMBERS TO BE ACCEPTED.
C--      IF A MINIMUM RUN NUMBER GREATER THAN 0 HAS BEEN
C--      SPECIFIED, THE MINIMUM EVENT NUMBER CUT APPLIES ONLY TO
C--      THE FIRST ACCEPTED RUN. SIMILARLY, IF A MAXIMUM RUN
C--      NUMBER LESS THAN 50000 IS GIVEN, THE MAXIMUM EVENT NUMBER
C--      CUT APPLIES ONLY TO THE LAST RUN ACCEPTED.
      NEVTMN=0
      NEVTMX=1000000
C--      MINIMUM AND MAXIMUM RECORD NUMBERS FROM THE BEGINNING
C--      OF THE INPUT DATA SET FOR WHICH THE CORRESPONDING RECORDS
C--      MAY BE WRITTEN OUT.
      NRECMN=0
      NRECMX=1000000
C--      IFPRNT=M AND ILPRNT=N SPECIFY THAT FOR THE MTH THROUGH
C--      THE NTH EVENTS TO BE WRITTEN OUT A PRINTOUT OF THE EVENT
C--      RECORD WILL BE MADE. NOT MORE THAN 10 PRINTOUTS CAN BE MADE.
      IFPRNT=1
      ILPRNT=0
// EXEC FLG,PARM.LKED='MAP,LIST',REGION=750K
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=FAST,DSN=&&LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F11LHO.JADEGL
//            DD DISP=SHR,UNIT=FAST,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,UNIT=FAST,DSN=JADELG.LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F22ALL.JADEMUL
//            DD DISP=SHR,UNIT=FAST,DSN=F1EBLO.BOSLIB.L
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0,USERCP)
//GO.FT10F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.ASTART0
//GO.FT11F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.ASTART1
//GO.FT21F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.AUPDAT0
//GO.FT22F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.AUPDAT1
//*GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F22ORI.P.DSK009
//GO.FT02F001 DD UNIT=TAPE,DISP=OLD,DSN=JADEPR.ST033
//*GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F22ORI.RMH330.FASTSELD
//*GO.FT03F001 DD UNIT=FAST,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*  SPACE=(TRK,(250,50),RLSE),DSN=F11LHO.DSKPEDES
//GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),
//   DCB=(R01DCB.VBS,LRECL=6236,BLKSIZE=24948),
//   DSN=JADEPR.ST033R
//*GO.FT03F001 DD DUMMY
C   22/03/97 703221923  MEMBER NAME  JBREDUC2 (JADEGS)      FORTRAN
//F11JEO   JOB 10622622,OLSSON,CLASS=K,MSGLEVEL=(0,0),TIME=(4,25)
//*MAIN RELPRI=MED
// EXEC NEWLIB,PS='F11LHO.JADEGS',PL='F11OLS.JADELD',UNIT=FAST,
// LEVEL=8,OPT=3,FORT=XL,REGION.NEWLIB=800K
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ COMPILE USREDUC2
// EXEC FLG,REGION.GO=900K
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=,DSN=&&LOAD
//            DD DISP=SHR,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,DSN=F11LHO.JADEGL
//            DD DISP=SHR,DSN=JADELG.LOAD
//            DD DISP=SHR,DSN=F22ALL.JADEMUL
//            DD DISP=SHR,DSN=F22NAR.TOFLIB.L
//            DD DISP=SHR,DSN=F1EBLO.BOSLIB.L
//            DD DISP=SHR,DSN=R01UTL.HBOOK321.L
//            DD DISP=SHR,DSN=R02BUT.CERNLIB
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0)
 INCLUDE SYSLIB(USREDUC2)
//GO.FT21F001 DD DISP=SHR,DSN=F11LHO.AUPDAT0
//GO.FT22F001 DD DISP=SHR,DSN=F11LHO.AUPDAT1
//*                        INPUT:
//GO.FT02F001 DD UNIT=TAPE,DISP=OLD,DSN=JADEPR.ST094
//   DD UNIT=AFF=FT02F001,DISP=OLD,DSN=JADEPR.ST095
//*GO.FT02F001 DD DISP=SHR,DSN=F11OLS.RED2TST3
//*            DD DISP=SHR,DSN=F11OLS.RED2TST3
//*                        OUTPUT:
//*GO.FT03F001 DD DUMMY,DCB=R01DCB.VBS
//*GO.FT03F001 DD DISP=SHR,DSN=F11OLS.RED2TST2
//*GO.FT03F001 DD UNIT=FAST,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   SPACE=(TRK,(40,5),),DSN=F11OLS.RED2TST7
//*GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   DSN=F11OLS.R28890
//GO.FT03F001 DD UNIT=DISK,DISP=(,PASS),
//   DCB=(R01DCB.VBS,LRECL=6236),
//       SPACE=(CYL,(200,20)),DSN=&&SCRTCH
//*LOGPRINT DD SYSOUT=*
         0         0    100000         0         0         0         0
         0    400000         0     10000         0         0         0
     IHIST     IRED1    MAXEVS      IPRN    ICALIB    ICALJC    IREPAT
    NNRMIN    NNRMAX LOW RUNLIM  HIGH RUNLIM  IREFRM  ITMLOG    IPATRJ
    BOTH LIMITS ARE WRITTEN
//*
//*  COPY DISK OUTPUT TO TAPE
//*
//COPY EXEC PGM=IEBGENER
//SYSUT1 DD UNIT=DISK,DISP=(OLD,DELETE),DSN=&&SCRTCH
//SYSUT2 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),
//          DCB=(R01DCB.VBS,LRECL=6236,BLKSIZE=24948),
//          DSN=F11OLS.R2187B
//SYSPRINT DD SYSOUT=*
//SYSIN DD DUMMY
C   22/03/97 703221923  MEMBER NAME  JBRED282 (JADEGS)      FORTRAN
//F11JEO   JOB 10622622,OLSSON,CLASS=K,MSGLEVEL=(1,0),TIME=(4,30)
//*MAIN RELPRI=MED
//*EXEC NEWFAST
//* EXEC NEWLIB,PS='F11LHO.JADEGS',PL='F11LHO.JADEGL',UNIT=FAST,
//* LEVEL=8,OPT=3,FORT=XL,REGION.NEWLIB=800K
//*MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
//*./ COMPILE USRED282
// EXEC FLG,REGION.GO=950K
//LKED.SYSLIB DD
//            DD
//*           DD DISP=SHR,UNIT=,DSN=&&LOAD
//            DD DISP=SHR,DSN=F11LHO.JADEGL
//            DD DISP=SHR,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,DSN=JADELG.LOAD
//            DD DISP=SHR,DSN=F22ALL.JADEMUL
//            DD DISP=SHR,DSN=F22NAR.TOFLIB.L
//            DD DISP=SHR,DSN=JADEPR.JADELD
//            DD DISP=SHR,DSN=F1EBLO.BOSLIB.L
//            DD DISP=SHR,DSN=R01UTL.HBOOK321.L
//            DD DISP=SHR,DSN=R02BUT.CERNLIB
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0)
 INCLUDE SYSLIB(USRED282)*
//GO.FT21F001 DD DISP=SHR,DSN=F11LHO.AUPDAT0
//GO.FT22F001 DD DISP=SHR,DSN=F11LHO.AUPDAT1
//*                        INPUT:
//GO.FT02F001 DD UNIT=TAPE,DISP=OLD,DSN=JADEPR.REDUCONE.G0519V00
//*GO.FT02F001 DD UNIT=TAPE,DISP=OLD,DSN=JADEPR.REDUC1.G0496,
//*    VOL=SER=939517,LABEL=(1,SL,,IN)
//*GO.FT02F001 DD UNIT=TAPE,DISP=OLD,DSN=JADEPR.REDUC1.G0427,
//*    VOL=SER=(934049,934048),LABEL=(1,SL,,IN)
//* DD UNIT=AFF=FT02F001,DISP=OLD,DSN=JADEPR.ST095
//*                        OUTPUT:
//*GO.FT03F001 DD DUMMY,DCB=R01DCB.VBS
//*GO.FT03F001 DD UNIT=FAST,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   SPACE=(TRK,(80,11),),DSN=F11OLS.NEUTR2.SUM121
//*GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   DSN=F11OLS.R28890
//*GO.FT03F001 DD DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*    DSN=F11OLS.NEUSUM.DISK13,
//*         MSVGP=VTMP,UNIT=3330V
//GO.FT03F001 DD UNIT=DISK,DISP=(,PASS),
//   DCB=(R01DCB.VBS,LRECL=6236),
//       SPACE=(CYL,(180,20)),DSN=&&SCRTCH
//*LOGPRINT DD SYSOUT=*
         0         0    100000         0         0         0         0
         0    400000         0     20000         0         0         0
     IHIST    ITOFCT    MAXEVS      IPRN    ICALIB    ICALJC    IREPAT
    NNRMIN    NNRMAX LOW RUNLIM  HIGH RUNLIM  IREFRM  ITMLOG    IPATRJ
    BOTH LIMITS ARE WRITTEN
//*
//*  COPY DISK OUTPUT TO TAPE
//*
//COPY EXEC PGM=IEBGENER
//SYSUT1 DD UNIT=DISK,DISP=(OLD,DELETE),DSN=&&SCRTCH
//SYSUT2 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),
//          DCB=(R01DCB.VBS,LRECL=6236,BLKSIZE=24948),
//          DSN=F11OLS.R2519
//SYSPRINT DD SYSOUT=*
//SYSIN DD DUMMY
C   22/03/97 703221923  MEMBER NAME  JBSIMCNF (JADEGS)      FORTRAN
//F11LHOTT JOB 10622622,CLASS=E,TIME=(0,30),MSGLEVEL=(0,0)
// EXEC NEWLIB,PS='F11LHO.JADEGS',
// OPT=2,FORT=XL
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ C USERCP
./ I 4100
C--      MAXIMUM NUMBER OF EVENTS TO BE WRITTEN OUT.
      NWRTMX=100000
C--      MINIMUM AND MAXIMUM RUN NUMBERS TO BE ACCEPTED.
      NRUNMN=0
      NRUNMX=100000
C--      MINIMUM AND MAXIMUM EVENT NUMBERS TO BE ACCEPTED.
C--      IF A MINIMUM RUN NUMBER GREATER THAN 0 HAS BEEN
C--      SPECIFIED, THE MINIMUM EVENT NUMBER CUT APPLIES ONLY TO
C--      THE FIRST ACCEPTED RUN. SIMILARLY, IF A MAXIMUM RUN
C--      NUMBER LESS THAN 50000 IS GIVEN, THE MAXIMUM EVENT NUMBER
C--      CUT APPLIES ONLY TO THE LAST RUN ACCEPTED.
      NEVTMN=0
      NEVTMX=1000000
C--      MINIMUM AND MAXIMUM RECORD NUMBERS FROM THE BEGINNING
C--      OF THE INPUT DATA SET FOR WHICH THE CORRESPONDING RECORDS
C--      MAY BE WRITTEN OUT.
      NRECMN=0
      NRECMX=1000000
C--      IFPRNT=M AND ILPRNT=N SPECIFY THAT FOR THE MTH THROUGH
C--      THE NTH EVENTS TO BE WRITTEN OUT A PRINTOUT OF THE EVENT
C--      RECORD WILL BE MADE. NOT MORE THAN 10 PRINTOUTS CAN BE MADE.
      IFPRNT=1
      ILPRNT=0
// EXEC FLG,PARM.LKED='MAP,LIST',REGION=750K
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=,DSN=&&LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F11LHO.JADEGL
//            DD DISP=SHR,UNIT=FAST,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,UNIT=FAST,DSN=JADELG.LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F22ALL.JADEMUL
//            DD DISP=SHR,UNIT=FAST,DSN=F1EBLO.BOSLIB.L
//            DD DISP=SHR,UNIT=FAST,DSN=R01UTL.CERNLIB
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0,USERCP)
//GO.FT10F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.ASTART0
//GO.FT11F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.ASTART1
//GO.FT21F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.AUPDAT0
//GO.FT22F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.AUPDAT1
//*GO.FT02F001 DD UNIT=TAPE,DISP=OLD,DSN=F11LHO.JDATA01.REFORM.G0254V00
//GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F22ORI.RMH330.FASTSELD
//*GO.FT03F001 DD UNIT=FAST,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*  SPACE=(TRK,(250,50),RLSE),DSN=F11LHO.DSKPEDES
//*GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),DCB=R01DCB.VBS,
//*   DSN=F11LHO.TAPESEL
//*GO.FT03F001 DD UNIT=TAPE,DISP=(NEW,CATLG,DELETE),
//*   DCB=(R01DCB.VBS,LRECL=6236,BLKSIZE=24948),
//*   DSN=F11LHO.JDATA03.REFORM.G0066V00
//GO.FT03F001 DD DUMMY
C   22/03/97 703221923  MEMBER NAME  JOB0     (JADEGS)      FORTRAN
//F11LHO   JOB 10622622,CLASS=E,MSGLEVEL=(0,0)
//*MAIN ORG=EXT,LINES=(2)
// EXEC NEWLIB,PS='F11LHO.JADEGS',
// LEVEL=0,OPT=0,FORT=XL
//MACRO DD DSN=F11GOD.PATRECSR,DISP=SHR,UNIT=FAST
./ COMMENT : THIS IS AN EXEMPLE FOR TEMPORARY CHANGES
./ C USER0
./ I 5300
      CALL BSLW
      CALL BPRL(1000)
// EXEC FLG,PARM.LKED='MAP,LIST'
//LKED.SYSLIB DD
//            DD
//            DD DISP=SHR,UNIT=FAST,DSN=&&LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F11LHO.JADEGL
//            DD DISP=SHR,UNIT=FAST,DSN=F11GOD.PATRECLD
//            DD DISP=SHR,UNIT=FAST,DSN=JADELG.LOAD
//            DD DISP=SHR,UNIT=FAST,DSN=F22ALL.JADEMUL
//LKED.SYSIN DD *
 INCLUDE SYSLIB(JDMAIN0,USER0)
//GO.FT02F001 DD UNIT=FAST,DISP=SHR,DSN=F11LHO.DSK798M
