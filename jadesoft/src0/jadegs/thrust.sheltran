C   22/09/79 807251900  MEMBER NAME  THRUST   (JADEGS)      SHELTRAN
C
C-----------------------------------------------------------------------
      SUBROUTINE THRUST( P, NP, NMAXP, PTHR, AXIS, ITMERR )
C-----------------------------------------------------------------------
C
C    VERSION OF 21/05/79   LAST MOD 16/05/80   E.ELSEN
C
C    INPUT : P(4,NP)   NP MOMENTA PX,PY,PZ,ABS(P)
C            NP        NUMBER OF MOMENTA
C            NMAXP     CUTOFF FOR PERMUTED MOMENTA
C                      =0 MEANS NO CUTOFF
C    OUTPUT: PTHR      THRUST VALUE
C            AXIS      THRUST AXIS
C            ITMERR    =1, IF LEFT TIME IS NOT ENOUGH TO CALCULATE THRST
C                      (NOW MIN.2 SECONDS ARE REQUIRED.)
C    METHOD: MOMENTUM CONSERVATION IS TAKEN CARE OF BY INTRODUCING
C            MISSING MOMENTUM VECTOR AT THE END OF P ARRAY.
C            THRUST VALUE IS FOUND BY LOOKING THROUGH ALL
C            PERMUTATIONS OF THE MOMENTA.
C
C-----------------------------------------------------------------------
C
      DIMENSION P(1), AXIS(3)
      DIMENSION PIN(320), IPERM(200),IPS(320),PS(320)
      COMMON / CWORK / WORK(840)
      EQUIVALENCE (WORK(1),PIN(1)),(WORK(321),IPERM(1))
      EQUIVALENCE (WORK(521),PS(1),IPS(1))
C
      DATA IPINC / 4 /
      DATA NLIMIT / 15 /
      DATA NSEC / 2 /
      DATA IER0 / 0/, IER1 /0/, IER2 /0/
C
C------------------  C O D E  ------------------------------------------
C
      ITMERR = 0
C
      AXIS(1) = 0.
      AXIS(2) = 0.
      AXIS(3) = 1.
      PTHR = .5
C
      IF NP .LE. 0
      THEN
      IF IER0 .LT. 10
      THEN
      WRITE(6,9103)
 9103 FORMAT(' +++ ERROR IN THRUST.  CALLED WITH ZERO PARTICLES +++')
      CIF
      IER0 = IER0 + 1
      RETURN
      CIF
C
C
      NMAXP1 = NMAXP
      IF  NP.GE.NLIMIT .AND. ( NMAXP.EQ.0 .OR. NMAXP.GT.NLIMIT )
      THEN
N     WARNING CONCERNING NUMBER OF PARAMETERS
      IF IER1 .LT. 10
      THEN
      WRITE(6,9101) NP,NLIMIT,NMAXP
 9101 FORMAT(' +++++  WARNING FROM THRUST ROUTINE  +++++'/
     *       2X,I4,' ARE TOO MANY INPUT VECTORS. INTERNAL LIMIT=',I4,
     *' INPUT CUTOFF NMAXP=',I4,'. ONLY NLIMIT PARTICLES ARE PERMUTED')
C
      NMAXP1 = NLIMIT
      CIF
      IER1 = IER1 + 1
      CIF
C
      NTOT = NP
N     BALANCE MOMENTA IN P ARRAY
      CALL BALANC( P, NTOT, PSUM )
      IF PSUM .LT. 1.E-6
      THEN
      IF IER2 .LT. 10
      THEN
      WRITE(6,9104)
 9104 FORMAT(' +++ ERROR IN THRUST. MOMENTUM SUM AFTER BALANCE=0. +++')
      CIF
      IER2 = IER2 + 1
      RETURN
      CIF
C
      IF NTOT.GT.NMAXP1 .AND. NMAXP1.NE. 0
      THEN
N     SORT MOMENTA IN DECREASING ORDER
      PERFORM SORT
C
      NP1 = NTOT
      NTOT = NMAXP1 - 1
N     PIN ARRAY = ORDERED P ARRAY
      PERFORM FILLIN
C
N     BALANCE REDUCED SET OF MOMENTA
      CALL BALANC( PIN, NTOT, PSUM1 )
C
N     THRUST AXIS FOR PIN ARRAY
      PERFORM THRST
N     THRUST VALUE FOR P ARRAY
      PERFORM THREXP
      ELSE
N     COPY FROM P TO PIN ARRAY
      CALL UCOPY( P, PIN, NTOT*4 )
N     THRUST FOR PIN ARRAY
      PERFORM THRST
      CIF
      RETURN
C
C
C
C--------------
C
      PROC SORT
C--------------
N     ORDER P ARRAY USING SHELLSORT ALGTHM
N     SEQUENCE OF MOMENTA IS STORED IN IPERM
      FOR J=1,NTOT
N     INIT IPERM IN NATURAL ORDER
      IPERM(J) = J*4
      CFOR
C
      M = NTOT / 2
      WHILE  M.GT.0
      K = NTOT - M
      FOR J=1,K
      I = J
      WHILE  I.GT.0
      ILOW = IPERM(I)
      IHIGH = IPERM(I+M)
      IF  P(IHIGH) .GT. P(ILOW)
      THEN
      IPERM(I) = IHIGH
      IPERM(I+M) = ILOW
      I = I - M
      ELSE
      XWHILE
      CIF
      CWHILE
      CFOR
      M = M/2
      CWHILE
      CPROC
C
C
C--------------
C
      PROC FILLIN
C--------------
N     PIN(1..4,J) = P(1..4,IPERM(J)/4)
      FOR J=1,NTOT
      IPJ = IPERM(J)
      J4 = J*4
      PIN(J4  ) = P(IPJ  )
      PIN(J4-1) = P(IPJ-1)
      PIN(J4-2) = P(IPJ-2)
      PIN(J4-3) = P(IPJ-3)
      CFOR
      CPROC
C
C
C----------------
      PROC THRST
C----------------
      NPERM = 2**(NTOT-1)
      NOUT = ( NPERM - 1) / 8192 + 1
      NIN = MIN0( 8192, NPERM )
      NUP = NTOT*4 - 3
N     START VALUES
      PS(1) = 0.
      PS(2) = 0.
      PS(3) = 0.
      IPS(4) = 1
      PM2 = 0.
      J = 1
      K = 1
C
N     LOOPS OVER PERMUTATIONS
      FOR IOUT = 1, NOUT
      IF JUHR(NSEC) .EQ. 2
      THEN
N     SET DEFAULT FOR AXIS AND THRUST
      AXIS(1) = 0.
      AXIS(2) = 0.
      AXIS(3) = 1.
      PTHR = .5
      ITMERR = 1
      WRITE(6,9102) NSEC
 9102 FORMAT(' +++++++   TIME PROBLEMS IN THRUST - ROUTINE   ++++++++'/
     *       '        REMAINING TIME IS LESS THAN ',I4,' SECS.'/
     *       '         AXIS WAS SET TO Z AXIS AND THRUST = .5')
      RETURN
      CIF
C
      FOR IIN = 1, NIN
C
      PS1 = PS(K  ) + PIN(J  )
      PS2 = PS(K+1) + PIN(J+1)
      PS3 = PS(K+2) + PIN(J+2)
      PCL2 = PS1*PS1 + PS2*PS2 + PS3*PS3
      IF  PCL2 .GT. PM2
      THEN
      PM2 = PCL2
      AXIS(1) = PS1
      AXIS(2) = PS2
      AXIS(3) = PS3
      CIF
C
      IF J .LT. NUP
N     EXPAND
      THEN
      J = J + 4
      K = K + 4
      PS(K  ) = PS1
      PS(K+1) = PS2
      PS(K+2) = PS3
      IPS(K+3) = J
C
N     COMPRESS
      ELSE
      J = IPS(K+3)
      K = K - 4
      CIF
C
      CFOR
      CFOR
C
N     SQRT( MAX (SUM OVER PERM. OF MOMENTA ))
      AXISL = SQRT( PM2)
      FOR  J=1,3
N     THRUST AXIS
      AXIS(J) = AXIS(J) / AXISL
      CFOR
N     THRUST VALUE
      PTHR = 2. * AXISL / PSUM
      CPROC
C
C
C--------------
C
      PROC THREXP
C--------------
N     COMPUTE THRUST EXPLICITLY
      NIPINC = NP1*IPINC
      SPCOS = 0.
      FOR J=1,NIPINC,IPINC
      SPCOS = SPCOS + ABS( AXIS(1)*P(J)+AXIS(2)*P(J+1)+AXIS(3)*P(J+2) )
      CFOR
      PTHR = SPCOS / PSUM
      CPROC
C
C
      END
C   23/05/79            MEMBER NAME  BALANC   (PHYS1)       SHELTRAN
      SUBROUTINE BALANC( P, NTOT, PSUM )
C *---------------------------------------------------------
C *
C *  VERSION OF 23/05/79      LAST MOD 14/05/80     E.ELSEN
C *  PUT IN MOMENTUM BALANCING VECTOR BEHIND THE NTOT MOMENTA
C *  IN P. NTOT IS CHANGED ON RETURN. EXTRA LOCATIONS IN P MUST
C *  BE ACCOUNTED FOR IN CALLING ROUTINE.
C *  PSUM = SUM | P |    FOR BALANCED SET
C *  STORAGE :    P(1..3) = THREE VECTOR
C *               P(4)    = TOTAL MOMENTUM      BOTH REPEATED NTOT TIMES
C *---------------------------------------------------------
C
      DIMENSION P(1)
C
N     FIND SUM OF MOMENTA
      PSUM1 = 0.
      PSUM2 = 0.
      PSUM3 = 0.
      PSUM  = 0.
      N4 = NTOT*4
      FOR J=1,N4,4
      PSUM1 = P(J  ) + PSUM1
      PSUM2 = P(J+1) + PSUM2
      PSUM3 = P(J+2) + PSUM3
      PSUM  = P(J+3) + PSUM
      CFOR
      PTOT = SQRT( PSUM1*PSUM1 + PSUM2*PSUM2 + PSUM3*PSUM3 )
N     EXTRA LOC FOR PSUM IN P IF PSUM .GT. .01 GEV
      IF  PTOT .GT. .01
      THEN
      P(N4+1) = -PSUM1
      P(N4+2) = -PSUM2
      P(N4+3) = -PSUM3
      P(N4+4) = PTOT
      PSUM = PSUM + PTOT
N     INCREMENT NUMBER OF MOMENTA
      NTOT = NTOT + 1
      CIF
C
      RETURN
      END
