C   30/10/79 107101023  MEMBER NAME  BSIDE1   (PATRECSR)    SHELTRAN
      SUBROUTINE BSIDE
C
C     BACKTRACING VERSION 5 (MAR 2,79)
C   THIS PROCEDURE MATCHES AND STORES TRACKS GOING
C       THROUGH THE CELL SIDEWALLS
C
      IMPLICIT INTEGER*2 (H)
C
#include "cworkpr.for"
#include "cjdrch.for"
#include "cdsmax.for"
#include "cpatlm.for"
#include "cworkmx.for"
      DIMENSION LSTCL(3),LFTCL(3),NCELL(3),TANDEL(3)
      EQUIVALENCE (IBCK(1),LSTCL(1)),(IBCK(4),LFTCL(1))
      EQUIVALENCE (IBCK(7),NCELL(1)),(DBCK(1),TANDEL(1))
      DATA MSKCR1 /Z100/
C
C
      LRCORN=0
N     TEMPORARY TRACK NUMBER
      KT=K
      IRIFLG=0
      IWT=ILIM-1
N     REMEMBER CURRENT CELL
      ICX=ICL
C     CALL CHKX(58,KT,IWT,ICX)
N     'WHILE' ALLOWS FOR POSSIBILITY OF SEVERAL TRACKS
N     IN SUCCESSION PASSING THROUGH SIDEWALL
      WHILE IWT.LT.ILIM
N     DRIFT SPACE
      DS=TRKAR(KT,10-IUDFLG)
      IW=ITRKAR(KT,9-IUDFLG)
      IKX=0
N     SLOPE
      A=TRKAR(KT,11-IUDFLG)
C     CALL CHKX(27,KT,IW,IW)
C     CALL CHKX(-27,DS,A,A)
      PERFORM PAR
N     TRY A SOLN ON RIGHT SIDE
N     GET CELL OF CANDIDATE TRACK
      ICT=ICX+1
      IF(ICT.GT.LSTCL(KRING)) ICT=ICT-NCELL(KRING)
C     CALL CHKX(57,IPER,ICT,ICX)
C     CALL CHKX(58,NCELL(1),NCELL(2),NCELL(3))
C     CALL CHKX(59,LSTCL(1),LSTCL(2),LSTCL(3))
      LR1=2
      IF IPER.GE.0
      THEN
C     PRINT 6677
C6677 FORMAT(' TRY A SOLN ON RIGHT SIDE')
N     TRACKS IN THIS CELL?
      IF HNTCEL(ICT+1)-HNTCEL(ICT).GT.0
      THEN
      PERFORM SIDCEL
      IF LR.EQ.1.OR.IMARK.EQ.0.OR.LR.EQ.0
      THEN
      CALL SIDE1
      ELSE
      IWT=ILIM
      CIF
      ELSE
      IWT=ILIM
      CIF
      ELSE
      IWT=ILIM
C     PRINT 589,KT
C589  FORMAT('  RIGHT SOLN REFUSED FOR TRACK',I5)
      CIF
N     A SUCCESSFUL CONNECTION
      IF IKX.NE.0
      THEN
      IF LR.EQ.-1
      THEN
N     CORRECT STORED TRACK
      CALL COREC
      CIF
N     SET CORRECT LR FLAG
      LR=-1
N     RESET IWT
      IWT=HMCH(ITRKAR(IKX,9-IUDFLG)+1,KRING,2)
      IF(IUDFLG.EQ.6) IWT=-IWT
N     STORE IT AWAY
      CALL BSTORE
      IPST=0
N     RESET FOR ANOTHER GO
      LR=1
      IJFLG=0
      CIF
N     TRY SOLN FOR LR=-1 (IF NO PREVIOUUS LR=1 SOLN)
      IF IKX.EQ.0
      THEN
N     GET CELL NUMBER OF CANDIDATE TRACK
      ICT=ICX-1
      IF(ICT.LT.LFTCL(KRING)) ICT=ICT+NCELL(KRING)
      LR1=1
      IF IPER.LE.0
      THEN
C     PRINT 6678
C6678 FORMAT(' TRY A SOLN ON LEFT SIDE')
N     TRACKS IN THIS CELL?
      IF HNTCEL(ICT+1)-HNTCEL(ICT).GT.0
      THEN
      PERFORM SIDCEL
      IF LR.EQ.-1.OR.IMARK.EQ.0.OR.LR.EQ.0
      THEN
      CALL SIDE1
      ELSE
      IWT=ILIM
      CIF
      ELSE
      IWT=ILIM
      CIF
      ELSE
      IWT=ILIM
C     PRINT 588,KT
C588  FORMAT('  LEFT SOLN REFUSED FOR TRACK',I5)
      CIF
N     A SUCCESSFUL CONNECTION
      IF IKX.NE.0
      THEN
      IF LR.EQ.0
      THEN
N     CORRECT THE LR FLAG FOR THE FIRST TRACK STORED
      HISTR(1,NTR)=-HISTR(1,NTR)
      CIF
      IF LR.EQ.1
      THEN
N      CORRECT STORED TRACKS
      CALL COREC
      CIF
      LR=1
N     RESET IWT
      IWT=HMCH(ITRKAR(IKX,9-IUDFLG)+1,KRING,1)
      IF(IUDFLG.EQ.6) IWT=-IWT
N     STORE THE MATCHING TRACK AWAY
      CALL BSTORE
      IPST=0
      IJFLG=0
N    RESET FOR ANOTHER GO
      LR=-1
      CIF
      ELSE
N     FAILURE
      IWT=ILIM
      CIF
      CWHILE
      RETURN
C
C
C    **********************************************************
C
C
      PROC SIDCEL
C
C     THIS PROC SETS IMARK=1 IF TRACK CROSSES
C     FROM RING 3 TO 2 OR IF CROSSES CORNER
C
C
      IMARK=0
      KC1=HISTR(1,NTR)
      KC1=IPCL(IABS(KC1))
      KC2=HISTR(HNREL(NTR),NTR)
      KC2=IPCL(IABS(KC2))
C     CALL CHKX(38,KC1,KC2,KC2)
      IF KC1.NE.KC2
      THEN
      IF KC1.LE.48
      THEN
      IF(KC1-KC2.NE.24) IMARK=1
      ELSE
      IMARK=1
      CIF
      CIF
      CPROC
C
C     **********************************************************
C
      PROC PAR
C
C     THIS PROC DETERMINES WHICH SIDCON FOR TRACK KT IS CONSISTENT
C     WITH LR FLAG IN MIDOUT
C     IPER=0   :   BOTH
C     IPER=1   :   RIGHT
C     IPER=-1  :   LEFT
C
      IPER=0
      IF IBKK(20).NE.0.AND.LR.NE.0.AND.NRHT(KT).GE.IBKK(19)
      THEN
      IPER=LR
      IF(LAND(MSKCR1,LBL(KT)).NE.0.AND.IUDFLG.EQ.3) IPER=-IPER
      CIF
      CPROC
      END
