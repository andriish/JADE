C   08/04/81 107101020  MEMBER NAME  BAKPAK1  (PATRECSR)    SHELTRAN
      SUBROUTINE BAKPAK(ICHNG)
C
C     THIS SUB LOOPS OVER BACKTRACE TRACKS TRYING ALL POSSIBLE
C     CONNECTIONS IF TRACKS BEGIN AND END CLOSE TO ONE ANOTHER
C     THE CONNECTION IS ACCEPTED IF THE RMS IS LT RMSLIM.
C     CONNECTIONS WHERE THE RMS IS BETWEEN RMSLI1 AND RMSLI2
C     ARE MARKED AND THIS PARENT TRACK IS TRIED AGAIN AT THE
C     END (EXCEPT ON THE FIRST ENTRY TO BAKPAK).
C
C     FIRST ENTRY TO BAKPAK IS SIGNALLED BY ICHNG=99
C     SUBSEQUENT ENTRIES BY ICHNG=0
C
      IMPLICIT INTEGER*2 (H)
C
      LOGICAL DEADCL
C
#include "cpatlm.for"
#include "cdata.for"
#include "cworkeq.for"
#include "cworkpr.for"
      COMMON/CHEADR/HEAD(17),HRUN,HEV
      COMMON/CADMIN/IEVTP,NREC,NRWRIT,NRERR
C     HTRK IS TRACK NO IN PATR BANK OF CORRESPONDING BACKTR TRACK
C     COMMON/CBKPAT/HTRK(100)
C
N      HREP STORES PARENT TRACK NO TO TRY AGAIN
       DIMENSION HTEMP(9),MAXC(3),HREP(10)
       EQUIVALENCE (RMSLI1,XBKK(33)),(IDLIM,IYBKK(10))
       EQUIVALENCE (JJPR,IXBKK(38))
       DATA MSKLRL /ZFFFFEFFF/,MAXC/24,24,48/
C
C     IPPATR=IDATA(IBLN('PATR'))
      CALL SETSL(HREP(1),0,20,0)
      RMSLI2=XBKK(34)
      IENTER=ICHNG
      IF(ICHNG.EQ.99) RMSLI2=0.
C     LDTRK=IDATA(IPPATR+3)
C     IPPATR=IDATA(IPPATR+1)+IPPATR
      IREM=IXYF(1)
      IXYF(1)=9 + 32
      ICHNG=0
      ILT=0
      IRPKNT=0
      RMSLIM=RMSLI1
      FOR JKREP=1,2
      IKXKTR=0
      REPEAT
N     EXTRACT PARENT TRACK NO
      IKXKTR=IKXKTR+1
      KTR=IKXKTR
      IF JKREP.EQ.2
      THEN
N     FOR SECOND PASS TRACK NOS ARE IN HREP
      ILT=ILT+1
      IF ILT.LE.ITREP
      THEN
      KTR=HREP(ILT)
      ELSE
      XREPEAT
      CIF
      CIF
      IF HNREL(KTR).NE.0
      THEN
       INUM=HNREL(KTR)
      IXX=KTR
      PERFORM CELLAN
      IF IR1.GT.1.OR.IR2.LT.3
      THEN
N     RING NO OF INNER MOST TRACKEL
      IRNG1=IR1
N     RING NO OF OUTER MOST TRACKEL
      IRNG2=IR2
      ICL1=KMP2
      LR1=0
N     IF TRACK IS IN MORE THAN ONE CELL FREEZE LR
      IF(KMP1.NE.KMP2) LR1=1
C     IF(LAND(JJPR,64).NE.0)WRITE(6,98) KTR,KMP1,KMP2,IR1
C98   FORMAT('0TRACK NO',I5,' CELL 1  CELL 2',2I5,'   ENDS IN RING',I5)
      RMSOLD=9999.
N     LOOP OVER CAND TRACKS
      FOR JTR=1,100
      IF HNREL(JTR).NE.0.AND.JTR.NE.KTR
      THEN
      IXX=JTR
      PERFORM CELLAN
N     TRY CONNECTION IF CAND IS IN NEXT RING OR IS IS IN
      IF IR2.LT.IRNG1.OR.KMP1.NE.KMP2.AND.IR2.LE.IRNG1
N     SAME RING BUT HAS MORE THAN ONE CELL
      THEN
      IPTRK=HISTR(1,JTR)
      IPTRK=IABS(IPTRK)
      ISPEC=0
      IF(HNREL(JTR).EQ.1.AND.NRHT(IPTRK).LT.5.AND.IR2.EQ.1) ISPEC=1
N     DUMMY
      IF HNREL(JTR).GT.1.OR.NRHT(IPTRK).GT.0.OR.IR2.GT.1
      THEN
C     IF(LAND(JJPR,64).NE.0)WRITE(6,99) JTR,KMP1,KMP2,IR2
C99   FORMAT(' CAND TRACK',I5,' CELL 1 CELL 2',2I5,' BEGINS IN RING',I5)
      ICL2=KMP1
      IF(IRNG1.EQ.3) ICL=(ICL1+1)/2
      IF(IRNG1.EQ.2) ICL=ICL1-24
      IF(IRNG1.EQ.3.AND.IR2.EQ.1) ICL=ICL-24
      IF(IR2.EQ.IRNG1) ICL=ICL1
N     COMPUTE CELL DIF BETWEEN CAND AND PARENT
      IDIF=IABS(ICL-ICL2)
      IF IDIF.GT.MAXC(IR2)/2
      THEN
      IF ICL.GT.ICL2
      THEN
       ICL=ICL-MAXC(IR2)
      IDIF=IABS(ICL-ICL2)
      ELSE
       ICL2=ICL2-MAXC(IR2)
      IDIF=IABS(ICL-ICL2)
      CIF
      CIF
N     REFUSE SKIP RING CONN FOR LT 8 HITS IN FIRST PASS
      IF(IENTER.EQ.99.AND.IABS(IR2-IRNG1).GT.1.AND.IXBKK(35).EQ.0
N     UNLESS CALL PATROL FLAG IS ON
     % .AND.HNREL(JTR).EQ.1.AND.NRHT(IPTRK).LT.8) IDIF=99
      LR2=0
      IF(KMP1.NE.KMP2) LR2=1
C     IF(LAND(JJPR,64).NE.0)WRITE(6,97) ICL1,ICL,ICL2,IDIF
C 97  FORMAT(' PAR CELL',I5,'  EX CELL',I5,' CAND CELL',I5,'DIFF',I5)
      IF IDIF.LE.IDLIM
      THEN
      IAB=HNREL(JTR)
      CALL MVC(HTEMP(1),0,HISTR(1,KTR),0,18)
C     IF(LAND(JJPR,64).NE.0)WRITE(6,96) (HISTR(IP,KTR),IP=1,9)
C96   FORMAT('  ORIG HISTR',9I5)
C     IF(LAND(JJPR,64).NE.0)WRITE(6,89) (HISTR(IP,JTR),IP=1,9)
C89   FORMAT('   CAND HISTR  ',9I5)
      LRP=1
      LRD=1
      FOR IKOUNT=1,4
      IF IKOUNT.GE.2
      THEN
      IF(LR1.NE.0.AND.LR2.NE.0) XFOR
      IF LR1.NE.0.AND.LR2.EQ.0
      THEN
      IF IKOUNT.EQ.2
      THEN
      LRD=-LRD
      ELSE
      XFOR
      CIF
      CIF
      IF LR1.EQ.0.AND.LR2.NE.0
      THEN
      IF IKOUNT.EQ.2
      THEN
      LRP=-1
      ELSE
      XFOR
      CIF
      CIF
      IF LR1.EQ.0.AND.LR2.EQ.0
      THEN
      IF(IKOUNT.EQ.2) LRD=-LRD
      IF(IKOUNT.EQ.3) LRP=-LRP
      IF(IKOUNT.EQ.4) LRD=-LRD
      CIF
      CIF
C     IF(LAND(JJPR,64).NE.0)WRITE(6,95) LRP,LRD
C 95  FORMAT('  LR (PARENT) ',I5,'    LR (DAUGHTER)   ',I5)
      FOR JJ=1,INUM
      HISTR(JJ,KTR)=HISTR(JJ,KTR)*LRP
      CFOR
      PERFORM ADD
C     IF(LAND(JJPR,64).NE.0)WRITE(6,93) (HISTR(IP,KTR),IP=1,9)
C93   FORMAT('  NEW HISTR',9I5)
C     IAB=HNREL(NTR)
C     IF(IXXB.NE.0) PRINT 37,KX,NTR,(HISTR(IR,NTR),IR=1,IAB)
C     IF(IXXB.NE.0) PRINT 38,(HTEMP(IR),IR=1,9)
C37   FORMAT(' KX, NTR,HISTR :',11I5)
C38   FORMAT(' OLD HISTR :',9I5)
      IF IEXIT.EQ.99.OR.IEXIT.EQ.98
      THEN
      CALL MVC(HISTR(1,KTR),0,HTEMP(1),0,18)
C     IF(LAND(JJPR,64).NE.0) WRITE(6,78) KTR,JTR
C78   FORMAT('  *** EXIT TOO MANY ELEMENTS, TRACKS',2I5)
      XFOR
      CIF
N     IF CAND AND PARENT OVERLAP IN ONE RING AND HAD NO
      IF JCOUNT.EQ.INUM+IAB.AND.IR2.EQ.IRNG1
N     TRCAKELS IN COMMON , CHECK NO OF LAYERS BETWEEN BEGINING
      THEN
N     OF ONE TRACK AND END OF THE OTHER
      ML1=INUM
      ML1=HISTR(ML1,KTR)
      ML1=IABS(ML1)
      ML1=NWR1(ML1)
      ML2=HISTR(1,JTR)
      ML2=IABS(ML2)
      ML2=NWR2(ML2)
      IF ML2-ML1.GE.IBKK(7)
      THEN
      CALL MVC(HISTR(1,KTR),0,HTEMP(1),0,18)
      IF(LAND(JJPR,64).NE.0) PRINT 295,ML1,ML2
 295  FORMAT('   LAYER DIFFERENCE IS TOO LARGE',2I5)
      XFOR
      CIF
      CIF
       HPOLD=HPFREE
       CALL FXYZ(KTR)
       HPTR0=HPFREE
       HPTR9=HPTR0+49
       HLDTR=50
      HPFREE=HPTR9+1
      IF HPFREE.LE.HPLAST
      THEN
      CALL XYFIT
      RMS=WRK(HPTR0+22)
C     IF(LAND(JJPR,64).NE.0)WRITE(6,92) RMS
C92   FORMAT('  ******* RMS  *********',F10.5)
N     ON FIRST PASS MARK PARENT TRACKS WHICH HAVE A CONNECTION
      IF RMS.LT.RMSLI2.AND.RMS.GT.RMSLIM.AND.JKREP.EQ.1.AND.ISPEC.EQ.0
N    BETWEEN RMSLI1 AND RMSLI2
     & .AND.(HREP(IRPKNT).NE.KTR.AND.IRPKNT.GT.0.OR.IRPKNT.EQ.0)
     * .AND.IENTER.NE.99
      THEN
      IF IRPKNT.LT.10
      THEN
      IRPKNT=IRPKNT+1
      HREP(IRPKNT)=KTR
C     IF(LAND(JJPR,64).NE.0) WRITE(6,843) KTR
C843  FORMAT('  UNLESS THIS TRACK IS SUCCESSFUL MUST GO AGAINSTARTING
C    ¢ WITH TRACK',I5)
      CIF
      CIF
C     IF RMS.LT.1.8.AND.RMS.GT.RMSLI2.AND.JKREP.EQ.1.AND.IDIF.EQ.0
C    % .AND.IR2.EQ.IRNG1.AND.(IRNG1.NE.IR1.OR.IRNG2.NE.IR2)
C     THEN
C     PRINT 385,(HISTR(IP,KTR),IP=1,9)
C     PRINT 385,(HISTR(IP,JTR),IP=1,9)
C385  FORMAT('   ',9I5)
C     IPTRK1=HTRK(KTR)
C     PRINT 624,IPTRK1
C624  FORMAT('   TRACK NO IN TRACK BANK ',I5)
C     IF(IPTRK1.NE.IDATA(IPPATR+LDTRK*(IPTRK1-1)+1))WRITE(6,765)
C765  FORMAT(' @@@@@@ ERROR IN TRACK BANK LOCATION')
C     IPTRK1=IPPATR+LDTRK*(IPTRK1-1)
C     CRV1=ADATA(IPTRK1+25)
C     RMS1=ADATA(IPTRK1+23)
C     IPTRK2=HTRK(JTR)
C     PRINT 624,IPTRK2
C     IF(IPTRK2.NE.IDATA(IPPATR+LDTRK*(IPTRK2-1)+1))WRITE(6,765)
C     IPTRK2=IPPATR+LDTRK*(IPTRK2-1)
C     CRV2=ADATA(IPTRK2+25)
C     RMS2=ADATA(IPTRK2+23)
C     PRINT 913,CRV1,CRV2,RMS1,RMS2
C913  FORMAT('  CRV   RMS  ',4F10.7)
C     CIF
N     SKIP RING CONNECTION
      IF IRNG1.EQ.3.AND.IR2.EQ.1.AND.IXBKK(35).NE.0
     % .AND.RMS.LT.RMSLIM.AND.RMS.LT.RMSOLD
      THEN
      IPREM1=IGFP(1)
      IPREM2=IGFP(6)
      IPREM3=IGFP(9)
       PREM4=GFP(2)
       PREM5=GFP(14)
      IGFP(6)=17
      IGFP(9)=0
      GFP(2)=999999.
      GFP(14)=999999.
      IGFP(1)=LOR(IGFP(1),1)
      RMIN=150.
      RMAX=850.
      CALL PATROL(RMIN,RMAX)
C     CALL PCWORK(0,0,0,1,0)
      IFOUND=0
      FOR ICNT=HPHT0,HPHT9,HLDHT
      IF(IWRK(ICNT+10).LT.2.AND.IWRK(ICNT+12).EQ.2) IFOUND=IFOUND+1
      CFOR
C     WRITE(6,206) IFOUND
C206  FORMAT('  PATROL FOUND ',I5,'       HITS')
C     WRITE(6,93) (HISTR(IP,KTR),IP=1,9)
      IC1=ICL2+24
      IC2=(ICL1+1)/2
      NRUN=HRUN
C     WRITE(6,773) NRUN,RMS
C773  FORMAT(' RUN ,RMS ',I10,F10.5)
C     WRITE(6,298) IDIF,ICL,ICL1,ICL2,IC1,IC2
C298  FORMAT(' IDIF,ICL,ICL1,ICL2,IC1,IC2 ',6I5)
      NCL1=HNTCEL(IC1+1)-HNTCEL(IC1)
      NCL2=HNTCEL(IC2+1)-HNTCEL(IC2)
      IF(IDIF.EQ.0.AND.IFOUND.LT.IYBKK(9).AND..NOT.(DEADCL(IC1,NRUN)
     $.AND.NCL1.EQ.0.OR.DEADCL(IC2,NRUN).AND.NCL2.EQ.0)) RMS=99.
C     IF(IDIF.EQ.0.AND.IFOUND.LT.IYBKK(9).AND.(DEADCL(IC1,NRUN)
C    $.AND.NCL1.EQ.0.OR.DEADCL(IC2,NRUN).AND.NCL2.EQ.0)) WRITE(6,65)
      IF(IDIF.EQ.1.AND.IFOUND.LT.IYBKK(16).AND..NOT.(DEADCL(IC1,NRUN)
     $.AND.NCL1.EQ.0.OR.DEADCL(IC2,NRUN).AND.NCL2.EQ.0)) RMS=99.
C     IF(IDIF.EQ.1.AND.IFOUND.LT.IYBKK(16).AND.(DEADCL(IC1,NRUN)
C    $.AND.NCL1.EQ.0.OR.DEADCL(IC2,NRUN).AND.NCL2.EQ.0)) WRITE(6,65)
C 65  FORMAT('   &&&&&&&&^^^^^^^^^^^ DIFF')
      IGFP(1)=IPREM1
      IGFP(6)=IPREM2
      IGFP(9)=IPREM3
       GFP(2)=PREM4
       GFP(14)=PREM5
      CIF
      IF RMS.LT.RMSLIM.AND.RMS.LT.RMSOLD
      THEN
      IF ISPEC.EQ.0.OR.ISPEC.EQ.1.AND.RMS.LT.RMSLI1
      THEN
      RMSOLD=RMS
      ITRACK=JTR
      LRDFIN=LRD
      LRPFIN=LRP
C     WRITE(6,91)
C91   FORMAT('  %%%%%%%% SUCCESS  %%%%%%%%%%%')
      CIF
      CIF
      ELSE
      PRINT 33,HRUN,HEV,NREC,KTR,JTR
 33   FORMAT(' +++++++++  NOT ENOUGH SPACE IN CWORK  +++++++(BAKPAK)',
     & 5I10)
      CIF
      HPFREE=HPOLD
      CALL MVC(HISTR(1,KTR),0,HTEMP(1),0,18)
      CFOR
      HNREL(KTR)=INUM
      CIF
      CIF
      CIF
      CIF
      CFOR
      IF RMSOLD.NE.9999.
      THEN
      FOR JJ=1,INUM
      HISTR(JJ,KTR)=HISTR(JJ,KTR)*LRPFIN
      CFOR
N     CANCEL NEED TO REPEAT WITH THIS TRACK
      IF HREP(IRPKNT).EQ.KTR.AND.JKREP.EQ.1
      THEN
      IKXKTR=IKXKTR-1
      HREP(IRPKNT)=0
      IRPKNT=IRPKNT-1
      CIF
      IAB=HNREL(ITRACK)
      JTR=ITRACK
      LRD=LRDFIN
      PERFORM ADD
      FOR IY=1,JCOUNT
      ITC=HISTR(IY,KTR)
      ITC=IABS(ITC)
      LBL(ITC)=LAND(LBL(ITC),MSKLRL)
      CFOR
      IF(IEXIT.EQ.99.OR.IEXIT.EQ.98) WRITE(6,769)
 769  FORMAT('  ********* ERROR IN BAKPAK  EXIT ****** ')
      HNREL(ITRACK)=0
      ICHNG=1
C     IF(LAND(JJPR,64).NE.0)WRITE(6,57) KTR
C57   FORMAT('     FINAL SELECTION     TRACK',I5)
C     IF(LAND(JJPR,64).NE.0)WRITE(6,56) RMSOLD,ITRACK,LRPFIN,LRDFIN
C56   FORMAT('  RMS ',F10.5,'  TRACK ',I5,'  LRP,LRD  ',2I5)
C     IF(LAND(JJPR,64).NE.0)WRITE(6,55)(HISTR(IP,KTR),IP=1,9),HNREL(KTR)
C55   FORMAT(' SELECTED HISTR ',9I5,' NO OF ELS',I5)
      CIF
      CIF
      CIF
      UNTIL IKXKTR.GE.100
      IF HREP(1).EQ.0
      THEN
      XFOR
      ELSE
      ITREP=IRPKNT
      RMSLIM=RMSLI2
C     IF(LAND(JJPR,64).NE.0) WRITE(6,265) ITREP,HREP
C265  FORMAT('0  START AGAIN &&&&&&&&&&& WITH',I5,'  TRACKS=',10I5)
      CIF
      CFOR
      IXYF(1)=IREM
      IBTRK=NTR
      NTR=100
C     CALL TRLORD
      NTR=IBTRK
      RETURN
      PROC CELLAN
      IR1=1
      IR2=1
      KMP1=HISTR(1,IXX)
      KMP1=IABS(KMP1)
      KMP1=IPCL(KMP1)
      KMP2=HISTR(HNREL(IXX),IXX)
      KMP2=IABS(KMP2)
      KMP2=IPCL(KMP2)
      IF(KMP2.GT.24) IR1=2
      IF(KMP2.GT.48) IR1=3
      IF(KMP1.GT.24) IR2=2
      IF(KMP1.GT.48) IR2=3
      CPROC
      PROC ADD
C
C     THIS PROC ADDS TWO BACKTR ARRAYS TOGETHER
C     DELETING COMMON TRACK ELS
C
      IEXIT=0
      JCOUNT=INUM
      FOR KK=1,IAB
      ISIG=0
      ITP2=HISTR(KK,JTR)
      ITP2=IABS(ITP2)
      FOR IJT=1,INUM
      ITP1=HISTR(IJT,KTR)
      IF IABS(ITP1).EQ.ITP2
      THEN
      ISIG=1
      XFOR
      CIF
      CFOR
      IF ISIG.EQ.0
      THEN
      JCOUNT=JCOUNT+1
      IF JCOUNT.LE.9
      THEN
      HISTR(JCOUNT,KTR)=HISTR(KK,JTR)*LRD
      ELSE
      IEXIT=99
      XFOR
      CIF
      CIF
      CFOR
C     IF(LAND(JJPR,64).NE.0.AND.JCOUNT.NE.INUM+IAB)WRITE(6,387)
C    & JTR,KTR
C 387 FORMAT('  ********* SOME TRACKELS DELETED IN JOINING TRACKS',2I5)
      HNREL(KTR)=JCOUNT
      IF JCOUNT.EQ.INUM.OR.JCOUNT.EQ.IAB
      THEN
      IEXIT=98
C     IF(LAND(JJPR,64).NE.0) WRITE(6,774)
C 774 FORMAT('  %%%% PHONY FIT')
      CIF
      CPROC
      END
