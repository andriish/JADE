C   03/09/79 504150529  MEMBER NAME  INPATC8  (JADENEWS)    SHELTRAN
      SUBROUTINE INPATC
      IMPLICIT INTEGER*2 (H)
C
C-----------------------------------------------------------------------
C        INITIALIZE CONSTANTS USED BY PATTERN RECOGNITION PROGRAMS
C-----------------------------------------------------------------------
C
#include "cdata.for"
#include "cdsmax.for"
#include "cjdrch.for"
C
C   CHANGED TO CHECK RUN NUMBER AND TO RETURN IF NO NEW RUN NUMBER
C
      DATA HHHRUN /-1/
C
      IPHE = IDATA(IBLN('HEAD'))
      HHRUN = HDATA(2*IPHE+10)
      IF(HHRUN.EQ.HHHRUN) RETURN
      HHHRUN = HHRUN
C
C---------------------------
C     ANGLES OF CELL BOUNDS
C---------------------------
      DFI0 = 3.1415927 / 12.
      DFI1 = 3.1415927 / 24.
      DFI3 = 3.1415927 / 48.
C-------------------------------------------
C    WIRE PLANE DIRECTIONS FOR RINGS 1 AND 2
C-------------------------------------------
      FI = DFI1
      FOR I=1,6
        DX = COS(FI)
        DY = SIN(FI)
        DIRWR1(I   ,1) = DX
        DIRWR1(I   ,2) = DY
        DIRWR1(I+ 6,1) =-DY
        DIRWR1(I+ 6,2) = DX
        DIRWR1(I+12,1) =-DX
        DIRWR1(I+12,2) =-DY
        DIRWR1(I+18,1) = DY
        DIRWR1(I+18,2) =-DX
        FI = FI + DFI0
      CFOR
C------------------------------------
C    WIRE PLANE DIRECTIONS FOR RING 3
C------------------------------------
      FI = DFI3
      FOR I=1,12
        DX = COS(FI)
        DY = SIN(FI)
        DIRWR3(I   ,1) = DX
        DIRWR3(I   ,2) = DY
        DIRWR3(I+12,1) =-DY
        DIRWR3(I+12,2) = DX
        DIRWR3(I+24,1) =-DX
        DIRWR3(I+24,2) =-DY
        DIRWR3(I+36,1) = DY
        DIRWR3(I+36,2) =-DX
        FI = FI + DFI1
      CFOR
C---------------------------------
C    DRIFT SPACE DIRECTIONS
C---------------------------------
      FOR I=1,96
C     GET WIRE PLANE DIRECTION
      K = I
      IF(K.GT.24) K=K-24
      IF I.LE.48
      THEN
      DX=DIRWR1(K,1)
      DY=DIRWR1(K,2)
      ELSE
      DX=DIRWR3(K-24,1)
      DY=DIRWR3(K-24,2)
      CIF
C     FORM DRIFT DIRECTION TRANSFORMATION MATRIX
C       TRMATS(CELL,L/R)
        TRMATS(I,1) = -( DY * COSDRI(I,1) + DX * SINDRI(I,1) )
        TRMATS(I,2) = -( DY * COSDRI(I,2) + DX * SINDRI(I,2) )
        TRMATC(I,1) =  ( DX * COSDRI(I,1) - DY * SINDRI(I,1) )
        TRMATC(I,2) =  ( DX * COSDRI(I,2) - DY * SINDRI(I,2) )
      CFOR
C-------------------------------
C     INITIALIZE MAX. DRIFTSPACE
C-------------------------------
      FACTL1 = SIN(DFI1) / COS(DFI1+DRIDEV)
      FACTR1 = SIN(DFI1) / COS(DFI1-DRIDEV)
      FACTL3 = SIN(DFI3) / COS(DFI3+DRIDEV)
      FACTR3 = SIN(DFI3) / COS(DFI3-DRIDEV)
      R1 = FSENSW(1)
      R2 = FSENSW(2)
      R3 = FSENSW(3)
      FOR ILAY=1,16
C       DSMAX(LAYER,RING,L/R)
        DSMAX(ILAY,1,1) = R1 * FACTL1
        DSMAX(ILAY,2,1) = R2 * FACTL1
        DSMAX(ILAY,3,1) = R3 * FACTL3
        DSMAX(ILAY,1,2) = R1 * FACTR1
        DSMAX(ILAY,2,2) = R2 * FACTR1
        DSMAX(ILAY,3,2) = R3 * FACTR3
        R1 = R1 + RINCR(1)
        R2 = R2 + RINCR(2)
        R3 = R3 + RINCR(3)
      CFOR
      CALL INBACK
      RETURN
      END
C
C    ***************************************
C
      SUBROUTINE INBACK
      IMPLICIT INTEGER*2 (H)
C--------------------------------------------
C      INITIALIZATION OF CONSTANTS FOR BACKTR
C--------------------------------------------
#include "cdsmax.for"
#include "cjdrch.for"
C
       DIMENSION LFTCL(3),LSTCL(3),NCELL(3),TANDEL(3)
       EQUIVALENCE (IBCK(1),LSTCL(1)),(IBCK(4),LFTCL(1))
       EQUIVALENCE (IBCK(7),NCELL(1)),(DBCK(1),TANDEL(1))

      DIMENSION GB(3)
      DATA GB/376.,586.,797./
C
      NCELL(1)=24
      NCELL(2)=24
      NCELL(3)=48
      LSTCL(1)=24
      LSTCL(2)=48
      LSTCL(3)=96
      LFTCL(1)=1
      LFTCL(2)=25
      LFTCL(3)=49
      DEL=3.141593/48.
      DBCK(4)=COS(DEL-DRIDEV)
      DBCK(5)=COS(DEL+DRIDEV)
      DBCK(6)=TAN(DEL)
      DBCK(7)=TAN(DEL+3.141593/24.)
      DBCK(8)=SIN(DEL)
      DBCK(9)=-DBCK(8)
      DEL=DEL+3.141593/24.
      DBCK(10)=COS(DEL-DRIDEV)
      DBCK(11)=COS(DEL+DRIDEV)
      DBCK(12)=SIN(DEL)
      DBCK(13)=-DBCK(12)
      DEL=6.283185/24.
      DBCK(14)=COS(DEL-DRIDEV)
      DBCK(15)=COS(DEL+DRIDEV)
      DBCK(16)=SIN(DEL)
      DBCK(17)=-DBCK(16)
      DEL=DEL+3.141593/48.
      DBCK(18)=COS(DEL-DRIDEV)
      DBCK(19)=COS(DEL+DRIDEV)
      DBCK(20)=SIN(DEL)
      DBCK(21)=-DBCK(20)
      DBCK(22)=TAN(3.141593/12.+3.141593/48.)
N     INITIALIZE DHALF AND HMCH ARRAYS
      FOR KRING=1,3
      DEL=3.141593/NCELL(KRING)
      TANDEL(KRING)=TAN(DEL*2.)
      FOR IW=1,16
      DSMX=DSMAX(IW,KRING,1)
      IF(KRING.EQ.3) DSMSP=DSMAX(IW,2,1)
      ALSIN=-DRISIN
      AL=-DRIDEV
      PERFORM INIT
      HMCH(IW,KRING,1)=IK
      DHALF(IW,KRING,1)=DT
      DTWICE(IW,KRING,1)=DTW
      DSMX=DSMAX(IW,KRING,2)
      IF(KRING.EQ.3) DSMSP=DSMAX(IW,2,2)
      ALSIN=DRISIN
      AL=DRIDEV
      PERFORM INIT
      HMCH(IW,KRING,2)=IK
      DHALF(IW,KRING,2)=DT
      DTWICE(IW,KRING,2)=DTW
      CFOR
      CFOR
      RETURN
C
C *********************
C
      PROC INIT
C
C     THIS PROC CALCULATES QUANTITIES FOR HMCH AND DHALF ARRAYS
C     DHALF ARRAY CONTAINS 'HALF' THE MAX DRIFT DISTANCE FOR EACH WIRE
C     AND IS USED IN MATCHING TRACKS FROM RING 3 TO RING 2.
C     HMCH ARRAY CONTAINS THE WIRE NO. WHICH WILL FIRE IN THE
C     NEIGHBOURING CELL IF THE TRACK GOES THROUGH THE CELL
C     SIDEWALL.
C     THE CONVENTION IS THAT 1 IS LEFT AND 2 IS RIGHT.
C
      W=FSENSW(KRING)+FLOAT(IW-1)*RINCR(KRING)
      X=SQRT(W**2+DSMX**2-2.*W*DSMX*ALSIN)
      DTW=1.-TAN(DEL)*TAN(DEL-AL)
      DTW=2.*DSMX/DTW
      IF KRING.EQ.2
      THEN
      DTW=1.-TAN(DEL*.5)*TAN(DEL-AL)
      DTW=DSMX*(1.+TAN(DEL*.5)/TAN(DEL))/DTW
      CIF
      IF KRING.EQ.3
      THEN
      DTW=1.-TAN(DEL*1.5)*TAN(DEL-AL)
      DTW=DSMSP*(1.+TAN(DEL*1.5)/TAN(DEL))/DTW
      CIF
      DT=TAN(DEL*0.5)*TAN(DEL*0.5-AL)
N     DT IS DHALF
      DT=DSMX*0.5*(1.-DT)
N     NOW CALCULATE MCH ARRAY
      IF X.LT.GB(KRING)
      THEN
      IK=-5
      E=X*COS(AL+DEL)/DRICOS
      E=E-FSENSW(KRING)
      IF(E.GE.-5.) IK=(E+5.)/RINCR(KRING)
      IF(IK.GT.15) IK=20
      ELSE
      IK=20
      CIF
      CPROC
      END
