C   25/10/83 708302136  MEMBER NAME  TRKGMV   (S)           FORTRAN
C-----------------------------------------------------------------------
      SUBROUTINE TRKGMV(PV,R0,R,P1,P2,*,*)
C-----------------------------------------------------------------------
C
C   AUTHOR:   J. HAGEMANN 22/11/82 :  TRACKING OF PHOTONS THROUGH NEW
C             R. RAMCKE               DETECTOR CONFIGURATION (VTX CHAM)
C
C   LAST MOD  J. HAGEMANN 11/12/83 :  BETTER LG SIMULATION NOW POSSIBLE
C
C  ******************************************************************
C           ERRORS IN RADIATOR THICKNESSES CORRECTED   15.03.1986
C                                                       J. OLSSON
C           CORRECTED RADIATION LENGTH FOR VTXC MATTER 11.06.1986
C                                                       J. HAGEMANN
C  ******************************************************************
C     ADAPTED FOR USE WITH TOKYO SHOWER PROGRAM FOR LEAD GLASS
C                                       5.12.1986       J. OLSSON
C  ******************************************************************
C     CORRECT FOR LOW ENERGY BACKWARD PHOTONS CAUSING NEG. SQRT
C                                      30.08.1987       J. OLSSON
C
C      THIS ROUTINE TRACKS PHOTONS THROUGH THE DETECTOR
C      UP TO THE LEAD GLASS SURFACES OF BARREL COUNTERS AND END CAPS
C      HODOSCOPES ARE SET BY CONVERTING GAMMAS
C
C      PV = USUAL PARTICLE VECTOR OF DIMENSION 10
C           FIRST FOUR ARE FOURVECTOR COMPONENTS SEE TRCDET
C      R  = THREE DIMENSIONAL RADIUS VECTOR
C      PV AND R ARE OVER WRITTEN UPON RETURN
C      P1 AND P2 CONTAIN THE E+/E- VECTORS IF A CONVERSION HAS
C      TAKEN PLACE BEFORE THE END OF THE CENTRAL DETECTOR
C
C     RETURN 1 IS USED IF THERE IS NO CONVERSION OR A CONVERSION
C              IN THE COIL. IN THIS CASE PV IS CONVERTED INTO AN
C              ELECTRON VECTOR.
C     RETURN 2 IS USED IF THE PHOTON LEAVES THE DETECTOR WITHOUT
C              ANY INTERACTION I.E. THROUGH THE BEAM PIPE OR THROUGH
C              GAPS,
C              OR IF PHOTON HAS LESS THAN PMIN ENERGY.
C
C-----------------------------------------------------------------------
C
      LOGICAL * 1 LFLAG
      COMMON/CFLAG/LFLAG(10)
C
      COMMON / CGEO1  / BKGAUS, RPIP,DRPIP,XRLPIP, RBPC,DRBPC,XRLBPC,
     *                  RITNK,DRITNK,XRLTKI, R0ROH,DR0ROH,XR0ROH,
     *                  R1ROH,DR1ROH,XR1ROH, R2ROH,DR2ROH,XR2ROH,
     *                  R3ROH,DR3ROH,XR3ROH, ROTNK,DROTNK,XRLTKO,
     *                  RTOF,DRTOF,XRTOF, RCOIL, DRCOIL, XRCOIL,
     *                  ZJM,DZJM,XRZJM, ZJP,DZJP,XRZJP,
     *                  ZTKM,DZTKM,XRZTKM, ZTKP,DZTKP,XRZTKP,
     *                  ZBPPL,ZBPMI,ZTOFPL,ZTOFMI,
     *                  XRJETC,
     *                  RLG,ZLGPL,ZLGMI,OUTR2,CTLIMP,CTLIMM,DELFI,
     *                  BLXY,BLZ,BLDEP,ZENDPL,ZENDMI,DEPEND,
     *                  XHOL1,XHOL2,YHOL1,YHOL2
C
      COMMON / CGEOV  / RPIPV, DRPIPV, XRLPIV, RVXC, DRVXC, XRLVXC,
     *                  ZVXCM, DZVCM, XRZVCM, ZVXCP, DZVCP, XRZVCP,
     *                  XRVTXC
C
      COMMON / COLSON/ IPRO
C
C
C  SHOWER MC COMMON
C
      COMMON /CLGD56/ RADIUS(6),ZEND(2),ZWID,ZGAP,PHWID,
     2                ECXLST(24), ECYLST(24),ZECAP(4),ZPV(4),TPV,
     3                TH(4),THECP
C
C     RADIUS(1,2) = DISTANCE TO THE COIL SURFACES(INNER AND OUTER)
C       THESE VALUES ARE AVERAGES, SINCE THE TOTAL RADIATION LENGTH IS
C       IS ASSUMED TO COME FROM PURE AL. IN REALITY PLASTIC AND H20 IS
C       ALSO CONSIDERED:
C
C  1979-1983: 97.85 % X0 = 0.9785*88.947 MM = 87.03 MM
C        DATA RADIUS/ 900.0, 987.0, 1100.0, 1400.0, 1150.0, 1400.0/
C
C  1984-1986: 104.10 % X0 = 1.0410*88.947 MM = 92.59 MM
C        DATA RADIUS/ 900.0, 992.6, 1100.0, 1400.0, 1150.0, 1400.0/
C
C     RADIUS(3,4) = DISTANCE TO THE LEAD GLASS SURFACES(TYPE A)
C     RADIUS(5,6) = DISTANCE TO THE LEAD GLASS SURFACES(TYPE A-PR)
C
      DIMENSION PV(10),R0(3),R(3),P1(10),P2(10),RYAM(3)
C
      REAL ME/0.5E-03/
      REAL PMIN / .005 /
C
C  XRL10 GIVES THICKNESS OF CONVERTER UP TO PASSING BEAM PIPE
C       BEAMPIPE   0.0337  X0   (INCLUDES WATER COOLING PIPES..)
C      0.2776*BEAMPIPECHAMBER      0.00674 X0
C  XRL20 GIVES THICKNESS OF REMAINING CONVERTER UP TO INNER DETECTOR
C      0.7224*BEAMPIPECHAMBER      0.01754 X0
C       INNER TANKWALL             0.0787 X0
C       ZEROTH ROHACELL LAYER      0.0076 X0
C       1/3 OF I.D. GAS            0.0069 X0
C  XRL30 GIVES THICKNESS OF FIRST MIDDLE ROHACELL + I.D. GAS
C       FIRST MIDDLE ROHACELL    0.0109 X0
C       1/3 OF I.D. GAS          0.0069 X0
C  XRL40 GIVES THICKNESS OF FIRST MIDDLE ROHACELL + I.D. GAS
C       SECOND MIDDLE ROHACELL   0.0109 X0
C       1/6 OF I.D. GAS          0.0035 X0
C  XRL50 GIVES THICKNESS OF CONVERTER UP TO SETTING OF TOF COUNTERS
C       1/6 OF I.D. GAS          0.0035 X0
C       LAST ROHACELL LAYER      0.0147 X0
C       OUTER TANKWALL           0.1348 X0
C       INNER DET. CABLING       0.0252 X0  (ALSO G10 STRIPS)
C       Z-CHAMBER                0.0625 X0
C       1/2 TOF-COUNTERS         0.0238 X0
C  XRL60 GIVES THICKNESS OF CONVERTER AFTER MIDDLE OF TOF COUNTERS
C       1/2 TOF-COUNTERS         0.0238 X0
C       COIL AND HEATSHIELDS     0.7562 X0
C
      DATA XRL10 /0.04045/, XRL20 /0.11074/, XRL30 /0.0178/
      DATA XRL40 /0.0144/, XRL50 /0.2645/, XRL60 /0.7800/
      DATA ICLTRG /0/
C
C--------------------  C O D E  ----------------------------------------
C
C
      ICLTRG = ICLTRG + 1
      IF(ICLTRG.EQ.1) WRITE(6,3855)
3855  FORMAT('   * * *   NEW, CORRECTED TRKGMV VERSION, FROM 15.3.1986'/
     $       '   * * *   VERSION FOR TOKYO SHOWER PROGRAM    5.12.1986')
C
C
C      FOLLOW PHOTON FROM THE IA POINT TO THE BEAM PIPE (+VESSEL)
C
      DO 2 I10=1,10
      P1(I10)=0.
    2 P2(I10)=0.
      R(1)=R0(1)
      R(2)=R0(2)
      R(3)=R0(3)
C *** TEST PHOTON ENERGY
C
      IF(IPRO.NE.0) WRITE(6,1341) PV(6),PMIN
1341  FORMAT(' TRKGMV: PV6 PMIN ',2E12.4)
C
      IF( PV(6) .LT. PMIN ) RETURN2
      PVX=PV(1)/PV(6)
      PVY=PV(2)/PV(6)
      PVZ=PV(3)/PV(6)
C *** TEST ON GAMMA ANGLE
C
      IF(IPRO.NE.0) WRITE(6,1342) PVZ
1342  FORMAT(' TRKGMV: PVZ (0.968) ',2E12.4)
C
      IF(ABS(PVZ).GT.0.968) RETURN 2
      PVXY=PVX**2+PVY**2
C
      IF(IPRO.NE.0) WRITE(6,1343) PVXY
1343  FORMAT(' TRKGMV: PVXY        ',2E12.4)
C
      IF(PVXY.LT.1.E-5) RETURN 2
C
C      CALCULATE GEOMETRICAL CONST., TRACK TO THE BEAM PIPE
C
      IF(1.-PVZ*PVZ.LT.0.) WRITE(6,1591)
1591  FORMAT(' NEG SQRT POS  1')
      STH=SQRT(1.-PVZ**2)
C
C     XRL1=XRLPIV/STH
C     XRL2=XRLTKI/STH
C     XRL3=XR1ROH/STH
C     XRL4=XR2ROH/STH
C     XRL5=XRLTKO/STH
C     XRL6=XRCOIL/STH
C
      XRL1=XRL10/STH
      XRL2=XRL20/STH
      XRL3=XRL30/STH
      XRL4=XRL40/STH
      XRL5=XRL50/STH
      XRL6=XRL60/STH
C
      R1=R(1)**2+R(2)**2
      DR2=(RPIPV**2-R1)/PVXY
C
      IF(IPRO.NE.0) WRITE(6,1344) DR2
1344  FORMAT(' TRKGMV: DR2 (RPIPV) ',2E12.4)
C
      IF( DR2 .LE. 0. ) GO TO 10
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1592)
1592  FORMAT(' NEG SQRT POS  2')
      XL=-PVR+SQRT(PVR**2+DR2)
C
      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C
C
      IF(IPRO.NE.0) WRITE(6,1345) R(3),ZTKP
1345  FORMAT(' TRKGMV: R(3) ZTKP 1 ',2E12.4)
C
      IF(R(3).GT.ZTKP) GO TO 1000
      IF(R(3).LT.ZTKM) GO TO 1000
C
C     IF THERE IS A CONVERSION RETURN TO THE CALLING PROGRAM
C     WITH THE ELECTRON MOMENTA IN P1 AND P2
C
C     TEST FOR CONVERSION IN THE BEAM PIPE
C
      CALL EEPAIR(PV,P1,P2,XRL1,&10)
C
C ******                 CALCULATE ACTUAL CONVERSION POINT
      DCONV = DRPIPV * RN(DUM) / STH
      R(1)  = R(1) + DCONV*PVX
      R(2)  = R(2) + DCONV*PVY
      R(3)  = R(3) + DCONV*PVZ
      RETURN
C
C      FOLLOW GAMMA FROM PIPE TO INNER RADIUS OF THE TANK
C
   10 CONTINUE
C
C      CHECK IF PHOTON PASSES VERTEX CHAMBER END PLATE
C
C
      IF(IPRO.NE.0) WRITE(6,1346) PVZ
1346  FORMAT(' TRKGMV: PVZ AT VTXEPL ',2E12.4)
C
      IF(ABS(PVZ).GE.0.973 .OR. ABS(PVZ).LE.0.922)  GO TO 334
      XDRIN = XRZVCP / ABS(PVZ)
      IF(1-PVZ*PVZ.LT.0.) WRITE(6,1593)
1593  FORMAT(' NEG SQRT POS  3')
      RIN = ZVXCP*SQRT(1. - PVZ*PVZ)/ABS(PVZ)
      R1=R(1)*R(1)+R(2)*R(2)
      DR2=(RIN*RIN-R1)/PVXY
C
      IF(IPRO.NE.0) WRITE(6,1347) DR2
1347  FORMAT(' TRKGMV: DR2 AT VTXEPL ',2E12.4)
C
      IF(DR2 .LE. 0.) GO TO 334
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1594)
1594  FORMAT(' NEG SQRT POS  4')
      XL=-PVR+SQRT(PVR*PVR+DR2)
C
      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C
      IF(IPRO.NE.0) WRITE(6,1348) R(3),ZVXCP,DZVCP
1348  FORMAT(' TRKGMV: R3 ZVXCP DZVCP ',3E12.4)
C
      IF(R(3) .GE. ZVXCP+DZVCP) GO TO 1000
      IF(R(3) .LE. ZVXCM+DZVCM) GO TO 1000
C
C !!!!!  TEST FOR CONVERSION IN THE END PLATE OF VERTEX CHAMBER
C
      CALL EEPAIR(PV, P1, P2, XDRIN, &334)
C ******                 CALCULATE ACTUAL CONVERSION POINT
      DCONV = DZVCP * RN(DUM) / ABS(PVZ)
      R(1)  = R(1) + DCONV*PVX
      R(2)  = R(2) + DCONV*PVY
      R(3)  = R(3) + DCONV*PVZ
      WRITE(6,2222) DCONV,R(1),R(2),R(3)
 2222 FORMAT('  DCONV R1 R2 R3 ',4F12.3)
      RETURN
C
  334 CONTINUE
C                      INNER TANK WALL
      R1=R(1)**2+R(2)**2
      DR2=(RITNK**2-R1)/PVXY
C
      IF(IPRO.NE.0) WRITE(6,1349) DR2
1349  FORMAT(' TRKGMV: DR2 AT RITNK   ',3E12.4)
C
      IF( DR2 .LE. 0. ) GO TO 11
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1595)
1595  FORMAT(' NEG SQRT POS  5')
      XL=-PVR+SQRT(PVR**2+DR2)
C
      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C
      IF(IPRO.NE.0) WRITE(6,1350) R(3),ZTKP
1350  FORMAT(' TRKGMV: R3 ZTKP 2      ',3E12.4)
C
      IF(R(3).GT.ZTKP) GO TO 1000
      IF(R(3).LT.ZTKM) GO TO 1000
C
C      TEST FOR CONVERSION IN THE TANK WALL
C
      CALL EEPAIR(PV,P1,P2,XRL2,&11)
C ******                 CALCULATE ACTUAL CONVERSION POINT
      DCONV = DRITNK * RN(DUM) / STH
      R(1)  = R(1) + DCONV*PVX
      R(2)  = R(2) + DCONV*PVY
      R(3)  = R(3) + DCONV*PVZ
      RETURN
C
C      FOLLOW GAMMA FROM INNER TANK TO FIRST ROHACELL
C
   11 CONTINUE
      R1=R(1)**2+R(2)**2
      DR2=(R1ROH**2-R1)/PVXY
C
      IF(IPRO.NE.0) WRITE(6,1351) DR2
1351  FORMAT(' TRKGMV: DR2 AT R1ROH   ',3E12.4)
C
      IF( DR2 .LE. 0. ) GO TO 12
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1596)
1596  FORMAT(' NEG SQRT POS  6')
      XL=-PVR+SQRT(PVR**2+DR2)
C
      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C
      IF(IPRO.NE.0) WRITE(6,1352) R(3),ZTKP
1352  FORMAT(' TRKGMV: R3 ZTKP 3      ',3E12.4)
C
      IF(R(3).GT.ZTKP) GO TO 1000
      IF(R(3).LT.ZTKM) GO TO 1000
C
C      TEST FOR CONVERSION IN THE ROHACELL
C
      CALL EEPAIR(PV,P1,P2,XRL3,&12)
C ******                 CALCULATE ACTUAL CONVERSION POINT
      DCONV = DR1ROH * RN(DUM) / STH
      R(1)  = R(1) + DCONV*PVX
      R(2)  = R(2) + DCONV*PVY
      R(3)  = R(3) + DCONV*PVZ
      RETURN
C
C      FOLLOW GAMMA FROM FIRST ROHACELL TO SECOND ROHACELL
C
   12 CONTINUE
      R1=R(1)**2+R(2)**2
      DR2=(R2ROH**2-R1)/PVXY
C
      IF(IPRO.NE.0) WRITE(6,1353) DR2
1353  FORMAT(' TRKGMV: DR2 AT R2ROH   ',3E12.4)
C
      IF( DR2 .LE. 0. ) GO TO 13
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1597)
1597  FORMAT(' NEG SQRT POS  7')
      XL=-PVR+SQRT(PVR**2+DR2)
C
      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C
      IF(IPRO.NE.0) WRITE(6,1354) R(3),ZTKP
1354  FORMAT(' TRKGMV: R3 ZTKP 4      ',3E12.4)
C
      IF(R(3).GT.ZTKP) GO TO 1000
      IF(R(3).LT.ZTKM) GO TO 1000
C
C      TEST FOR CONVERSION IN THE ROHACELL LAYER
C
      CALL EEPAIR(PV,P1,P2,XRL4,&13)
C ******                 CALCULATE ACTUAL CONVERSION POINT
      DCONV = DR2ROH * RN(DUM) / STH
      R(1)  = R(1) + DCONV*PVX
      R(2)  = R(2) + DCONV*PVY
      R(3)  = R(3) + DCONV*PVZ
      RETURN
C
C      FOLLOW GAMMA FROM SECOND ROHACELL TO TANK
C
   13 CONTINUE
      R1=R(1)**2+R(2)**2
      DR2=(ROTNK**2-R1)/PVXY
C
C --------------------  START OF NEW CODE FOR TOKYO SHOWER PROGRAM
C
      IF(IPRO.NE.0) WRITE(6,3081) DR2,RADIUS(1),R1,PVXY
3081  FORMAT(' TRKGMV: DR2 RADIUS1 R1 PVXY ',4E14.6)
      IF( DR2 .GT. 0. ) GO TO 1515
      RY=R(1)**2+R(2)**2
      DRY=(RADIUS(1)**2-RY)/PVXY
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      PVRTST = PVR*PVR + DRY
      IF(PVRTST.LT.0.) WRITE(6,1598) RADIUS(1),R(1),R(2),PVX,PVY
1598  FORMAT(' NEG SQRT POS  8 ',5E16.8)
      IF(PVRTST.LT.0.) WRITE(6,1399) PVR,PVXY,DRY,DR2,RY
1399  FORMAT('          POS  8 ',5E16.8)
      IF(PVRTST.LT.0.) WRITE(6,1401) R0(1),R0(2),R0(3),R(3),PVZ
      IF(PVRTST.LT.0.) WRITE(6,1402) PV(1),PV(2),PV(3),PV(4)
1401  FORMAT('   POS  8  R0 R3 PVZ',5E16.8)
1402  FORMAT('   POS  8  PV ',4E16.8)
C
C THIS CASE IS ABNORMAL AND COULD COME FROM LOW ENERGY BREMSSTRAHLUN
C ON THE WAY BACK INTO THE INNER DETECTOR (AS SEEN FROM PRINT)
C NEGLECT THIS PARTICLE, SINCE SOFTWARE NOT CAPABLE OF FOLLOWING IT!
C
      IF(PVRTST.LT.0.) RETURN2
C
      XL=-PVR+SQRT(PVRTST)
C
      RYAM(1)=R(1)+XL*PVX
      RYAM(2)=R(2)+XL*PVY
      RYAM(3)=R(3)+XL*PVZ
      IREGFL = -1
      IF(RYAM(3).GT.0.) IREGFL = 1
      GO TO 15
1515  PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1599)
1599  FORMAT(' NEG SQRT POS  9')
      XL=-PVR+SQRT(PVR**2+DR2)
C
      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C     IF(R(3).GT.ZTKP.OR.R(3).LT.ZTKM) WRITE(6,5504)NRNR,R(3),ZTKP,ZTKM
C5504  FORMAT(' POS 14 NRNR R3 ZTKP M ',I6,3E12.4)
C
      IF(IPRO.NE.0) WRITE(6,3082) R(1),R(2),R(3),ZTKP
3082  FORMAT(' TRKGMV: R(1-3) ZTKP ',4E14.6)
C
      IF(R(3).GT.ZTKP) GO TO 1000
      IF(R(3).LT.ZTKM) GO TO 1000
C
C      TEST FOR CONVERSION IN THE TANK WALL
C
      PPROB=EXP(-XRL5*7./9.)
      IF(PV(4).LT.0.) WRITE(6,1600)
1600  FORMAT(' NEG SQRT POS 10')
      IF(PV(4).LT.0.5) PPROB=EXP(-XRL5*7./9.*(1.-6.2E-02/SQRT(PV(4))))
      RY=R(1)**2+R(2)**2
      DRY=(RADIUS(1)**2-RY)/PVXY
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DRY.LT.0.) WRITE(6,1601)
1601  FORMAT(' NEG SQRT POS 11')
      XL=-PVR+SQRT(PVR**2+DRY)
C
      RYAM(1)=R(1)+XL*PVX
      RYAM(2)=R(2)+XL*PVY
      RYAM(3)=R(3)+XL*PVZ
      IREGFL = 0
      IF(PPROB.GT.RN(DUM)) GO TO 15
C GO TO 15 MEANS NO CONVERSION
C     POLD = PV(6)
C     PNEW = POLD
C     IF(LFLAG(2)) PNEW=PV(6)-0.02*(1.+0.3*RN(DUM))*(0.5*XRL5+XRL6)
C     IF(PNEW.LT.0.) PNEW=0.001
C     PV(1) = PNEW/POLD*PV(1)
C     PV(2) = PNEW/POLD*PV(2)
C     PV(3) = PNEW/POLD*PV(3)
C     PV(6) = SQRT( PV(1)**2+PV(2)**2+PV(3)**2 )
C     PV(4)=SQRT(PV(6)**2+ME**2)
C     PV(5)=ME
C     PV(7)=1.
C     LFLAG(10) = .FALSE.
C
C      FOLLOW ELECTRON FROM TANK TO TOF COUNTERS. IT IS ASSUMED THAT
C      THE PHOTON CONVERTS INTO ONE ELECTRON WHICH CONTINUES WITH
C      DIRECTION AS THE PHOTON AS ENERGY LOSS ONLY SHOWER LOSSES ARE
C      CONSIDERED
C
      R1=R(1)**2+R(2)**2
      DR2=(RTOF**2-R1)/PVXY
      PVR=R(1)*PVX+R(2)*PVY
      PVR=PVR/PVXY
      IF(PVR*PVR+DR2.LT.0.) WRITE(6,1602)
1602  FORMAT(' NEG SQRT POS 12')
      XL=-PVR+SQRT(PVR**2+DR2)

      R(1)=R(1)+XL*PVX
      R(2)=R(2)+XL*PVY
      R(3)=R(3)+XL*PVZ
C
C     WRITE(6,1652) NRNR,R(3),ZTOFPL,ZTOFMI,ZTKP,ZTKM
C1652  FORMAT(' POS C  NRNR R3 ZTOFPM ZTKPM ',I6,5E12.4)
C
      IF(IPRO.NE.0) WRITE(6,1371) R(3),ZTOFPL
1371  FORMAT(' TRKGMV TANK CONV: R3 ZTOFPL ',2E12.4)
C
      IF(R(3).GT.ZTOFPL) GO TO 1000
      IF(R(3).LT.ZTOFMI) GO TO 1000
C
C      SET TOF COUNTER
C
C
      IF(IPRO.NE.0) WRITE(6,3083)
3083  FORMAT(' TRKGMV: SETTOF WILL BE CALLED')
C
      CALL SETTOF(R)
C                                           MOD E.ELSEN 22/08/80
      TRL=RTOF/ABS(PVZ)
      CALL ACTOF(PV,R,TRL)
C
C      FOLLOW GAMMA FROM TANK TO COIL
C
C  15 R1=R(1)**2+R(2)**2
C     DR2=(RCOIL**2-R1)/PVXY
C     IF( DR2 .LE. 0. ) GO TO 20
C     PVR=R(1)*PVX+R(2)*PVY
C     PVR=PVR/PVXY
C     XL=-PVR+SQRT(PVR**2+DR2)
C
C     R(1)=R(1)+XL*PVX
C     R(2)=R(2)+XL*PVY
C     R(3)=R(3)+XL*PVZ
C
C     IF(R(3).GT.ZLGPL) GO TO 1000
C     IF(R(3).LT.ZLGMI) GO TO 1000
C
C      TEST FOR CONVERSION IN THE COIL
C
C     IF(PV(5).GT.1.E-5) GO TO 20
C     PPROB=EXP(-XRL6*7./9.)
C     IF(PV(4).LT.0.5) PPROB=EXP(-XRL6*7./9.*(1.-6.2E-02/SQRT(PV(4))))
C     IF(PPROB.LT.RN(DUM)) GO TO 20
C     POLD = PV(6)
C     PNEW = POLD
C     IF(LFLAG(2)) PNEW=PV(6)-0.02*(1.+0.3*RN(DUM))*0.5*XRL6
C     IF(PNEW.LT.0.) PNEW=0.001
C     PV(1) = PNEW/POLD*PV(1)
C     PV(2) = PNEW/POLD*PV(2)
C     PV(3) = PNEW/POLD*PV(3)
C     PV(6) = SQRT( PV(1)**2+PV(2)**2+PV(3)**2 )
C     PV(4)=SQRT(PV(6)**2+ME**2)
C     PV(5)=ME
C     PV(7)=1.
C     PV(4)=SQRT(PV(6)**2+ME**2)
C     PV(5)=ME
C     PV(7)=1.
C     LFLAG(10) = .FALSE.
C
C      FOLLOW ELECTRON OR GAMMA FROM TOF TO LEAD GLASS
C
C  20 R1=R(1)**2+R(2)**2
C     DR2=(RLG**2-R1)/PVXY
C     IF( DR2 .LE. 0. ) GO TO 9000
C     PVR=R(1)*PVX+R(2)*PVY
C     PVR=PVR/PVXY
C     XL=-PVR+SQRT(PVR**2+DR2)
C
C     R(1)=R(1)+XL*PVX
C     R(2)=R(2)+XL*PVY
C     R(3)=R(3)+XL*PVZ
C
C     IF(R(3).GT.ZLGPL) GO TO 1000
C     IF(R(3).LT.ZLGMI) GO TO 1000
15    CONTINUE
C
      IF(IPRO.NE.0) WRITE(6,3084) IREGFL,(RYAM(IK),IK=1,3),
     $ (PV(IJ),IJ=1,4)
3084  FORMAT(' TRKGMV: IREGFL ',I3,' RYAM ',3E12.4,' PV ',4E12.4)
C
      CALL LGMC56(0,PV(1),RYAM(1),IREGFL,0)
      RETURN 2
C
C      FOLLOW PHOTON TO THE FACE OF THE END CAP COUNTERS
C
 1000 CONTINUE
      RABS=0.
      DO 1001 I3=1,3
 1001 RABS=RABS+R(I3)**2
      IF(RABS.LT.0.) WRITE(6,1603)
1603  FORMAT(' NEG SQRT POS 13')
      RABS=SQRT(RABS)
      DO 1002 I3=1,3
 1002 R(I3)=R(I3)/RABS
      ZLAM=ZPV(1)/R(3)
      IREGFL = -1
      IF( R(3) .GT. 0. ) ZLAM=ZPV(3)/R(3)
      IF( R(3) .GT. 0. ) IREGFL = 1
      DO 1003 I3=1,3
 1003 RYAM(I3)=ZLAM*R(I3)
C      WRITE(6,6682) ZLAM,ZPV(1),ZPV(3),(R(I3),I3=1,3)
C6682  FORMAT(' ZLAM ZPV1,3 R1-3 RYAM1-3 ',9E12.4)
C      CALL ENDCLG(RYAM(1),NCL,&9000)
C9000  WRITE(6,6681) IREGFL,NCL,(RYAM(I3),I3=1,3),(PV(I3),I3=1,4)
C6681  FORMAT(' IREGFL NCL RYAM PV ',I3,I5,3E12.4,2X,4E12.4)
      IF(IREGFL.NE.0) GO TO 15
      RETURN 2
      END
